{"version":3,"sources":["app.min.js"],"names":["domReady","fn","document","readyState","addEventListener","detectTouch","window","$","removeClass","addClass","si","styleSheets","styleSheet","rules","ri","length","selectorText","match","deleteRule","ex","SetAppHeight","appHeight","documentElement","style","setProperty","concat","innerHeight","navigation","toMinus","idot","animate","d","minusPoints","mina","easin","toIdot","idotpathPoints","button","menu","svg","getElementById","Snap","select","idotpath","minus","node","getAttribute","body","nav","getElementsByClassName","bgclose","getElementsByTagName","childNodes","onclick","className","indexOf","replace","e","preventDefault","hasClass","display","orientation","winwidth","width","height","opacity","imagesLoaded","setTimeout","devGrid","rtimedev","$toggle","$classtarget","click","timeoutdev","deltadev","resizeenddev","Date","resize","menuClasses","data","target","each","this","next","url","path","closest","recordanimation","console","log","$thiscontainer","$thiscircle","find","css","hover","$thissquare","homegallery","flickity","setGallerySize","percentPosition","fade","autoPlay","pauseAutoPlayOnHover","draggable","freeScroll","wrapAround","arrowShape","x0","x1","y1","x2","y2","x3","homereleasegallery","eventsview","$activeitem","scrollTop","offset","top","gallery","$block","Flickity","createMethods","push","prototype","_createPrevNextCells","on","setPrevNextCells","changeSlideClasses","previousSlide","nextSlide","slides","selectedIndex","slide","method","getCellElements","forEach","cellElem","classList","init$1","lastId","cellCount","isHorizontal","radius","theta","rtime","carousel","querySelector","cells","querySelectorAll","cellItems","cellWidth","offsetWidth","cellHeight","offsetHeight","rotateFn","$sceneheight","$heightitem","sceneheight","outerHeight","sceneheigtItems","itemheight","anglesegment","halfheight","calcheight","onOrientationChange","cellSize","Math","round","tan","PI","i","cellAngle","cell","transform","changeCarousel","scrollItems","map","identity","attr","item","filter","y","scroll","fromTop","halffromBottomitem","ratio","wS","angle","cur","id","thisattr","prevAll","timeout","delta","resizeend","activecarousel","init$2","$container","listitemid","toggleClass","listitemcontent","text","init$3","blocks","$thisblock","hasradioblock","init","activeradio","pausedradio","stickyradio","minimisedradio","barba","views","namespace","afterEnter","hooks","beforeLeave","loadedradio","afterLeave","nextHtml","html","response","bodyClasses","init$4","radioscriptloaded","dir","theme_directory","checkScript","reload_js","itemurl","track_url","myCustomFunction","src","appendTo","SC","resolve","then","attrchange","trackValues","callback","evnt","attributeName","newValue","search","initialize","client_id","track","settrackid","WaitForSoundcloud","inpapp"],"mappings":";;;;;;;;;AAAA,SAASA,SAASC,GAA6B,YAAtBC,SAASC,WAAqCD,SAASE,iBAAiB,mBAAmBH,GAA1DA,IAA+D,SAASI,cAAc,GAAG,iBAAiBC,OAAO,CAACC,EAAE,QAAQC,YAAY,gBAAgBD,EAAE,QAAQE,SAAS,YAAY,IAAI,IAAI,IAAIC,KAAMR,SAASS,YAAY,CAAC,IAAIC,EAAWV,SAASS,YAAYD,GAAI,GAAIE,EAAWC,MAAe,IAAI,IAAIC,EAAGF,EAAWC,MAAME,OAAO,EAAM,GAAJD,EAAMA,IAAUF,EAAWC,MAAMC,GAAIE,cAAyBJ,EAAWC,MAAMC,GAAIE,aAAaC,MAAM,WAAWL,EAAWM,WAAWJ,IAAQ,MAAMK,UAAWZ,EAAE,QAAQC,YAAY,YAAYD,EAAE,QAAQE,SAAS,gBAAkB,SAASW,eAA6B,SAAVC,IAAuCnB,SAASoB,gBAAoBC,MAAMC,YAAY,gBAAgB,GAAGC,OAAOnB,OAAOoB,YAAY,OAASpB,OAAOF,iBAAiB,SAASiB,GAAWA,IAAa,SAASM,aAAoU,SAARC,IAA2BC,EAAKC,QAAQ,CAACC,EAAEC,GAAa,IAAIC,KAAKC,OAAoB,SAAPC,IAAyBN,EAAKC,QAAQ,CAACC,EAAEK,GAAgB,IAAIH,KAAKC,OAA/b,IAA2gBG,EAAOC,EAA9gBC,EAAIrC,SAASsC,eAAe,WAA+BX,GAAdY,KAAKF,GAAcE,KAAKC,OAAO,UAAaC,EAASF,KAAKC,OAAO,cAAkBE,EAAMH,KAAKC,OAAO,UAAyDV,GAAhCH,EAAKgB,KAAKC,aAAa,KAAqBF,EAAMC,KAAKC,aAAa,MAASV,EAAeO,EAASE,KAAKC,aAAa,KAAsKC,EAAK7C,SAAS6C,KAASC,EAAI9C,SAASsC,eAAe,YAA4BQ,IAAWX,EAAOW,EAAIC,uBAAuB,qBAAqB,GAAGC,QAAQF,EAAIC,uBAAuB,gBAAgB,GAAGX,EAAKU,EAAIG,qBAAqB,MAAM,GAAOd,IAAkBC,GAAOA,EAAKc,WAAWrC,QAA4CmC,QAAQG,QAAQ,YAAuB,GAAGf,EAAKgB,UAAUC,QAAQ,qBAAmBjB,EAAKgB,UAAU,oBAAsB,GAAGjB,EAAOiB,UAAUC,QAAQ,gBAAgBR,EAAKO,UAAUP,EAAKO,UAAUE,QAAQ,cAAc,IAAInB,EAAOiB,UAAUjB,EAAOiB,UAAUE,QAAQ,cAAc,IAAIlB,EAAKgB,UAAUhB,EAAKgB,UAAUE,QAAQ,cAAc,IAAIrB,MAAeY,EAAKO,WAAW,cAAcjB,EAAOiB,WAAW,cAAchB,EAAKgB,WAAW,cAAc1B,MAAaS,EAAOgB,QAAQ,YAAuB,GAAGf,EAAKgB,UAAUC,QAAQ,qBAAmBjB,EAAKgB,UAAU,oBAAsB,GAAGjB,EAAOiB,UAAUC,QAAQ,gBAAgBR,EAAKO,UAAUP,EAAKO,UAAUE,QAAQ,cAAc,IAAInB,EAAOiB,UAAUjB,EAAOiB,UAAUE,QAAQ,cAAc,IAAIlB,EAAKgB,UAAUhB,EAAKgB,UAAUE,QAAQ,cAAc,IAAIrB,MAAeY,EAAKO,WAAW,cAAcjB,EAAOiB,WAAW,cAAchB,EAAKgB,WAAW,cAAc1B,IAAU1B,SAASE,iBAAiB,YAAY,SAASqD,GAAGA,EAAEC,mBAAmB,KAAanD,EAAE,sBAAsBoD,SAAS,gBAAeZ,EAAKO,UAAUP,EAAKO,UAAUE,QAAQ,cAAc,IAAInB,EAAOiB,UAAUjB,EAAOiB,UAAUE,QAAQ,cAAc,IAAIlB,EAAKgB,UAAUhB,EAAKgB,UAAUE,QAAQ,cAAc,IAAI3B,EAAKC,QAAQ,CAACC,EAAEK,GAAgB,IAAIH,KAAKC,SAA3wCG,EAAOd,MAAMqC,QAAQ,SAA+vC,SAASC,cAAc,IAAIC,EAASvD,EAAED,QAAQyD,QAAsBxD,EAAED,QAAQ0D,SAAYF,GAAoBvD,EAAE,QAAQE,SAAS,cAAcF,EAAE,QAAQC,YAAY,cAAkBD,EAAE,QAAQC,YAAY,cAAcD,EAAE,QAAQE,SAAS,aAAc,SAASwD,UAAU1D,EAAE,QAAQ2D,aAAa,WAAgEC,WAArD,WAAuB5D,EAAE,QAAQE,SAAS,WAAkC,OAAS,SAAS2D,UAAU,IAAkMC,EAA9LC,EAAQ/D,EAAE,eAAegE,EAAahE,EAAE,QAAQ+D,EAAQE,MAAM,WAAcD,EAAaZ,SAAS,UAAWY,EAAa/D,YAAY,UAAgB+D,EAAa9D,SAAS,YAA2B,IAAIgE,GAAW,EAAUC,EAAS,IAAiI,SAASC,IAAkB,IAAIC,KAAOP,EAASK,EAAUP,WAAWQ,EAAaD,IAAgBD,GAAW,EAAuBlE,EAAED,QAAQ0D,SAASH,eAAnRtD,EAAED,QAAQuE,OAAO,WAAWR,EAAS,IAAIO,MAAuB,IAAbH,IAAoBA,GAAW,EAAKN,WAAWQ,EAAaD,MAAqL,SAASI,YAAYC,EAAKC,GAAQzE,EAAE,cAAcyE,GAAQC,KAAK,WAAW1E,EAAE2E,MAAM1E,YAAYwE,KAAWzE,EAAE,yBAA0BkB,OAAOsD,EAAKI,KAAKC,IAAIC,KAAK,OAAQC,QAAQ,cAAcL,KAAK,WAAW1E,EAAE2E,MAAMzE,SAASuE,KAAY,SAASO,kBAAkBC,QAAQC,IAAI,yBAAyBlF,EAAE,4BAA4B0E,KAAK,WAAW,IAAIS,EAAenF,EAAE2E,MAAMS,EAAYpF,EAAE2E,MAAMU,KAAK,kBAAkBF,EAAelF,YAAY,SAAS,WAAW,WAAWmF,EAAYnF,YAAY,YAAYkF,EAAeG,IAAI,iBAAiB,WAAWF,EAAYG,MAAM,WAAcH,EAAYhC,SAAS,aAAa6B,QAAQC,IAAI,uBAAuBE,EAAYnF,YAAY,YAAYmF,EAAYnF,YAAY,UAAUkF,EAAelF,YAAY,YAAgBgF,QAAQC,IAAI,iCAAiCE,EAAYlF,SAAS,YAAYkF,EAAYlF,SAAS,UAAUiF,EAAejF,SAAS,eAAiBF,EAAE,4BAA4B0E,KAAK,WAAWO,QAAQC,IAAI,yBAAyB,IAAIC,EAAenF,EAAE2E,MAAMa,EAAYxF,EAAE2E,MAAMU,KAAK,cAAcF,EAAelF,YAAY,SAAS,WAAW,WAAWuF,EAAYvF,YAAY,YAAYkF,EAAeG,IAAI,iBAAiB,WAAWE,EAAYD,MAAM,WAAWN,QAAQC,IAAI,qBAAwBM,EAAYpC,SAAS,aAAa6B,QAAQC,IAAI,sBAAsBM,EAAYvF,YAAY,YAAYuF,EAAYvF,YAAY,QAAQkF,EAAelF,YAAY,YAAgBgF,QAAQC,IAAI,gCAAgCM,EAAYtF,SAAS,YAAYsF,EAAYtF,SAAS,QAAQiF,EAAejF,SAAS,eAAkB,SAASuF,cAA+BzF,EAAE,QAAQqF,KAAK,2BAAwCK,SAAS,CAAC/B,cAAa,EAAKgC,gBAAe,EAAMC,iBAAgB,EAAMC,MAAK,EAAKC,SAAS,IAAKC,sBAAqB,EAAMC,WAAU,EAAMC,YAAW,EAAMC,YAAW,EAAKC,WAAW,CAACC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,MAAO,SAASC,qBAAsC1G,EAAE,QAAQqF,KAAK,0BAAuCK,SAAS,CAAC/B,cAAa,EAAKgC,gBAAe,EAAMC,iBAAgB,EAAME,SAAS,IAAKC,sBAAqB,EAAKC,WAAU,EAAMC,YAAW,EAAMC,YAAW,EAAKC,WAAW,CAACC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,MAAO,SAASE,aAAa,IAAI5C,EAAQ/D,EAAE,iBAAiBgE,EAAahE,EAAE,QAAQ+D,EAAQE,MAAM,WAAW,IAAgN2C,EAA7M5C,EAAaZ,SAAS,sBAA0BwD,EAAY5G,EAAE,uBAAuBgE,EAAa/D,YAAY,qBAAqBD,EAAE,cAAcuB,QAAQ,CAACsF,UAAUD,EAAYE,SAASC,IAAI,MAAcH,EAAY5G,EAAE,uBAAuBgE,EAAa9D,SAAS,qBAAqBF,EAAE,cAAcuB,QAAQ,CAACsF,UAAUD,EAAYE,SAASC,SAAW,SAASC,QAAQC,GAAQhC,QAAQC,IAAI,oBAAoBgC,SAASC,cAAcC,KAAK,wBAAwBF,SAASG,UAAUC,qBAAqB,WAAW3C,KAAK4C,GAAG,SAAS5C,KAAK6C,mBAAoBN,SAASG,UAAUG,iBAAiB,WAAWC,mBAAmB9C,KAAK+C,cAAc,SAAS,eAAeD,mBAAmB9C,KAAKgD,UAAU,SAAS,WAAWhD,KAAK+C,cAAc/C,KAAKiD,OAAOjD,KAAKkD,cAAc,GAAGlD,KAAKgD,UAAUhD,KAAKiD,OAAOjD,KAAKkD,cAAc,GAAGJ,mBAAmB9C,KAAK+C,cAAc,MAAM,eAAeD,mBAAmB9C,KAAKgD,UAAU,MAAM,YAA8BV,EAAO5B,KAAK,qBAAkCK,SAAS,CAAC/B,cAAa,EAAKgC,gBAAe,EAAMC,iBAAgB,EAAMK,YAAW,EAAKC,YAAW,EAAKC,WAAW,CAACC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,GAAGC,GAAG,MAAO,SAASgB,mBAAmBK,EAAMC,EAAOhF,GAAe+E,GAAeA,EAAME,kBAAkBC,QAAQ,SAASC,GAAUA,EAASC,UAAUJ,GAAQhF,KAEhyO,SAASqF,SAASzB,aAAa,WAA0B,IAAI0B,EAAwJC,EAA+JC,EAAkEC,EAAOC,EAA27EC,EAApzFC,EAAShJ,SAASiJ,cAAc,aAAaC,EAAMF,EAASG,iBAAiB,mBAAmBC,EAAU/I,EAAE,aAAaqF,KAAK,mBAA6C2D,EAAUL,EAASM,YAAYC,EAAWP,EAASQ,aAA0GC,GAApDb,IAAtCvI,EAAE,QAAQoD,SAAS,eAA6F,UAAU,UAA6BiG,EAAarJ,EAAE,iBAAiBsJ,EAAYtJ,EAAE,gBAAgBuJ,EAAYF,EAAaG,cAAcC,EAAgBH,EAAY9I,OAAOkJ,EAAWJ,EAAYE,cAA6BG,EAAJ,IAA4BF,EAA8DG,GAAlCP,EAAahE,KAAK,gBAA2BrF,EAAE,gBAAgByD,SAAS,GAA0CoG,GAAxCN,EAAYvJ,EAAE,iBAAiByD,UAAgC,EAAEmG,EAAs2D,SAASE,IAAsB,IAAqEvB,EAA5BA,IAAtCvI,EAAE,QAAQoD,SAAS,cAAmEgG,EAASb,EAAa,UAAU,UAAzqB,WAA0BI,EAAShJ,SAASiJ,cAAc,aAAaI,EAAUL,EAASM,YAAYC,EAAWP,EAASQ,aAAuCV,EAAM,KAAhCH,EAAUmB,GAAoC,IAAIM,EAASxB,EAAaS,EAAUE,EAAWV,EAAOwB,KAAKC,MAAMF,EAAS,EAAEC,KAAKE,IAAIF,KAAKG,GAAG7B,IAAY,IAAI,IAAI8B,EAAE,EAAEA,EAAEvB,EAAMrI,OAAO4J,IAAI,CAAC,IAA2DC,EAAvDC,EAAKzB,EAAMuB,GAAMA,EAAE9B,GAAWgC,EAAKtJ,MAAM0C,QAAQ,EAAM2G,EAAU5B,EAAM2B,EAAEE,EAAKtJ,MAAMuJ,UAAUnB,EAAS,IAAIiB,EAAU,mBAAmB7B,EAAO,QAAY8B,EAAKtJ,MAAM0C,QAAQ,EAAE4G,EAAKtJ,MAAMuJ,UAAU,SAA4KC,GAA7/DC,YAAY1B,EAAU2B,IAAI,WAAW,IAAIC,EAAS3K,EAAE2E,MAAMiG,KAAK,MAAUC,EAAK7K,EAAE,gBAAgB8K,OAAO,sBAAsBH,EAAS,MAAM,GAAGE,EAAKrK,OAAQ,OAAOqK,IAASlC,EAAS3H,MAAMuJ,UAAU,qBAAqBnB,EAAS,SAASxF,WAAW,WAAW,IAAImH,EAAE/K,EAAED,QAAQ8G,YAAY7G,EAAED,QAAQ8G,UAAUkE,EAAE,GAAG/K,EAAE,UAAUE,SAAS,WAAY,KAAKF,EAAED,QAAQiL,OAAO,WAAchL,EAAED,QAAQ8G,YAAYgD,EAAY7J,EAAE,2BAA2BE,SAAS,YAAkBF,EAAE,2BAA2BC,YAAY,YAAagL,QAAQjL,EAAE2E,MAAMkC,YAAYqE,mBAAmBlL,EAAE,2BAA2B6G,YAAYsE,MAAM5B,EAAxzB,IAA+0B6B,GAAGH,QAAQE,MAAM,IAAIE,GAAOD,IAA2D,GAAt6B,IAAu5BzB,GAAlB0B,IAAoC1C,EAAS3H,MAAMuJ,UAAU,eAAe/B,EAAO,OAAOY,EAAS,IAA5GiC,EAA0H,QAAQ,IAAIC,EAAIb,YAAYC,IAAI,WAAW,GAAG1K,EAAE2E,MAAMmC,SAASC,IAAIkE,QAAQvB,EAAW,EAAE,OAAO/E,OAAkC4G,GAA1BD,EAAIA,EAAIA,EAAI9K,OAAO,KAAe8K,EAAI9K,OAAO8K,EAAI,GAAGC,GAAG,GAAMlD,IAASkD,IAAIlD,EAAOkD,EAAGvL,EAAE,gBAAgBC,YAAY,UAAU6K,OAAO,QAAQS,EAAG,MAAMrL,SAAS,UAAUsL,SAASxL,EAAE,gBAAgB8K,OAAO,QAAQS,EAAG,MAAMX,KAAK,oBAAoB5K,EAAE,mBAAmBC,YAAY,UAAU6K,OAAO,QAAQU,SAAS,MAAMtL,SAAS,UAAUF,EAAE,gBAAgBC,YAAY,eAAeD,EAAE,uBAAuByL,UAAUvL,SAAS,kBAAwtB4J,IAAgC,IAAI4B,GAAQ,EAAUC,EAAM,IAAkH,SAASC,IAAe,IAAIvH,KAAOqE,EAAMiD,EAAO/H,WAAWgI,EAAUD,IAAaD,GAAQ,EAAuB1L,EAAED,QAAQ0D,SAASqG,KAAlP9J,EAAED,QAAQuE,OAAO,WAAWoE,EAAM,IAAIrE,MAAoB,IAAVqH,IAAiBA,GAAQ,EAAK9H,WAAWgI,EAAUD,MAAwKE,GAEjtG,SAASC,SAAS7G,QAAQC,IAAI,yBAAyB,IAAI6G,EAAW/L,EAAE,cAAcA,EAAE,cAAcuF,MAAM,WAAW,IAAIyG,EAAWhM,EAAE2E,MAAMiG,KAAK,cAAc5K,EAAE2E,MAAMsH,YAAY,UAAUjM,EAAE,2BAA2BgM,EAAW,MAAMC,YAAY,YAAajM,EAAE,cAAciE,MAAM,WAAW,IAAI+H,EAAWhM,EAAE2E,MAAMiG,KAAK,cAAcsB,EAAgBlM,EAAE2E,MAAMwH,OAAOlH,QAAQC,IAAIgH,GAAiBH,EAAW7L,SAAS,aAAaF,EAAE2E,MAAMzE,SAAS,aAAaF,EAAE,2BAA2BgM,EAAW,MAAMC,YAAY,aAAajM,EAAE,eAAeuB,QAAQ,CAACmC,QAAQ,GAAG,IAAI,WAAW1D,EAAE,eAAemM,KAAKD,GAAiB3K,QAAQ,CAACmC,QAAQ,GAAG,IAAI,kBAEnmB,SAAS0I,SAAgD,EAApCpM,EAAE,2BAA2BQ,QAAUiF,cAAqD,EAAnCzF,EAAE,0BAA0BQ,QAAUkG,qBAE9H,SAAS2F,SAASpH,QAAQC,IAAI,6BAA2G,EAA3ElF,EAAE,kEAAkEQ,SAAUyE,QAAQC,IAAI,mBAAmBF,mBAAiD,EAA3BhF,EAAE,kBAAkBQ,SAAUyE,QAAQC,IAAI,oBAAoBlF,EAAE,kBAAkB0E,KAAK,WAAW,IAAI4H,EAAWtM,EAAE2E,MAAMM,QAAQC,IAAIoH,GAAYtF,QAAQsF,MAA4C,EAAzBtM,EAAE,gBAAgBQ,SAAU+L,eAAc,EAAKtH,QAAQC,IAAI,4FAA4FlF,EAAE,QAAQE,SAAS,oBAEhjB,SAASsM,OAAO,IAAIC,GAAY,EAAMC,GAAY,EAAMC,GAAY,EAAMC,GAAe,EAAMC,MAAML,KAAK,CAACM,MAAM,CAAC,CAACC,UAAU,kBAAkBC,WAAW,WAA0B/H,QAAQC,IAAI,2CAA2CxB,YAAa,CAACqJ,UAAU,OAAOC,WAAW,WAA0B/H,QAAQC,IAAI,gCAAgCxB,YAAa,CAACqJ,UAAU,cAAcC,WAAW,WAA0B/H,QAAQC,IAAI,uCAAuCxB,UAAUjE,SAAS4M,UAAW,CAACU,UAAU,aAAaC,WAAW,WAA0B/H,QAAQC,IAAI,sCAAsCzF,SAAS2M,QAAQ3M,SAAS4M,QAAQ3I,YAAa,CAACqJ,UAAU,mBAAmBC,WAAW,WAA0BvN,SAAS2I,QAAQ1E,YAAa,CAACqJ,UAAU,iBAAiBC,WAAW,WAA0BtJ,YAAa,CAACqJ,UAAU,gBAAgBC,WAAW,WAA0BtJ,YAAa,CAACqJ,UAAU,kBAAkBC,WAAW,WAA0BvN,SAASqM,QAAQpI,YAAa,CAACqJ,UAAU,eAAeC,WAAW,WAA0BtJ,eAAgBmJ,MAAMI,MAAMC,YAAY,SAAS1I,GAAMS,QAAQC,IAAI,eAAgFiI,cAA9DnN,EAAE,QAAQoD,SAAS,eAAc6B,QAAQC,IAAI,kBAA6B,GAA2IuH,EAA1GzM,EAAE,QAAQoD,SAAS,sBAAsB6B,QAAQC,IAAI,sDAAiE,IAAWD,QAAQC,IAAI,0BAAqC,GAAiHwH,EAAvG1M,EAAE,QAAQoD,SAAS,qBAAqB6B,QAAQC,IAAI,oDAA+D,IAAWD,QAAQC,IAAI,qBAAgC,GAA+FyH,EAArF3M,EAAE,QAAQoD,SAAS,wBAAwB6B,QAAQC,IAAI,+BAA0C,IAAWD,QAAQC,IAAI,gCAA2C,GAAiF0H,EAAvE5M,EAAE,QAAQoD,SAAS,iBAAiB6B,QAAQC,IAAI,wBAAsC,IAAWD,QAAQC,IAAI,0BAAwC,KAAU2H,MAAMI,MAAMG,WAAW,SAAS5I,GAAMS,QAAQC,IAAI,cAAclF,EAAE,cAAcuB,QAAQ,CAACsF,UAAU7G,EAAE,QAAQ8G,SAASC,KAAK,IAAI,IAAIsG,EAAS7I,EAAKI,KAAK0I,KAASC,EAASF,EAASpK,QAAQ,uBAAuB,eAAeoK,GAAcG,EAAYxN,EAAEuN,GAAUzC,OAAO,WAAWF,KAAK,SAAS5K,EAAE,QAAQ4K,KAAK,QAAQ4C,GAAgBhJ,EAAKI,KAAKC,IAAIC,OAA0MP,YAAYC,EAAhM,qBAAkND,YAAYC,EAA9L,qBAAgND,YAAYC,EAApL,yBAA8MD,YAAYC,EAAhL,uBAAwMD,YAAYC,EAA1K,0BAAqN,GAAb2I,aAAmBnN,EAAE,QAAQE,SAAS,aAA8B,GAAbuM,IAAmBxH,QAAQC,IAAI,qDAAqDlF,EAAE,QAAQE,SAAS,sBAAsC,GAAbwM,IAAmBzH,QAAQC,IAAI,mDAAmDlF,EAAE,QAAQE,SAAS,qBAAqC,GAAbyM,IAAmB1H,QAAQC,IAAI,8BAA8BlF,EAAE,QAAQE,SAAS,wBAA2C,GAAhB0M,IAAsB3H,QAAQC,IAAI,gCAAgClF,EAAE,QAAQE,SAAS,iBAAiBkB,aAAakC,gBAElpG,SAASmK,SAAS,IAAIC,EAAuEC,EAAIC,gBAAgB,SAASC,IAAc,IAAmHC,EAA2jCC,EAAuIC,EAA4mBC,OAAn4D,IAApBP,EAAiE,EAA7B1N,EAAE,oBAAoBQ,aAA8B,IAAVuN,IAA2BD,EAAU,SAAmBI,GAAKlO,EAAE,YAAY4K,KAAK,MAAMsD,GAAKC,SAAS,QAAQlJ,QAAQC,IAAI,kBAAgFtB,WAA9D,WAAgBwK,GAAGC,QAAQL,GAAWM,KAAKL,IAAmC,MAAWjO,EAAE,QAAQoD,SAAS,iBAAiBsK,GAAkB,EAAuDM,EAAlDD,EAAQ/N,EAAE,iBAAiBwE,KAAK,cAAoCsJ,EAAaH,EAAI,6BAAqC3N,EAAE,QAAQoD,SAAS,4BAA4BsK,GAAkB,EAA0DK,EAAlD/N,EAAE,QAAQoD,SAAS,UAAU6B,QAAQC,IAAI,SAAiBlF,EAAE,mCAAmCwE,KAAK,cAA2BxE,EAAE,2BAA2BwE,KAAK,aAAcS,QAAQC,IAAI,aAAa6I,GAAgBC,EAAUD,EAAQD,EAAaH,EAAI,6BAAqC3N,EAAE,QAAQoD,SAAS,SAAS6B,QAAQC,IAAI,aAAawI,GAAkB,EAAKK,EAAQ/N,EAAE,wBAAwBwE,KAAK,aAAaS,QAAQC,IAAI,aAAa6I,GAAgBC,EAAUD,EAAQD,EAAaH,EAAI,6BAA8D,EAAzB3N,EAAE,gBAAgBQ,QAAUyE,QAAQC,IAAI,wBAAwBD,QAAQC,IAAI,QAAQlF,EAAE2E,OAAcoJ,EAAQ/N,EAAE,0BAA0BwE,KAAK,aAAakJ,GAAkB,EAAKzI,QAAQC,IAAI,8BAA8B6I,GAAgBC,EAAUD,EAAQ9I,QAAQC,IAAI,aAAa8I,GAAcF,EAAaH,EAAI,8BAAkC1I,QAAQC,IAAI,6FAA6FlF,EAAE,QAAQuO,WAAW,CAACC,aAAY,EAAKC,SAAS,SAAkBC,GAA6B,SAApBA,EAAKC,iBAAsE,GAA3CD,EAAKE,SAASC,OAAO,qBAA+BhB,KAAqE,GAAnDa,EAAKE,SAASC,OAAO,6BAAuChB,KAAkD,GAAhCa,EAAKE,SAASC,OAAO,UAAoBhB,SAAqBO,GAAGU,WAAW,CAACC,UAAU,qCAAqC9J,QAAQC,IAAI,KAAKkJ,IAAWH,EAAiB,SAA0Be,GAAO,IAAIC,EAAWD,EAAMzD,GAAO3E,EAAY5G,EAAE,6BAA6B+N,EAAQ,MAAMhJ,QAAQ,MAAME,QAAQC,IAAI,kBAAkB6I,GAAY/N,EAAE,QAAQ4K,KAAK,cAAcqE,GAAYjP,EAAE,QAAQ4K,KAAK,mBAAmBmD,GAAS/N,EAAE,qBAAqBC,YAAY,UAAU2G,EAAY1G,SAAS,UAAU+E,QAAQC,IAAI,cAAc0B,MAA+D3B,QAAQC,IAAI,wBAA2BlF,EAAE,QAAQoD,SAAS,4BAA4B6B,QAAQC,IAAI,oDAAyE,SAASgK,IAAkC,oBAAJd,GAAiBxK,WAAWsL,EAAkB,KAAWrB,IAApHqB,GAVxnFjK,QAAQC,IAAI,4BAIZD,QAAQC,IAAI,uBAEZD,QAAQC,IAAI,aAMZ,IAAIiK,OAAO,CAAC3C,KAAK,WAAmBvH,QAAQC,IAAI,QAAQrB,UAAUhD,eAAeyC,cAAcxD,cAAc0M,OAAOpL,aAAaqM,WAAYhO,SAAS0P,OAAO3C","file":"app.min.js","sourcesContent":["function domReady(fn){if(document.readyState!=='loading'){fn();return;}document.addEventListener('DOMContentLoaded',fn);}function detectTouch(){if(\"ontouchstart\"in window){$(\"body\").removeClass('is-not-touch');$(\"body\").addClass('is-touch');try{for(var si in document.styleSheets){var styleSheet=document.styleSheets[si];if(!styleSheet.rules)continue;for(var ri=styleSheet.rules.length-1;ri>=0;ri--){if(!styleSheet.rules[ri].selectorText)continue;if(styleSheet.rules[ri].selectorText.match(':hover')){styleSheet.deleteRule(ri);}}}}catch(ex){}}else{$(\"body\").removeClass('is-touch');$(\"body\").addClass('is-not-touch');}}function SetAppHeight(){var appHeight=function appHeight(){var doc=document.documentElement;doc.style.setProperty('--site-height',\"\".concat(window.innerHeight,\"px\"));};window.addEventListener('resize',appHeight);appHeight();}function navigation(){var svg=document.getElementById(\"itoggle\");var s=Snap(svg);var idot=Snap.select('#idot');var idotpath=Snap.select('#idot-path');var minus=Snap.select('#minus');var idotPoints=idot.node.getAttribute('d');var minusPoints=minus.node.getAttribute('d');var idotpathPoints=idotpath.node.getAttribute('d');var toMinus=function toMinus(){idot.animate({d:minusPoints},100,mina.easin);};var toIdot=function toIdot(){idot.animate({d:idotpathPoints},100,mina.easin);};var body=document.body;var nav=document.getElementById('head-nav'),button,menu;if(!nav)return;button=nav.getElementsByClassName('navigation-toggle')[0];bgclose=nav.getElementsByClassName('inp-bg-close')[0];menu=nav.getElementsByTagName('ul')[0];if(!button)return;if(!menu||!menu.childNodes.length){button.style.display='none';return;}bgclose.onclick=function toggler(){if(-1==menu.className.indexOf('navigation-item'))menu.className='navigation-item';if(-1!=button.className.indexOf(' toggled-on')){body.className=body.className.replace(' toggled-on','');button.className=button.className.replace(' toggled-on','');menu.className=menu.className.replace(' toggled-on','');toIdot();}else{body.className+=' toggled-on';button.className+=' toggled-on';menu.className+=' toggled-on';toMinus();}};button.onclick=function toggler(){if(-1==menu.className.indexOf('navigation-item'))menu.className='navigation-item';if(-1!=button.className.indexOf(' toggled-on')){body.className=body.className.replace(' toggled-on','');button.className=button.className.replace(' toggled-on','');menu.className=menu.className.replace(' toggled-on','');toIdot();}else{body.className+=' toggled-on';button.className+=' toggled-on';menu.className+=' toggled-on';toMinus();document.addEventListener('touchmove',function(e){e.preventDefault();},false);}};if($('.navigation-toggle').hasClass('toggled-on')){body.className=body.className.replace(' toggled-on','');button.className=button.className.replace(' toggled-on','');menu.className=menu.className.replace(' toggled-on','');idot.animate({d:idotpathPoints},100,mina.easin);}}function orientation(){var winwidth=$(window).width();var winheight=$(window).height();if(winwidth>winheight){$(\"body\").addClass('horizontal');$(\"body\").removeClass('vertical');}else{$(\"body\").removeClass('horizontal');$(\"body\").addClass('vertical');}}function opacity(){$(\"body\").imagesLoaded(function(){function waitloading(){$(\"body\").addClass('loaded');}setTimeout(waitloading,200);});}function devGrid(){var $toggle=$(\".dev-toggle\"),$classtarget=$('body');$toggle.click(function(){if($classtarget.hasClass('dev-on')){$classtarget.removeClass('dev-on');}else{$classtarget.addClass('dev-on');}});var rtimedev;var timeoutdev=false;var deltadev=200;$(window).resize(function(){rtimedev=new Date();if(timeoutdev===false){timeoutdev=true;setTimeout(resizeenddev,deltadev);}});function resizeenddev(){if(new Date()-rtimedev<deltadev){setTimeout(resizeenddev,deltadev);}else{timeoutdev=false;var windowheight=$(window).height();orientation();}}}function menuClasses(data,target){$('.menu-item.'+target).each(function(){$(this).removeClass(target);});$(\".menu-item > a[href$=\\\"\".concat(data.next.url.path,\"\\\"]\")).closest('.menu-item').each(function(){$(this).addClass(target);});}function recordanimation(){console.log(\"each record animation\");$(\".record-circle-container\").each(function(){var $thiscontainer=$(this),$thiscircle=$(this).find(\".record-circle\");$thiscontainer.removeClass(\"active\",\"rotating\",\"rotated\");$thiscircle.removeClass(\"rotating\");$thiscontainer.css(\"pointer-events\",\"initial\");$thiscircle.hover(function(){if($thiscircle.hasClass(\"rotating\")){console.log(\"has class rotatting\");$thiscircle.removeClass(\"rotating\");$thiscircle.removeClass(\"rotate\");$thiscontainer.removeClass(\"active\");}else{console.log(\"DOES NOT have class rotatting\");$thiscircle.addClass(\"rotating\");$thiscircle.addClass(\"rotate\");$thiscontainer.addClass(\"active\");}});});$(\".record-square-container\").each(function(){console.log(\"each square container\");var $thiscontainer=$(this),$thissquare=$(this).find(\".flip-card\");$thiscontainer.removeClass(\"active\",\"flipping\",\"flipped\");$thissquare.removeClass(\"flipping\");$thiscontainer.css(\"pointer-events\",\"initial\");$thissquare.hover(function(){console.log(\"this square hover\");if($thissquare.hasClass(\"flipping\")){console.log(\"has class flipping\");$thissquare.removeClass(\"flipping\");$thissquare.removeClass(\"flip\");$thiscontainer.removeClass(\"active\");}else{console.log(\"DOES NOT have class flipping\");$thissquare.addClass(\"flipping\");$thissquare.addClass(\"flip\");$thiscontainer.addClass(\"active\");}});});}function homegallery(){var $thisgallery=$('body').find(\".featured-home-carousel\");$thisgallery.flickity({imagesLoaded:true,setGallerySize:false,percentPosition:false,fade:true,autoPlay:6000,pauseAutoPlayOnHover:false,draggable:false,freeScroll:false,wrapAround:true,arrowShape:{x0:15,x1:65,y1:50,x2:75,y2:40,x3:35}});}function homereleasegallery(){var $thisgallery=$('body').find(\".release-home-carousel\");$thisgallery.flickity({imagesLoaded:true,setGallerySize:false,percentPosition:false,autoPlay:6000,pauseAutoPlayOnHover:true,draggable:false,freeScroll:false,wrapAround:true,arrowShape:{x0:15,x1:65,y1:50,x2:75,y2:40,x3:35}});}function eventsview(){var $toggle=$(\".release-view\"),$classtarget=$('body');$toggle.click(function(){if($classtarget.hasClass('release-list-view')){var $activeitem=$(\".height-item.active\");$classtarget.removeClass('release-list-view');$('html, body').animate({scrollTop:$activeitem.offset().top+1});}else{var $activeitem=$(\".height-item.active\");$classtarget.addClass('release-list-view');$('html, body').animate({scrollTop:$activeitem.offset().top});}});}function gallery($block){console.log(\"gallery function\");Flickity.createMethods.push('_createPrevNextCells');Flickity.prototype._createPrevNextCells=function(){this.on('select',this.setPrevNextCells);};Flickity.prototype.setPrevNextCells=function(){changeSlideClasses(this.previousSlide,'remove','is-previous');changeSlideClasses(this.nextSlide,'remove','is-next');this.previousSlide=this.slides[this.selectedIndex-1];this.nextSlide=this.slides[this.selectedIndex+1];changeSlideClasses(this.previousSlide,'add','is-previous');changeSlideClasses(this.nextSlide,'add','is-next');};var $thisgallery=$block.find(\".gallery-carousel\");$thisgallery.flickity({imagesLoaded:true,setGallerySize:false,percentPosition:false,freeScroll:true,wrapAround:true,arrowShape:{x0:15,x1:65,y1:50,x2:75,y2:40,x3:35}});}function changeSlideClasses(slide,method,className){if(!slide){return;}slide.getCellElements().forEach(function(cellElem){cellElem.classList[method](className);});}\n\nconsole.log(\"release archive index.js\");function init$1(){eventsview();function activecarousel(){var lastId,carousel=document.querySelector('.carousel'),cells=carousel.querySelectorAll('.carousel__cell'),cellItems=$(\".carousel\").find(\".carousel__cell\"),cellCount,selectedIndex=0,cellWidth=carousel.offsetWidth,cellHeight=carousel.offsetHeight;if($('body').hasClass('horizontal')){var isHorizontal=true;}else{var isHorizontal=false;}var rotateFn=isHorizontal?'rotateY':'rotateX',radius,theta,angle,$sceneheight=$(\".scene-height\"),$heightitem=$(\".height-item\"),sceneheight=$sceneheight.outerHeight(),sceneheigtItems=$heightitem.length,itemheight=$heightitem.outerHeight(),totalangle=360,anglesegment=totalangle/sceneheigtItems,heightItems=$sceneheight.find(\".height-item\"),halfheight=$('.height-item').height()/2,sceneheight=$('.scene-height').height(),calcheight=sceneheight-2*halfheight;scrollItems=cellItems.map(function(){var identity=$(this).attr(\"id\");var item=$('.height-item').filter(\"[data-active-item='\"+identity+\"']\");if(item.length){return item;}});carousel.style.transform='translateZ(-720px)'+rotateFn+'(0deg)';setTimeout(function(){var y=$(window).scrollTop();$(window).scrollTop(y+1);$(\".scene\").addClass(\"loaded\");},750);$(window).scroll(function(){if($(window).scrollTop()>calcheight){$('.height-item:last-child').addClass('last-end');}else{$('.height-item:last-child').removeClass('last-end');}fromTop=$(this).scrollTop();halffromBottomitem=$(\".height-item:last-child\").scrollTop();ratio=sceneheight/totalangle;wS=fromTop/ratio;var angle=-wS;var thisangle=angle;if(angle>(totalangle-anglesegment)*-1){carousel.style.transform='translateZ('+-radius+'px) '+rotateFn+'('+thisangle+'deg)';}var cur=scrollItems.map(function(){if($(this).offset().top<fromTop+itemheight/2)return this;});cur=cur[cur.length-1];var id=cur&&cur.length?cur[0].id:\"\";if(lastId!==id){lastId=id;$(\".height-item\").removeClass(\"active\").filter(\"[id='\"+id+\"']\").addClass(\"active\");thisattr=$(\".height-item\").filter(\"[id='\"+id+\"']\").attr(\"data-active-item\");$(\".carousel__cell\").removeClass(\"active\").filter(\"[id='\"+thisattr+\"']\").addClass(\"active\");$(\".height-item\").removeClass(\"prev-active\");$(\".height-item.active\").prevAll().addClass(\"prev-active\");}});function changeCarousel(){carousel=document.querySelector('.carousel'),cellWidth=carousel.offsetWidth,cellHeight=carousel.offsetHeight;cellCount=sceneheigtItems;theta=360/cellCount;var cellSize=isHorizontal?cellWidth:cellHeight;radius=Math.round(cellSize/2/Math.tan(Math.PI/cellCount));for(var i=0;i<cells.length;i++){var cell=cells[i];if(i<cellCount){cell.style.opacity=1;var cellAngle=theta*i;cell.style.transform=rotateFn+'('+cellAngle+'deg) translateZ('+radius+'px)';}else{cell.style.opacity=0;cell.style.transform='none';}}}function onOrientationChange(){if($('body').hasClass('horizontal')){var isHorizontal=true;}else{var isHorizontal=false;}rotateFn=isHorizontal?'rotateY':'rotateX';changeCarousel();}onOrientationChange();var rtime;var timeout=false;var delta=200;$(window).resize(function(){rtime=new Date();if(timeout===false){timeout=true;setTimeout(resizeend,delta);}});function resizeend(){if(new Date()-rtime<delta){setTimeout(resizeend,delta);}else{timeout=false;var windowheight=$(window).height();onOrientationChange();}}}activecarousel();}\n\nfunction init$2(){console.log('body.post-type-artist');var $container=$('.container');$('.list-item').hover(function(){var listitemid=$(this).attr('data-imgid');$(this).toggleClass('active');$('.image-item[data-image=\"'+listitemid+'\"]').toggleClass('active');});$('.list-item').click(function(){var listitemid=$(this).attr('data-imgid'),listitemcontent=$(this).text();console.log(listitemcontent);$container.addClass('activated');$(this).addClass('activated');$('.image-item[data-image=\"'+listitemid+'\"]').toggleClass('activated');$('.page-title').animate({opacity:0},800,function(){$('.page-title').text(listitemcontent).animate({opacity:1},400,function(){});});});}\n\nconsole.log(\"front page index.js\");function init$3(){if($('.featured-home-carousel').length>0){homegallery();}if($('.release-home-carousel').length>0){homereleasegallery();}}\n\nconsole.log('blocks.js');function blocks(){console.log('export function blocks.js');if($('#artist-releases, .release-block, .featured-home-item-releases').length>0){console.log('recordanimation');recordanimation();}if($('.gallery-block').length>0){console.log(\"if gallery-block\");$(\".gallery-block\").each(function(){var $thisblock=$(this);console.log($thisblock);gallery($thisblock);});}if($('.sound-block').length>0){hasradioblock=true;console.log(\"we have a sound-block on the page - add class to body - for the radio loader to discover\");$('body').addClass('has-sound-block');}}\n\nfunction init(){var activeradio=false,pausedradio=false,stickyradio=false,minimisedradio=false;barba.init({views:[{namespace:'single-releases',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = single-releases\");opacity();}},{namespace:'page',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = page\");opacity();}},{namespace:'single-post',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = single-post\");opacity();domReady(blocks);}},{namespace:'front-page',afterEnter:function afterEnter(data){console.log(\"afterEnter: namespace = front-page\");domReady(init$3);domReady(blocks);opacity();}},{namespace:'archive-releases',afterEnter:function afterEnter(data){domReady(init$1);opacity();}},{namespace:'archive-events',afterEnter:function afterEnter(data){opacity();}},{namespace:'archive-radio',afterEnter:function afterEnter(data){opacity();}},{namespace:'archive-artists',afterEnter:function afterEnter(data){domReady(init$2);opacity();}},{namespace:'archive-news',afterEnter:function afterEnter(data){opacity();}}]});barba.hooks.beforeLeave(function(data){console.log(\"beforeleave\");if($('body').hasClass('sc-loaded')){console.log(\"player loaded\");loadedradio=true;}else{loadedradio=false;}if($('body').hasClass('sc-player-playing')){console.log(\"player is playing - apply class sc-player-playing\");activeradio=true;}else{console.log(\"player is not playing\");activeradio=false;}if($('body').hasClass('sc-player-paused')){console.log(\"player is paused - apply class sc-player-paused\");pausedradio=true;}else{console.log(\"player is paused\");pausedradio=false;}if($('body').hasClass('sticky-radio-player')){console.log(\"sticky-radio-player = true\");stickyradio=true;}else{console.log(\"sticky-radio-player = false\");stickyradio=false;}if($('body').hasClass('sc-minimised')){console.log(\"sc-minimised = true\");minimisedradio=true;}else{console.log(\"sc-minimised  = false\");minimisedradio=false;}});barba.hooks.afterLeave(function(data){console.log(\"afterleave\");$('html, body').animate({scrollTop:$(\"body\").offset().top},10);var nextHtml=data.next.html;var response=nextHtml.replace(/(<\\/?)body( .+?)?>/gi,'$1notbody$2>',nextHtml);var bodyClasses=$(response).filter('notbody').attr('class');$(\"body\").attr(\"class\",bodyClasses);if(data.next.url.path){var currentMenu='current-menu-item',currentPage='current_page_item',currentMenuAncestor='current-menu-ancestor',currentMenuParent='current-menu-parent',currentPageAncestor='current_page_ancestor';menuClasses(data,currentMenu);menuClasses(data,currentPage);menuClasses(data,currentMenuAncestor);menuClasses(data,currentMenuParent);menuClasses(data,currentPageAncestor);}if(loadedradio==true){$('body').addClass('sc-loaded');}if(activeradio==true){console.log(\"player is playing - apply class sc-player-playing\");$('body').addClass('sc-player-playing');}if(pausedradio==true){console.log(\"player is paused - apply class sc-player-paused\");$('body').addClass('sc-player-paused');}if(stickyradio==true){console.log(\"apply sticky radio classes\");$('body').addClass('sticky-radio-player');}if(minimisedradio==true){console.log(\"apply minmised radio classes\");$('body').addClass('sc-minimised');}navigation();orientation();});}\n\nfunction init$4(){var radioscriptloaded,scsjsonobject,activescsjsonobject,newitemurl,itemurl,dir=theme_directory;function checkScript(){if(typeof radioscriptloaded==='undefined'){if($('.radio-container').length>0){if(typeof itemurl==='undefined'){var reload_js=function reload_js(src){$('<script>').attr('src',src).appendTo('head');console.log(\"reload_js(src)\");function wait(){SC.resolve(track_url).then(myCustomFunction);}setTimeout(wait,2000);};if($('body').hasClass('single-radio')){radioscriptloaded=true;itemurl=$('#show-details').data(\"radio-link\");var track_url=itemurl;reload_js(''+dir+'/dist/js/inp-radio_v4.js');}else if($('body').hasClass('post-type-archive-radio')){radioscriptloaded=true;if($('body').hasClass('paged')){console.log(\"paged\");itemurl=$('.container.radio-items li:first').data(\"tracklink\");}else{itemurl=$('.top-container li:first').data(\"tracklink\");}console.log(\"itemurl = \"+itemurl+\"\");var track_url=itemurl;reload_js(''+dir+'/dist/js/inp-radio_v4.js');}else if($('body').hasClass('home')){console.log('body.home');radioscriptloaded=true;itemurl=$('.radio-item li:first').data(\"tracklink\");console.log(\"itemurl = \"+itemurl+\"\");var track_url=itemurl;reload_js(''+dir+'/dist/js/inp-radio_v4.js');}else if($('.sound-block').length>0){console.log(\"we have a soundblock\");console.log(\"$this\"+$(this)+\"\");var itemurl=$('body .radio-item:first').data(\"tracklink\");radioscriptloaded=true;console.log(\"radio block item itemurl = \"+itemurl+\"\");var track_url=itemurl;console.log(\"track_url \"+track_url+\"\");reload_js(''+dir+'/dist/js/inp-radio_v4.js');}else{console.log('body - but we wont have a radio item yet - so keep look for attrchange to the body class?');$(\"body\").attrchange({trackValues:true,callback:function callback(evnt){if(evnt.attributeName==\"class\"){if(evnt.newValue.search(/has-sound-block/i)==-1){}else{checkScript();}if(evnt.newValue.search(/post-type-archive-radio/i)==-1){}else{checkScript();}if(evnt.newValue.search(/home/i)==-1){}else{checkScript();}}}});}SC.initialize({client_id:'853fdb79a14a9ed748ec9fe482e859dd'});console.log(\"SC\"+SC+\"\");var myCustomFunction=function myCustomFunction(track){var settrackid=track.id;var $activeitem=$('.sc-trackslist li a[href=\"'+itemurl+'\"]').closest('li');console.log('$activeitem url'+itemurl+\"\");$('body').attr(\"data-scjson\",settrackid);$('body').attr(\"data-activescurl\",itemurl);$('.sc-trackslist li').removeClass('active');$activeitem.addClass('active');console.log('$activeitem'+$activeitem+\"\");};}else if(newitemurl===itemurl){}else{}}}else{console.log('radio script defined');if($('body').hasClass('post-type-archive-radio')){console.log(\"Radio script defined - post-type-archive-radio\");}}}WaitForSoundcloud();function WaitForSoundcloud(){if(typeof SC==\"undefined\"){setTimeout(WaitForSoundcloud,500);}else{checkScript();}}}\n\nvar inpapp={init:function init$$1(){console.log(\"init\");devGrid();SetAppHeight();orientation();detectTouch();init();navigation();init$4();}};domReady(inpapp.init);\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjpudWxsLCJzb3VyY2VzIjpbIi9Vc2Vycy9zaW1vbnZhbnN0aXByaWFhbi9TaXRlcy9pbnAtd3Avd3AtY29udGVudC90aGVtZXMvaW5wZXJzcGVjdGl2ZXJlY29yZHMvc3JjL2pzL3V0aWxpdGllcy9oZWxwZXJzLmpzIiwiL1VzZXJzL3NpbW9udmFuc3RpcHJpYWFuL1NpdGVzL2lucC13cC93cC1jb250ZW50L3RoZW1lcy9pbnBlcnNwZWN0aXZlcmVjb3Jkcy9zcmMvanMvbW9kdWxlcy9yZWxlYXNlLWFyY2hpdmUvaW5kZXguanMiLCIvVXNlcnMvc2ltb252YW5zdGlwcmlhYW4vU2l0ZXMvaW5wLXdwL3dwLWNvbnRlbnQvdGhlbWVzL2lucGVyc3BlY3RpdmVyZWNvcmRzL3NyYy9qcy9tb2R1bGVzL2FydGlzdC1hcmNoaXZlL2luZGV4LmpzIiwiL1VzZXJzL3NpbW9udmFuc3RpcHJpYWFuL1NpdGVzL2lucC13cC93cC1jb250ZW50L3RoZW1lcy9pbnBlcnNwZWN0aXZlcmVjb3Jkcy9zcmMvanMvbW9kdWxlcy9mcm9udC1wYWdlL2luZGV4LmpzIiwiL1VzZXJzL3NpbW9udmFuc3RpcHJpYWFuL1NpdGVzL2lucC13cC93cC1jb250ZW50L3RoZW1lcy9pbnBlcnNwZWN0aXZlcmVjb3Jkcy9zcmMvanMvbW9kdWxlcy9ibG9ja3MvaW5kZXguanMiLCIvVXNlcnMvc2ltb252YW5zdGlwcmlhYW4vU2l0ZXMvaW5wLXdwL3dwLWNvbnRlbnQvdGhlbWVzL2lucGVyc3BlY3RpdmVyZWNvcmRzL3NyYy9qcy9tb2R1bGVzL2JhcmJhL2luZGV4LmpzIiwiL1VzZXJzL3NpbW9udmFuc3RpcHJpYWFuL1NpdGVzL2lucC13cC93cC1jb250ZW50L3RoZW1lcy9pbnBlcnNwZWN0aXZlcmVjb3Jkcy9zcmMvanMvbW9kdWxlcy9yYWRpby9sb2FkZXIvaW5kZXguanMiLCIvVXNlcnMvc2ltb252YW5zdGlwcmlhYW4vU2l0ZXMvaW5wLXdwL3dwLWNvbnRlbnQvdGhlbWVzL2lucGVyc3BlY3RpdmVyZWNvcmRzL3NyYy9qcy9hcHAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXG5leHBvcnQgZnVuY3Rpb24gZG9tUmVhZHkoZm4pIHtcbiAgaWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgIT09ICdsb2FkaW5nJykge1xuICAgIGZuKCk7XG4gICAgcmV0dXJuO1xuICB9XG4gIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCBmbik7XG59Ly9kb21SZWFkeShmbilcblxuZXhwb3J0IGZ1bmN0aW9uIGRldGVjdFRvdWNoKCl7XG5cbiAgLy9odHRwczovL21lZGl1bS5jb20vQGRhdmlkLmdpbGJlcnRzb24vdGhlLW9ubHktd2F5LXRvLWRldGVjdC10b3VjaC13aXRoLWphdmFzY3JpcHQtNzc5MWEzMzQ2Njg1XG4gIC8vIHRlc3QgdGhpcyBvbiBJRSAtIHJlYWQgdGhlIGNvbW1lbnRzIGluIHRoZSBhcnRpY2xlIFJFIGlzc3Vlc1xuICAvL2h0dHBzOi8vZ2lzdC5naXRodWIuY29tL2FkYmFyaW8vNGUzM2IwN2Q2MThkNDk5Y2Q4MWViNjkxYzc0NmI0N2UjZmlsZS1qcXVlcnktdG91Y2gtZGV0ZWN0LWpzXG4gIC8vaHR0cHM6Ly9wYXRyaWNraGxhdWtlLmdpdGh1Yi5pby90b3VjaC90ZXN0cy90b3VjaC1mZWF0dXJlLWRldGVjdC5odG1sXG4gIC8vaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMjEwNTQxMjYvaG93LXRvLWRldGVjdC1pZi1hLWRldmljZS1oYXMtbW91c2Utc3VwcG9ydFxuICAvL2h0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzQ4MTcwMjkvd2hhdHMtdGhlLWJlc3Qtd2F5LXRvLWRldGVjdC1hLXRvdWNoLXNjcmVlbi1kZXZpY2UtdXNpbmctamF2YXNjcmlwdFxuICAvL2h0dHA6Ly93d3cuc3R1Y294LmNvbS9ibG9nL3lvdS1jYW50LWRldGVjdC1hLXRvdWNoc2NyZWVuL1xuXG4vKiAgaWYgKCQod2luZG93KS53aWR0aCgpIDwgc2NyZWVuWFhTKSB7IC8vIHNldCBpbml0aWFsIFwic2l6ZVwiIHN0YXRlOyBjaGFuZ2Ugb24gcmVzaXplIChiZWxvdylcbiAgLy8gaWYgbGVzcyB0aGFuIFwib25lLWNvbFwiIC0gdXNlIHRvdWNoIHZlcnNpb24gcmVnYXJkbGVzc1xuLy8gICAgICAkKFwiYm9keVwiKS5yZW1vdmVDbGFzcygnbW9yZS1jb2wnKS5hZGRDbGFzcygnb25lLWNvbCcpOyAgICAgXG4gICAgICAgICAgICAvLyAgICBjb25zb2xlLmxvZyhcImFkZENsYXNzKCdvbmUtY29sJylcIik7XG5cbiAgfVxuICBlbHNlIHtcbi8vICAgICQoXCJib2R5XCIpLnJlbW92ZUNsYXNzKCdvbmUtY29sJykuYWRkQ2xhc3MoJ21vcmUtY29sJyk7ICBcbiAgfSovXG5cbiAgaWYgKFwib250b3VjaHN0YXJ0XCIgaW4gd2luZG93KVxuICB7XG5cbiAgICAvL2NvbnNvbGUubG9nKFwidXNlciBjYW4gdG91Y2hcIik7XG4gICAgJChcImJvZHlcIikucmVtb3ZlQ2xhc3MoJ2lzLW5vdC10b3VjaCcpOyAgICAgIFxuICAgICQoXCJib2R5XCIpLmFkZENsYXNzKCdpcy10b3VjaCcpOyAgICAgIFxuICAgIC8vIHJ1bihcInRvdWNoXCIpO1xuICAgIFxuICAgICAvL2h0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzIzODg1MjU1L2hvdy10by1yZW1vdmUtaWdub3JlLWhvdmVyLWNzcy1zdHlsZS1vbi10b3VjaC1kZXZpY2VzXG4gICAgdHJ5IHsgLy8gcHJldmVudCBleGNlcHRpb24gb24gYnJvd3NlcnMgbm90IHN1cHBvcnRpbmcgRE9NIHN0eWxlU2hlZXRzIHByb3Blcmx5XG4gICAgICAgICAgZm9yICh2YXIgc2kgaW4gZG9jdW1lbnQuc3R5bGVTaGVldHMpIHtcbiAgICAgICAgICAgICAgdmFyIHN0eWxlU2hlZXQgPSBkb2N1bWVudC5zdHlsZVNoZWV0c1tzaV07XG4gICAgICAgICAgICAgIGlmICghc3R5bGVTaGVldC5ydWxlcykgY29udGludWU7XG5cbiAgICAgICAgICAgICAgZm9yICh2YXIgcmkgPSBzdHlsZVNoZWV0LnJ1bGVzLmxlbmd0aCAtIDE7IHJpID49IDA7IHJpLS0pIHtcbiAgICAgICAgICAgICAgICAgIGlmICghc3R5bGVTaGVldC5ydWxlc1tyaV0uc2VsZWN0b3JUZXh0KSBjb250aW51ZTtcblxuICAgICAgICAgICAgICAgICAgaWYgKHN0eWxlU2hlZXQucnVsZXNbcmldLnNlbGVjdG9yVGV4dC5tYXRjaCgnOmhvdmVyJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICBzdHlsZVNoZWV0LmRlbGV0ZVJ1bGUocmkpO1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXgpIHt9XG4gIFxuICB9XG4gIGVsc2VcbiAge1xuICAgIC8vY29uc29sZS5sb2coXCJ1c2VyIGNhbiB1c2UgdGhlaXIgbW91c2VcIik7XG4gICAgJChcImJvZHlcIikucmVtb3ZlQ2xhc3MoJ2lzLXRvdWNoJyk7ICAgICAgXG4gICAgJChcImJvZHlcIikuYWRkQ2xhc3MoJ2lzLW5vdC10b3VjaCcpOyAgICAgIFxuICAgLy8gIHJ1bihcIm1vdXNlXCIpO1xuICAgfS8vIGlmIChcIm9udG91Y2hzdGFydFwiIGluIHdpbmRvdylcblxufTsvL2RldGVjdFRvdWNoXG5cbi8vVE8gRE8gY2hhbmdlIHRvIGpxdWVyeSBtYXJrdXA/XG5leHBvcnQgZnVuY3Rpb24gU2V0QXBwSGVpZ2h0KCkge1xuXG4gIGNvbnN0IGFwcEhlaWdodCA9ICgpID0+IHtcbiAgICAgY29uc3QgZG9jID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50XG4gICAgZG9jLnN0eWxlLnNldFByb3BlcnR5KCctLXNpdGUtaGVpZ2h0JywgYCR7d2luZG93LmlubmVySGVpZ2h0fXB4YCkgICBcbiAgfS8vYXBwSGVpZ2hcbiBcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGFwcEhlaWdodClcbiAgYXBwSGVpZ2h0KCk7XG5cbn0vL2Z1bmN0aW9uIFNldEFwcEhlaWdodCgpIHtcblxuLy9UTyBETyBjaGFuZ2UgdG8ganF1ZXJ5IG1hcmt1cFxuZXhwb3J0IGZ1bmN0aW9uIG5hdmlnYXRpb24oKXtcblxuICAgIHZhciBzdmcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIml0b2dnbGVcIik7XG4gICAgdmFyIHMgPSBTbmFwKHN2Zyk7XG5cbiAgICB2YXIgaWRvdCA9IFNuYXAuc2VsZWN0KCcjaWRvdCcpO1xuICAgIHZhciBpZG90cGF0aCA9IFNuYXAuc2VsZWN0KCcjaWRvdC1wYXRoJyk7XG5cbiAgICB2YXIgbWludXMgPSBTbmFwLnNlbGVjdCgnI21pbnVzJyk7XG5cbiAgICB2YXIgaWRvdFBvaW50cyA9IGlkb3Qubm9kZS5nZXRBdHRyaWJ1dGUoJ2QnKTtcbiAgICB2YXIgbWludXNQb2ludHMgPSBtaW51cy5ub2RlLmdldEF0dHJpYnV0ZSgnZCcpO1xuICAgIHZhciBpZG90cGF0aFBvaW50cyA9IGlkb3RwYXRoLm5vZGUuZ2V0QXR0cmlidXRlKCdkJyk7IC8vIHRoaXMgYWRkZWRcblxuXG4gICAgdmFyIHRvTWludXMgPSBmdW5jdGlvbigpe1xuICAgICAgaWRvdC5hbmltYXRlKHsgZDogbWludXNQb2ludHMgfSwgMTAwLCBtaW5hLmVhc2luKTsgIFxuICAgICAgLy9jb25zb2xlLmxvZyhcInRvTWludXNcIilcbiAgICB9XG5cbiAgICB2YXIgdG9JZG90ID0gZnVuY3Rpb24oKXtcbiAgICAgIGlkb3QuYW5pbWF0ZSh7IGQ6IGlkb3RwYXRoUG9pbnRzIH0sIDEwMCwgbWluYS5lYXNpbik7IFxuICAgICAgLy9jb25zb2xlLmxvZyhcInRvSWRvdCBzaG91bCBhbmltYXRlXCIpXG5cbiAgICB9IC8vIHRvSWRvdFxuXG5cbiAgICB2YXIgYm9keSA9IGRvY3VtZW50LmJvZHk7XG4gICAgdmFyIG5hdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCAnaGVhZC1uYXYnICksIGJ1dHRvbiwgbWVudTtcbiAgICBpZiAoICEgbmF2IClcbiAgICAgIHJldHVybjtcbiAgIGJ1dHRvbiA9IG5hdi5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCAnbmF2aWdhdGlvbi10b2dnbGUnKVswXTtcbiAgIGJnY2xvc2UgPSBuYXYuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSggJ2lucC1iZy1jbG9zZScpWzBdOyBcblxuXG4gIC8vICBidXR0b24gPSBuYXYucXVlcnlTZWxlY3RvckFsbChcIi5uYXZpZ2F0aW9uLXRvZ2dsZSwgLmlucC1iZy1jbG9zZVwiKVxuICAgIG1lbnUgICA9IG5hdi5nZXRFbGVtZW50c0J5VGFnTmFtZSggJ3VsJyApWzBdO1xuICAgIFxuXG4gICAgaWYgKCAhIGJ1dHRvbiApXG4gICAgICByZXR1cm47XG5cbiAgICAvLyBIaWRlIGJ1dHRvbiBpZiBtZW51IGlzIG1pc3Npbmcgb3IgZW1wdHkuXG4gICAgaWYgKCAhIG1lbnUgfHwgISBtZW51LmNoaWxkTm9kZXMubGVuZ3RoICkge1xuICAgICAgYnV0dG9uLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgXG4gICAgYmdjbG9zZS5vbmNsaWNrID0gZnVuY3Rpb24gdG9nZ2xlcigpIHtcbiAgICAgIGlmICggLTEgPT0gbWVudS5jbGFzc05hbWUuaW5kZXhPZiggJ25hdmlnYXRpb24taXRlbScgKSApXG4gICAgICAgIG1lbnUuY2xhc3NOYW1lID0gJ25hdmlnYXRpb24taXRlbSc7XG5cbiAgICAgIGlmICggLTEgIT0gYnV0dG9uLmNsYXNzTmFtZS5pbmRleE9mKCAnIHRvZ2dsZWQtb24nICkgKSB7XG4gICAgICAgICAgYm9keS5jbGFzc05hbWUgPSBib2R5LmNsYXNzTmFtZS5yZXBsYWNlKCAnIHRvZ2dsZWQtb24nLCAnJyApO1xuICAgICAgICAgIGJ1dHRvbi5jbGFzc05hbWUgPSBidXR0b24uY2xhc3NOYW1lLnJlcGxhY2UoICcgdG9nZ2xlZC1vbicsICcnICk7XG4gICAgICAgICAgbWVudS5jbGFzc05hbWUgPSBtZW51LmNsYXNzTmFtZS5yZXBsYWNlKCAnIHRvZ2dsZWQtb24nLCAnJyApO1xuXG4gICAgICAgICAgdG9JZG90KCk7ICAgICAgICAgIFxuICAgICAgICBcbiAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgICBib2R5LmNsYXNzTmFtZSArPSAnIHRvZ2dsZWQtb24nO1xuICAgICAgICAgIGJ1dHRvbi5jbGFzc05hbWUgKz0gJyB0b2dnbGVkLW9uJztcbiAgICAgICAgICBtZW51LmNsYXNzTmFtZSArPSAnIHRvZ2dsZWQtb24nO1xuXG4gICAgICAgICAgdG9NaW51cygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgIH0gLy8gaWZcblxuICAgIH07IC8vIHdlJ3JlIGVzc2V0bmlhbGx5IHJlcGVhdGluZyB0d28gZnVuY3Rpb25zIC0gbm90IHZlcnkgbmVhdFxuXG4gICAgYnV0dG9uLm9uY2xpY2sgPSBmdW5jdGlvbiB0b2dnbGVyKCkge1xuICAgICAgaWYgKCAtMSA9PSBtZW51LmNsYXNzTmFtZS5pbmRleE9mKCAnbmF2aWdhdGlvbi1pdGVtJyApIClcbiAgICAgICAgbWVudS5jbGFzc05hbWUgPSAnbmF2aWdhdGlvbi1pdGVtJztcblxuICAgICAgaWYgKCAtMSAhPSBidXR0b24uY2xhc3NOYW1lLmluZGV4T2YoICcgdG9nZ2xlZC1vbicgKSApIHtcbiAgICAgICAgICBib2R5LmNsYXNzTmFtZSA9IGJvZHkuY2xhc3NOYW1lLnJlcGxhY2UoICcgdG9nZ2xlZC1vbicsICcnICk7XG4gICAgICAgICAgYnV0dG9uLmNsYXNzTmFtZSA9IGJ1dHRvbi5jbGFzc05hbWUucmVwbGFjZSggJyB0b2dnbGVkLW9uJywgJycgKTtcbiAgICAgICAgICBtZW51LmNsYXNzTmFtZSA9IG1lbnUuY2xhc3NOYW1lLnJlcGxhY2UoICcgdG9nZ2xlZC1vbicsICcnICk7XG5cbiAgICAgICAgICB0b0lkb3QoKTsgICAgXG4gIFxuICAgICAgICAgIFxuICAgICAgICAgIC8qXG4gICAgICAgICAgYm9keS5hZGRFdmVudExpc3RlbmVyKCAndG91Y2htb3ZlJywgZnVuY3Rpb24oZXZlbnQpIHtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgfSwgZmFsc2UgKTsgICAgXG4gICAgICAgICovXG4gICAgICB9IGVsc2Uge1xuXG4gICAgICAgICAgYm9keS5jbGFzc05hbWUgKz0gJyB0b2dnbGVkLW9uJztcbiAgICAgICAgICBidXR0b24uY2xhc3NOYW1lICs9ICcgdG9nZ2xlZC1vbic7XG4gICAgICAgICAgbWVudS5jbGFzc05hbWUgKz0gJyB0b2dnbGVkLW9uJztcblxuICAgICAgICAgIHRvTWludXMoKTtcblxuICAgICAgICAgIC8vIGRpc2FibGUgc2Nyb2xsXG4gICAgICAgICAgXG4gICAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJywgZnVuY3Rpb24oZSkge2UucHJldmVudERlZmF1bHQoKX0sIGZhbHNlKTtcblxuICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgIH0gLy8gaWZcblxuICAgIH07XG5cblxuICAgICBpZiAgKCQoJy5uYXZpZ2F0aW9uLXRvZ2dsZScpLmhhc0NsYXNzKCd0b2dnbGVkLW9uJykpe1xuICAgICAgLy8gIGNvbnNvbGUubG9nKCdpZiBuYXZpZ2F0aW9uIHdhcyBwcmV2aW91c2x5IG9uIC0gdHVybiBpdCBvZmYnKTtcbiAgICAgIC8vICAkKCdib2R5JykuYWRkQ2xhc3MoJ3RvZ2dsZWQtb24nKTsgLy8gYmVjYXVzZSB0aGlzIHdhcyBwcmV2aW91c2x5IG9uXG4gICAgIFxuICAgICAgICAgICBib2R5LmNsYXNzTmFtZSA9IGJvZHkuY2xhc3NOYW1lLnJlcGxhY2UoICcgdG9nZ2xlZC1vbicsICcnICk7XG4gICAgICAgICAgIGJ1dHRvbi5jbGFzc05hbWUgPSBidXR0b24uY2xhc3NOYW1lLnJlcGxhY2UoICcgdG9nZ2xlZC1vbicsICcnICk7XG4gICAgICAgICAgIG1lbnUuY2xhc3NOYW1lID0gbWVudS5jbGFzc05hbWUucmVwbGFjZSggJyB0b2dnbGVkLW9uJywgJycgKTtcbiAgICBcbiAgICAgICAgICAgIGlkb3QuYW5pbWF0ZSh7IGQ6IGlkb3RwYXRoUG9pbnRzIH0sIDEwMCwgbWluYS5lYXNpbik7IFxuICAgIC8vICAgICAgICBjb25zb2xlLmxvZyhcInRvSWRvdCBzaG91bCBhbmltYXRlXCIpXG5cbiAgICAgIH0gLy9pZiBoYXMgY2xhc3NcblxufS8vbmF2aWdhdGlvbigpXG4gXG5leHBvcnQgZnVuY3Rpb24gYWN0aXZlVG91Y2hJdGVtKCkge1xuLy8gcmV2aWV3IHRoaXNcbiAgLypcbiAgJCgnLnJlcGVhdGVyLWl0ZW0nKS5lYWNoKGZ1bmN0aW9uICgpIHsgLy8gbWlnaHQgbmVlZCB0byByZXZpZXcgdGhpc1xuICBcbiAgICBjb25zb2xlLmxvZyhcIkVhY2ggcmVwZWF0ZXItaXRlbSBmb3IgYWN0aXZlVG91Y2hJdGVtXCIpO1xuIFxuICAgIHZhciBvYmplY3RUb3AgPSAkKHRoaXMpLm9mZnNldCgpLnRvcCxcbiAgICAgIHdpbmRvd0JvdHRvbSA9ICQod2luZG93KS5zY3JvbGxUb3AoKSArICgkKHdpbmRvdykuaW5uZXJIZWlnaHQoKSAqIDEpOyAvL3dhcyAgKjAuOCksXG4gIFxuICAgIGlmIChvYmplY3RUb3AgPCB3aW5kb3dCb3R0b20pIHtcblxuICAgICAgY29uc29sZS5sb2coXCJpZiAoIG9iamVjdFRvcCA8IHdpbmRvd0JvdHRvbSApXCIpXG4gIFxuXG4gICAgfSBlbHNlIHsgLy9lbHNlIGlmICggb2JqZWN0VG9wIDwgd2luZG93Qm90dG9tIClcbiAgICAgIGNvbnNvbGUubG9nKFwiZWxzZSBpZiAoIG9iamVjdFRvcCA8IHdpbmRvd0JvdHRvbSApXCIpO1xuICBcbiAgICAgIFxuICAgICAgLy8gJCh0aGlzKS5jc3MoICdvcGFjaXR5JywgMC4xICk7XG4gICAgfVxuXG4gIH0pOyAvLyAuZWFjaChmdW5jdGlvbigpXG4gICovXG5cbn0gLy9hY3RpdmVUb3VjaEl0ZW0oKVxuXG5leHBvcnQgZnVuY3Rpb24gb3JpZW50YXRpb24oKXtcbi8vIHJldmlldyB0aGlzIC0gd2UgbWlnaHQgbmVlZCBpdCB0byBlc251cmUgaW1hZ2Ugb3JpZW5hdGlvbnMgYXJlIGNvcnJlY3RcblxuICAvL2NvbnNvbGUubG9nKFwiaGVsbG8gb3JpZW50YXRpb25cIilcbiAgdmFyIHdpbndpZHRoID0gJCh3aW5kb3cpLndpZHRoKCk7IC8vIHNob3VsZCBiZSBpbm5lciB3ZWlkdGhcbiAgdmFyIHdpbmhlaWdodCA9ICQod2luZG93KS5oZWlnaHQoKTsgLy8gaW5uZXIgaGVpZ2h0XG4gIHZhciBpc0hvcml6b250YWw7XG5cbiAgaWYgKHdpbndpZHRoID4gd2luaGVpZ2h0ICkge1xuICAgIC8qIGhvcml6b250YWwgb3JpZW50YXRpb24gKi9cbiAgICAkKFwiYm9keVwiKS5hZGRDbGFzcygnaG9yaXpvbnRhbCcpO1xuICAgICQoXCJib2R5XCIpLnJlbW92ZUNsYXNzKCd2ZXJ0aWNhbCcpO1xuXG4gICB9IGVsc2V7XG4gICAgLyogdmVydGljYWwgb3JpZW50YXRpb24gKi9cbiAgICAkKFwiYm9keVwiKS5yZW1vdmVDbGFzcygnaG9yaXpvbnRhbCcpO1xuICAgICQoXCJib2R5XCIpLmFkZENsYXNzKCd2ZXJ0aWNhbCcpO1xuXG4gIH0vL2Vsc2VcblxufSAvLyBmdW5jdGlvbiBvcmllbnRhdGlvblxuXG5leHBvcnQgZnVuY3Rpb24gb3BhY2l0eSgpe1xuXG4gICAgLy8gJChcImJvZHlcIikuYWRkQ2xhc3MoJ3ByZS1sb2FkZWQnKTtcblxuICAgICQoXCJib2R5XCIpLmltYWdlc0xvYWRlZChmdW5jdGlvbigpeyAvLyBjb25zaWRlciBhIGxhemxvYWRuZyBvcHRpb25zP1xuXG4gICAgICAvL2NvbnNvbGUubG9nKFwiSW1hZ2VzIGhhdmUgbG9hZGVkXCIpXG4gICAgICAgIFxuICAgICAgICBmdW5jdGlvbiB3YWl0bG9hZGluZygpe1xuXG4gICAgICAgICQoXCJib2R5XCIpLmFkZENsYXNzKCdsb2FkZWQnKVxuXG4gICAgICAgIH07IC8vd2FpdGxvYWRpbmcoKVxuICAgICAgICBzZXRUaW1lb3V0KHdhaXRsb2FkaW5nLCAyMDApO1xuXG4gICAgIH0pOyAvL2ltYWdlc2xvYWRlZFxuXG59Oy8vb3BhY2l0eVxuXG5leHBvcnQgZnVuY3Rpb24gZGV2R3JpZCgpe1xuXG4vLyBjb25zb2xlLmxvZyhcImRldiBncmlkXCIpO1xuXG4gIHZhciAkdG9nZ2xlID0gJChcIi5kZXYtdG9nZ2xlXCIpLCBcbiAgJGNsYXNzdGFyZ2V0ID0gJCgnYm9keScpOyBcblxuICAkdG9nZ2xlLmNsaWNrKGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgIGlmICgkY2xhc3N0YXJnZXQuaGFzQ2xhc3MoJ2Rldi1vbicpKXtcbiAgICAgICAgICBcbiAgICAgICAgJGNsYXNzdGFyZ2V0LnJlbW92ZUNsYXNzKCdkZXYtb24nKTtcblxuICAgICAgfSBlbHNle1xuXG4gICAgICAgICRjbGFzc3RhcmdldC5hZGRDbGFzcygnZGV2LW9uJyk7XG5cbiAgICAgIH07IC8vIGlmICQoJ2JvZHknKS5oYXNDbGFzcygnZGV2LW9uJylcblxuXG4gIH0pOyAvLyBjbGljayAgICAgIFxuXG5cbiAgdmFyIHJ0aW1lZGV2O1xuICB2YXIgdGltZW91dGRldiA9IGZhbHNlO1xuICB2YXIgZGVsdGFkZXYgPSAyMDA7XG4gICQod2luZG93KS5yZXNpemUoZnVuY3Rpb24oKSB7XG4gICAgICBydGltZWRldiA9IG5ldyBEYXRlKCk7XG4gICAgICBpZiAodGltZW91dGRldiA9PT0gZmFsc2UpIHtcbiAgICAgICAgICB0aW1lb3V0ZGV2ID0gdHJ1ZTtcbiAgICAgICAgICBzZXRUaW1lb3V0KHJlc2l6ZWVuZGRldiwgZGVsdGFkZXYpO1xuICAgICAgfVxuICB9KTtcblxuICBmdW5jdGlvbiByZXNpemVlbmRkZXYoKSB7XG4gICAgXG4gICAgICBpZiAobmV3IERhdGUoKSAtIHJ0aW1lZGV2IDwgZGVsdGFkZXYpIHtcbiAgICAgICAgICBzZXRUaW1lb3V0KHJlc2l6ZWVuZGRldiwgZGVsdGFkZXYpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aW1lb3V0ZGV2ID0gZmFsc2U7XG4gICAgICAgIHZhciB3aW5kb3doZWlnaHQgPSAkKHdpbmRvdykuaGVpZ2h0KCk7XG4gICAgICAgICAvL2NvbnNvbGUubG9nKFwidGhpcyB3b3JraW5nIGRldj9cIilcbiAgICAgICAgICBvcmllbnRhdGlvbigpOyAvL3ZlcnRpY2FsIG9yIGhvcml6b250YWxcblxuICAgICAgfSAgIC8vZWxzZSAgICBcblxuICAgfTsvL3Jlc2l6ZWVuZCBmdWNudGlvblxuXG5cbn0vL2V4cG9ydCBmdW5jdGlvbiBkZXZncmlkKClcblxuZXhwb3J0IGZ1bmN0aW9uIHByZXZpZXdTaXRlKCl7XG5cbiAgLy8gcHJldmlldyBzaXRlIC0gaWYgY29va2llcyBkaWFibGVzIG9yIG5vdCBvblxuICAgIGNvbnNvbGUubG9nKFwicHJldmlld3NpdGUgZnVuY3Rpb25cIik7XG5cbiAgICAgICQoXCJib2R5XCIpLmF0dHJjaGFuZ2Uoe1xuICAgICAgICB0cmFja1ZhbHVlczogdHJ1ZSwgLy8gc2V0IHRvIHRydWUgc28gdGhhdCB0aGUgZXZlbnQgb2JqZWN0IGlzIHVwZGF0ZWQgd2l0aCBvbGQgJiBuZXcgdmFsdWVzXG4gICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbihldm50KSB7XG4gICAgICAgICAgICBpZihldm50LmF0dHJpYnV0ZU5hbWUgPT0gXCJjbGFzc1wiKSB7IC8vIHdoaWNoIGF0dHJpYnV0ZSB5b3Ugd2FudCB0byB3YXRjaCBmb3IgY2hhbmdlc1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICB2YXIgJG5vYnV0dG9uID0gJChcIiNjbi1yZWZ1c2UtY29va2llXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgJHllc2J1dHRvbiA9ICQoXCIjY24tYWNjZXB0LWNvb2tpZVwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICRkb3RidXR0b24gPSAkKFwiLmNuLXJldm9rZS1jb29raWVcIilcblxuXG4gICAgICAgICAgICAgICAgICBpZiAoJCgnYm9keScpLmhhc0NsYXNzKCdjb29raWVzLWFjY2VwdGVkJykpe1xuICAgICAgICAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICRub2J1dHRvbi5ob3ZlcihmdW5jdGlvbigpeyAvLyB3YXMgI2NuLWFjY2VwdC1jb29raWUgLyNjb29raWUtbm90aWNlXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiYm9keVwiKS5hZGRDbGFzcyhcInByZXZpZXctc2l0ZSBnLXNjYWxlXCIpOyAgLy9BZGQgdGhlIGFjdGl2ZSBjbGFzcyB0byB0aGUgYXJlYSBpcyBob3ZlcmVkXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiYm9keVwiKS5yZW1vdmVDbGFzcyhcInByZXZpZXctc2l0ZSBnLXNjYWxlXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICR5ZXNidXR0b24uaG92ZXIoZnVuY3Rpb24oKXtcblxuICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgY29uc29sZS5sb2coXCJoYXMgY2xhc3MgY29va2llcy1hY2NlcHRlZCBcIilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiYm9keVwiKS5hZGRDbGFzcyhcInByZXZpZXctc2l0ZVwiKTsgIC8vQWRkIHRoZSBhY3RpdmUgY2xhc3MgdG8gdGhlIGFyZWEgaXMgaG92ZXJlZFxuICAgICAgICAgICAgICAgICAgICAgICAgfSwgZnVuY3Rpb24gKCkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJChcImJvZHlcIikucmVtb3ZlQ2xhc3MoXCJwcmV2aWV3LXNpdGVcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICgkKCdib2R5JykuaGFzQ2xhc3MoJ2Nvb2tpZXMtcmVmdXNlZCcpKXtcblxuICAgICAgICAgICAgICAgICAgICAgICAgJG5vYnV0dG9uLmhvdmVyKGZ1bmN0aW9uKCl7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiYm9keVwiKS5hZGRDbGFzcyhcInByZXZpZXctc2l0ZSBnLXNjYWxlXCIpOyAgLy9BZGQgdGhlIGFjdGl2ZSBjbGFzcyB0byB0aGUgYXJlYSBpcyBob3ZlcmVkXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiYm9keVwiKS5yZW1vdmVDbGFzcyhcInByZXZpZXctc2l0ZSBnLXNjYWxlXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICR5ZXNidXR0b24uaG92ZXIoZnVuY3Rpb24oKXsgXG4gICAgICAgICAgICAgICAgICAgICAgICAgIC8vICBjb25zb2xlLmxvZyhcImhhcyBjbGFzcyBjb29raWVzLXJlZnVzZWQgXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJChcImJvZHlcIikuYWRkQ2xhc3MoXCJwcmV2aWV3LXNpdGVcIik7ICAvL0FkZCB0aGUgYWN0aXZlIGNsYXNzIHRvIHRoZSBhcmVhIGlzIGhvdmVyZWRcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCJib2R5XCIpLnJlbW92ZUNsYXNzKFwicHJldmlldy1zaXRlXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHByZXZpZXcgb24gdGhlIGRvdDpcblxuICAgICAgICAgICAgICAgICAgICAgICAkZG90YnV0dG9uLmhvdmVyKGZ1bmN0aW9uKCl7IFxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJChcImJvZHlcIikuYWRkQ2xhc3MoXCJwcmV2aWV3LXNpdGVcIik7ICAvL0FkZCB0aGUgYWN0aXZlIGNsYXNzIHRvIHRoZSBhcmVhIGlzIGhvdmVyZWRcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sIGZ1bmN0aW9uICgpIHtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCJib2R5XCIpLnJlbW92ZUNsYXNzKFwicHJldmlldy1zaXRlXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoJCgnYm9keScpLmhhc0NsYXNzKCdjb29raWVzLW5vdC1zZXQnKSl7XG4gICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgJHllc2J1dHRvbi5ob3ZlcihmdW5jdGlvbigpeyAvLyB3YXMgI2NuLWFjY2VwdC1jb29raWUgLyNjb29raWUtbm90aWNlXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiYm9keVwiKS5hZGRDbGFzcyhcInByZXZpZXctc2l0ZVwiKTsgIC8vQWRkIHRoZSBhY3RpdmUgY2xhc3MgdG8gdGhlIGFyZWEgaXMgaG92ZXJlZFxuICAgICAgICAgICAgICAgICAgICAgICAgfSwgZnVuY3Rpb24gKCkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJChcImJvZHlcIikucmVtb3ZlQ2xhc3MoXCJwcmV2aWV3LXNpdGVcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgJG5vYnV0dG9uLmhvdmVyKGZ1bmN0aW9uKCl7IC8vIHdhcyAjY24tYWNjZXB0LWNvb2tpZSAvI2Nvb2tpZS1ub3RpY2VcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAkKFwiYm9keVwiKS5hZGRDbGFzcyhcInByZXZpZXctc2l0ZSBnLXNjYWxlXCIpOyAgLy9BZGQgdGhlIGFjdGl2ZSBjbGFzcyB0byB0aGUgYXJlYSBpcyBob3ZlcmVkXG4gICAgICAgICAgICAgICAgICAgICAgfSwgZnVuY3Rpb24gKCkge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICQoXCJib2R5XCIpLnJlbW92ZUNsYXNzKFwicHJldmlldy1zaXRlIGctc2NhbGVcIik7XG4gICAgICAgICAgICAgICAgICAgICAgfSk7XG5cblxuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIH0vLz09IFwiY2xhc3NcIlxuXG4gICAgICAgICAgfVxuXG4gICAgICAgIH0pO1xuICAgICAgICBcbn0vL3ByZXZpZXdTaXRlKCk7XG5cbmV4cG9ydCBmdW5jdGlvbiBtZW51Q2xhc3NlcyhkYXRhLCB0YXJnZXQpIHtcblxuICAkKCcubWVudS1pdGVtLicgKyB0YXJnZXQpLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICQodGhpcykucmVtb3ZlQ2xhc3ModGFyZ2V0KTtcbiAgfSk7XG5cbiAgJChgLm1lbnUtaXRlbSA+IGFbaHJlZiQ9XCIkeyBkYXRhLm5leHQudXJsLnBhdGggfVwiXWApLmNsb3Nlc3QoJy5tZW51LWl0ZW0nKS5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAkKHRoaXMpLmFkZENsYXNzKHRhcmdldCk7XG4gIH0pO1xuXG59IC8vbWVudUNsYXNzZXModGFyZ2V0KVxuXG5leHBvcnQgZnVuY3Rpb24gcmVjb3JkYW5pbWF0aW9uKCl7XG5cbiAgY29uc29sZS5sb2coXCJlYWNoIHJlY29yZCBhbmltYXRpb25cIik7XG5cbiAgICAvLyB2aW55bDpcblxuICAgICQoXCIucmVjb3JkLWNpcmNsZS1jb250YWluZXJcIikuZWFjaChmdW5jdGlvbigpIHsgIFxuICAgIC8vICBjb25zb2xlLmxvZyhcImVhY2hyZWNvcmQgY29udGFpbmVyXCIpXG5cbiAgICAgIHZhciAkdGhpc2NvbnRhaW5lciA9ICQodGhpcyksXG4gICAgICAgICAgJHRoaXNjaXJjbGUgPSAkKHRoaXMpLmZpbmQoXCIucmVjb3JkLWNpcmNsZVwiKTtcbiAgICAgICAgICAkdGhpc2NvbnRhaW5lci5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiLFwicm90YXRpbmdcIixcInJvdGF0ZWRcIik7Ly8gaW5jYXNlIGl0cyBhY3RpdmUgc3RpbGwgLSBzZWVtcyB0byBiZSBzb21lIGJ1Z2d5IGJlaGF2aW9yIGF0bVxuICAgICAgICAgICR0aGlzY2lyY2xlLnJlbW92ZUNsYXNzKFwicm90YXRpbmdcIik7Ly8gaW4gYW4gZWZmb3J0IHRvIHJlc2V0P1xuXG4gICAgICAgICAgJHRoaXNjb250YWluZXIuY3NzKFwicG9pbnRlci1ldmVudHNcIixcImluaXRpYWxcIik7Ly8gYWxsb3cgcG9pbnRlciBldmVudHMgbm93IHRoYXQgdGhlIGpzIGlzIHJlYWR5XG5cbiAgICAgICAgICAvL2NvbnNvbGUubG9nKCdqdXN0IHJlbW92ZSBjbGFzc2VzJyk7XG5cbiAgICAgICAgJHRoaXNjaXJjbGUuaG92ZXIoZnVuY3Rpb24oKSB7XG4gICAgICAvLyR0aGlzY2lyY2xlLm1vdXNlb3ZlcihmdW5jdGlvbigpIHtcbiAgICAgICAgICBpZigkdGhpc2NpcmNsZS5oYXNDbGFzcyhcInJvdGF0aW5nXCIpKXtcbiAgICAgICAgY29uc29sZS5sb2coXCJoYXMgY2xhc3Mgcm90YXR0aW5nXCIpXG5cbiAgICAgICAgIC8qICR0aGlzY2lyY2xlLnJlbW92ZUNsYXNzKFwicm90YXRpbmdcIik7IFxuICAgICAgICAgICR0aGlzY2lyY2xlLnRvZ2dsZUNsYXNzKFwicm90YXRlXCIpO1xuICAgICAgICAgICR0aGlzY29udGFpbmVyLnRvZ2dsZUNsYXNzKFwiYWN0aXZlXCIpO1xuKi9cbiAgICAgICAgICAkdGhpc2NpcmNsZS5yZW1vdmVDbGFzcyhcInJvdGF0aW5nXCIpOyBcbiAgICAgICAgICAkdGhpc2NpcmNsZS5yZW1vdmVDbGFzcyhcInJvdGF0ZVwiKTtcbiAgICAgICAgICAkdGhpc2NvbnRhaW5lci5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtcblxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zb2xlLmxvZyhcIkRPRVMgTk9UIGhhdmUgY2xhc3Mgcm90YXR0aW5nXCIpXG5cbiAgICAgICAgICAgJHRoaXNjaXJjbGUuYWRkQ2xhc3MoXCJyb3RhdGluZ1wiKTtcbiAgICAgICAgICAgJHRoaXNjaXJjbGUuYWRkQ2xhc3MoXCJyb3RhdGVcIik7XG4gICAgICAgICAgICR0aGlzY29udGFpbmVyLmFkZENsYXNzKFwiYWN0aXZlXCIpO1xuXG4gICAgICAgIH0gLy8gaWZcblxuICAgICAgfSk7IC8vIGhvdmVyXG5cbiAgICB9KTsgLy8gZWFjaCAkKFwiLnJlY29yZC1jaXJjbGVcIilcblxuIC8vIGRpZ2l0YWw6XG5cbiAgJChcIi5yZWNvcmQtc3F1YXJlLWNvbnRhaW5lclwiKS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICBjb25zb2xlLmxvZyhcImVhY2ggc3F1YXJlIGNvbnRhaW5lclwiKTtcblxuXG4gICAgICB2YXIgJHRoaXNjb250YWluZXIgPSAkKHRoaXMpLFxuICAgICAgICAgICR0aGlzc3F1YXJlID0gJCh0aGlzKS5maW5kKFwiLmZsaXAtY2FyZFwiKTsvLyB3YXM6IC5yZWNvcmQtc3F1YXJlXG4gICAgICAgICAgJHRoaXNjb250YWluZXIucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIixcImZsaXBwaW5nXCIsXCJmbGlwcGVkXCIpOy8vIGluY2FzZSBpdHMgYWN0aXZlIHN0aWxsIC0gc2VlbXMgdG8gYmUgc29tZSBidWdneSBiZWhhdmlvciBhdG1cbiAgICAgICAgICAkdGhpc3NxdWFyZS5yZW1vdmVDbGFzcyhcImZsaXBwaW5nXCIpOy8vIGluIGFuIGVmZm9ydCB0byByZXNldD9cblxuICAgICAgICAgICR0aGlzY29udGFpbmVyLmNzcyhcInBvaW50ZXItZXZlbnRzXCIsXCJpbml0aWFsXCIpOy8vIGFsbG93IHBvaW50ZXIgZXZlbnRzIG5vdyB0aGF0IHRoZSBqcyBpcyByZWFkeVxuXG4gICAgICAgICAgLy9jb25zb2xlLmxvZygnanVzdCByZW1vdmUgY2xhc3NlcycpO1xuXG4gICAgICAgICR0aGlzc3F1YXJlLmhvdmVyKGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKFwidGhpcyBzcXVhcmUgaG92ZXJcIilcblxuXG4gICAgICAvLyR0aGlzY2lyY2xlLm1vdXNlb3ZlcihmdW5jdGlvbigpIHtcbiAgICAgICAgICBpZigkdGhpc3NxdWFyZS5oYXNDbGFzcyhcImZsaXBwaW5nXCIpKXtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcImhhcyBjbGFzcyBmbGlwcGluZ1wiKVxuXG4gICAgICAgIFxuICAgICAgICAgICR0aGlzc3F1YXJlLnJlbW92ZUNsYXNzKFwiZmxpcHBpbmdcIik7IFxuICAgICAgICAgICR0aGlzc3F1YXJlLnJlbW92ZUNsYXNzKFwiZmxpcFwiKTtcbiAgICAgICAgICAkdGhpc2NvbnRhaW5lci5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtcblxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICBjb25zb2xlLmxvZyhcIkRPRVMgTk9UIGhhdmUgY2xhc3MgZmxpcHBpbmdcIilcblxuICAgICAgICAgICAkdGhpc3NxdWFyZS5hZGRDbGFzcyhcImZsaXBwaW5nXCIpO1xuICAgICAgICAgICAkdGhpc3NxdWFyZS5hZGRDbGFzcyhcImZsaXBcIik7XG4gICAgICAgICAgICR0aGlzY29udGFpbmVyLmFkZENsYXNzKFwiYWN0aXZlXCIpO1xuXG4gICAgICAgIH0gLy8gaWZcblxuICAgICAgfSk7IC8vIGhvdmVyXG5cbiAgIH0pOyAvLyQoXCIucmVjb3JkLXNxdWFyZS1jb250YWluZXJcIikuZWFjaChmdW5jdGlvbigpXG5cbn0gLy8gZnVuY3Rpb24gcmVjb3Jkc2NpcmNsZVxuXG5leHBvcnQgZnVuY3Rpb24gaG9tZWdhbGxlcnkoKXtcbiAgLy9odHRwczovL2ZsaWNraXR5Lm1ldGFmaXp6eS5jby9vcHRpb25zLmh0bWxcbiAgLy9jb25zb2xlLmxvZyhcImhvbWUgZ2FsbGVyeSBmdW5jdGlvblwiKTtcblxuICAgIHZhciAkdGhpc2dhbGxlcnkgPSAkKCdib2R5JykuZmluZChcIi5mZWF0dXJlZC1ob21lLWNhcm91c2VsXCIpOyAgICAgIFxuXG4gICAgICAkdGhpc2dhbGxlcnkuZmxpY2tpdHkoe1xuICAgICAgICAgIGltYWdlc0xvYWRlZDogdHJ1ZSwgXG4gICAgICAgICAgc2V0R2FsbGVyeVNpemU6IGZhbHNlLCAvL2lmIHlvdSBwcmVmZXIgdG8gc2l6ZSB0aGUgY2Fyb3VzZWwgd2l0aCBDU1MsIHJhdGhlciB0aGFuIHVzaW5nIHRoZSBzaXplIG9mIGNlbGxzLlxuICAgICAgLy8gZGVmYXVsdCBjZWxsQWxpZ246ICdjZW50ZXInXG4gICAgICAgICAgcGVyY2VudFBvc2l0aW9uOiBmYWxzZSwgXG4gICAgICAgICAgZmFkZTogdHJ1ZSxcbiAgICAgICAgICBhdXRvUGxheTogNjAwMCwgLy8ge051bWJlcn1cbiAgLy9odHRwczovL2dpdGh1Yi5jb20vbWV0YWZpenp5L2ZsaWNraXR5L2lzc3Vlcy80NlxuICAgICAgICAvLyAgc2VsZWN0ZWRBdHRyYWN0aW9uOiAwLjAxLFxuICAgICAgICAgIC8vIGZyaWN0aW9uOiAwLjE1LFxuICAgICAgICAgIHBhdXNlQXV0b1BsYXlPbkhvdmVyOiBmYWxzZSwgLy8gZG9uJ3QgdGhpbmsgcGF1c2luZyBpcyBnb29kIGlkZWE7IGJlY2F1c2Ugb2YgdGhlIHNpemUoZW50aXJlIHZpZXcgcG9ydCkgb2YgdGhlIGNvbnRlbnRcbiAgICAgICAgICBkcmFnZ2FibGU6IGZhbHNlLFxuICAgICAgICAgIGZyZWVTY3JvbGw6IGZhbHNlLCBcbiAgICAgICAgICB3cmFwQXJvdW5kOiB0cnVlLCBcbiAgICAgICAgICBhcnJvd1NoYXBlOiB7IFxuICAgICAgICAgICAgeDA6IDE1LFxuICAgICAgICAgICAgeDE6IDY1LCB5MTogNTAsXG4gICAgICAgICAgICB4MjogNzUsIHkyOiA0MCxcbiAgICAgICAgICAgIHgzOiAzNVxuICAgICAgICAgIH1cbiAgLy8gICAgICAgICAgICBhcnJvd1NoYXBlOiAnODIuOTMxMjc5MyAyNC40NTAxNjI2IDg2Ljk2NTM5MTcgMjcuNTUwNDUyOCA0OS43NTc2MTQ2IDc1Ljk2NTM5MTcgMTIuNTQ5ODM3NCAyNy41NTA0NTI4IDE2LjU4Mzk0OTggMjQuNDUwMTYyNiA0OS43NTc2MTQ2IDY3LjYxNTg5NScsXG5cbiAgICAgICAgfSk7XG5cbn0gLy8gZnVuY3Rpb24gaG9tZWdhbGxlcnlcblxuZXhwb3J0IGZ1bmN0aW9uIGhvbWVyZWxlYXNlZ2FsbGVyeSgpe1xuICAvL2h0dHBzOi8vZmxpY2tpdHkubWV0YWZpenp5LmNvL29wdGlvbnMuaHRtbFxuICAvL2NvbnNvbGUubG9nKFwiaG9tZSBnYWxsZXJ5IGZ1bmN0aW9uXCIpO1xuXG4gICAgdmFyICR0aGlzZ2FsbGVyeSA9ICQoJ2JvZHknKS5maW5kKFwiLnJlbGVhc2UtaG9tZS1jYXJvdXNlbFwiKTsgICAgICBcblxuICAgICAgJHRoaXNnYWxsZXJ5LmZsaWNraXR5KHtcbiAgICAgICAgICBpbWFnZXNMb2FkZWQ6IHRydWUsIFxuICAgICAgICAgIHNldEdhbGxlcnlTaXplOiBmYWxzZSwgLy9pZiB5b3UgcHJlZmVyIHRvIHNpemUgdGhlIGNhcm91c2VsIHdpdGggQ1NTLCByYXRoZXIgdGhhbiB1c2luZyB0aGUgc2l6ZSBvZiBjZWxscy5cbiAgICAgICAgICBwZXJjZW50UG9zaXRpb246IGZhbHNlLCBcbiAgICAgICAgICBhdXRvUGxheTogNjAwMCwgLy8ge051bWJlcn1cbiAgICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vbWV0YWZpenp5L2ZsaWNraXR5L2lzc3Vlcy80NlxuICAgICAgICAgIC8vIHNlbGVjdGVkQXR0cmFjdGlvbjogMC4wMSxcbiAgICAgICAgICAvLyBmcmljdGlvbjogMC4xNSxcbiAgICAgICAgICBwYXVzZUF1dG9QbGF5T25Ib3ZlcjogdHJ1ZSxcbiAgICAgICAgICAvLyBwYXVzZUF1dG9QbGF5T25Ib3ZlcjogZmFsc2UsIC8vIGRvbid0IHRoaW5rIHBhdXNpbmcgaXMgZ29vZCBpZGVhOyBiZWNhdXNlIG9mIHRoZSBzaXplKGVudGlyZSB2aWV3IHBvcnQpIG9mIHRoZSBjb250ZW50XG4gICAgICAgICAgZHJhZ2dhYmxlOiBmYWxzZSxcbiAgICAgICAgICBmcmVlU2Nyb2xsOiBmYWxzZSwgXG4gICAgICAgICAgd3JhcEFyb3VuZDogdHJ1ZSwgXG4gICAgICAgICAgYXJyb3dTaGFwZTogeyBcbiAgICAgICAgICAgIHgwOiAxNSxcbiAgICAgICAgICAgIHgxOiA2NSwgeTE6IDUwLFxuICAgICAgICAgICAgeDI6IDc1LCB5MjogNDAsXG4gICAgICAgICAgICB4MzogMzVcbiAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBhcnJvd1NoYXBlOiAnODIuOTMxMjc5MyAyNC40NTAxNjI2IDg2Ljk2NTM5MTcgMjcuNTUwNDUyOCA0OS43NTc2MTQ2IDc1Ljk2NTM5MTcgMTIuNTQ5ODM3NCAyNy41NTA0NTI4IDE2LjU4Mzk0OTggMjQuNDUwMTYyNiA0OS43NTc2MTQ2IDY3LjYxNTg5NScsXG4gICAgICB9KTtcblxufSAvLyBmdW5jdGlvbiBob21lcmVsZWFzZWdhbGxlcnlcblxuZXhwb3J0IGZ1bmN0aW9uIGV2ZW50c3ZpZXcoKXtcbi8vbm90IHN1cmUgd2UgdXNlIHRoaXM/XG5cbiAgICB2YXIgJHRvZ2dsZSA9ICQoXCIucmVsZWFzZS12aWV3XCIpLCBcbiAgICAgICAgJGNsYXNzdGFyZ2V0ID0gJCgnYm9keScpOyBcblxuICAgICAgICAkdG9nZ2xlLmNsaWNrKGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgIFxuICAgICAgICAgIC8vICAgY29uc29sZS5sb2coXCJjO2Npa2xja1wiKSAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAoJGNsYXNzdGFyZ2V0Lmhhc0NsYXNzKCdyZWxlYXNlLWxpc3QtdmlldycpKXtcbiAgICAgICAgICAgICAgXG5cbiAgICAgICAgICAgICAgdmFyICRhY3RpdmVpdGVtID0gJChcIi5oZWlnaHQtaXRlbS5hY3RpdmVcIik7XG5cbiAgICAgICAgICAgICAgJGNsYXNzdGFyZ2V0LnJlbW92ZUNsYXNzKCdyZWxlYXNlLWxpc3QtdmlldycpO1xuICAgICAgICAgICAgICAkKCdodG1sLCBib2R5JykuYW5pbWF0ZSh7IHNjcm9sbFRvcDogJGFjdGl2ZWl0ZW0ub2Zmc2V0KCkudG9wKzF9KTtcblxuXG4gICAgICAgICAgICB9IGVsc2V7XG5cbiAgICAgICAgICAgICAgdmFyICRhY3RpdmVpdGVtID0gJChcIi5oZWlnaHQtaXRlbS5hY3RpdmVcIik7XG5cbiAgICAgICAgICAgICAgLy8gdGhpcyByZXR1cm5zIGZhbHNlIGJlY2F1c2UgaW5pdGlhbGx5IGl0ZW0gZG9lc24ndCBoYXZlIGNsYXNzIHVudGlsbCBzY3JvbGxpbmcgY29tbWVubmNlc1xuICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgJGNsYXNzdGFyZ2V0LmFkZENsYXNzKCdyZWxlYXNlLWxpc3QtdmlldycpO1xuICAgICAgICAgICAgICAgICQoJ2h0bWwsIGJvZHknKS5hbmltYXRlKHsgc2Nyb2xsVG9wOiAkYWN0aXZlaXRlbS5vZmZzZXQoKS50b3B9KTtcblxuICAgICAgICAgICAgfTsgLy8gaWYgJCgnYm9keScpLmhhc0NsYXNzKCdkZXYtb24nKVxuXG4gICAgICAgIH0pOyAvLyBjbGljayAgICAgIFxuXG59IC8vIGZ1bmN0aW9uIGV2ZW50c3ZpZXcoIFxuXG5leHBvcnQgZnVuY3Rpb24gZ2FsbGVyeSgkYmxvY2spe1xuXG5cbiAgICAvL2h0dHBzOi8vZmxpY2tpdHkubWV0YWZpenp5LmNvL29wdGlvbnMuaHRtbFxuICAgICBjb25zb2xlLmxvZyhcImdhbGxlcnkgZnVuY3Rpb25cIik7XG5cbiAgRmxpY2tpdHkuY3JlYXRlTWV0aG9kcy5wdXNoKCdfY3JlYXRlUHJldk5leHRDZWxscycpO1xuXG4gIEZsaWNraXR5LnByb3RvdHlwZS5fY3JlYXRlUHJldk5leHRDZWxscyA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMub24oICdzZWxlY3QnLCB0aGlzLnNldFByZXZOZXh0Q2VsbHMgKTtcbiAgfTtcblxuICBGbGlja2l0eS5wcm90b3R5cGUuc2V0UHJldk5leHRDZWxscyA9IGZ1bmN0aW9uKCkge1xuICAgIC8vIHJlbW92ZSBjbGFzc2VzXG4gICAgY2hhbmdlU2xpZGVDbGFzc2VzKCB0aGlzLnByZXZpb3VzU2xpZGUsICdyZW1vdmUnLCAnaXMtcHJldmlvdXMnICk7XG4gICAgY2hhbmdlU2xpZGVDbGFzc2VzKCB0aGlzLm5leHRTbGlkZSwgJ3JlbW92ZScsICdpcy1uZXh0JyApO1xuICAgIC8vIHNldCBzbGlkZXNcbiAgICB0aGlzLnByZXZpb3VzU2xpZGUgPSB0aGlzLnNsaWRlc1sgdGhpcy5zZWxlY3RlZEluZGV4IC0gMSBdO1xuICAgIHRoaXMubmV4dFNsaWRlID0gdGhpcy5zbGlkZXNbIHRoaXMuc2VsZWN0ZWRJbmRleCArIDEgXTtcbiAgICAvLyBhZGQgY2xhc3Nlc1xuICAgIGNoYW5nZVNsaWRlQ2xhc3NlcyggdGhpcy5wcmV2aW91c1NsaWRlLCAnYWRkJywgJ2lzLXByZXZpb3VzJyApO1xuICAgIGNoYW5nZVNsaWRlQ2xhc3NlcyggdGhpcy5uZXh0U2xpZGUsICdhZGQnLCAnaXMtbmV4dCcgKTtcbiAgfTtcblxuICAgIHZhciAkdGhpc2dhbGxlcnkgPSAkYmxvY2suZmluZChcIi5nYWxsZXJ5LWNhcm91c2VsXCIpOyAgICAgIFxuXG4gICAgICR0aGlzZ2FsbGVyeS5mbGlja2l0eSh7XG4gICAgICAgICAgaW1hZ2VzTG9hZGVkOiB0cnVlLCBcbiAgICAgICAgICBzZXRHYWxsZXJ5U2l6ZTogZmFsc2UsIC8vaWYgeW91IHByZWZlciB0byBzaXplIHRoZSBjYXJvdXNlbCB3aXRoIENTUywgcmF0aGVyIHRoYW4gdXNpbmcgdGhlIHNpemUgb2YgY2VsbHMuXG4gICAgIC8vIGRlZmF1bHQgY2VsbEFsaWduOiAnY2VudGVyJ1xuICAgICAgICAgIHBlcmNlbnRQb3NpdGlvbjogZmFsc2UsIFxuICAgICAgICAgIGZyZWVTY3JvbGw6IHRydWUsIFxuICAgICAgICAgIHdyYXBBcm91bmQ6IHRydWUsIFxuICAgICAgICAgIGFycm93U2hhcGU6IHsgXG4gICAgICAgICAgICB4MDogMTUsXG4gICAgICAgICAgICB4MTogNjUsIHkxOiA1MCxcbiAgICAgICAgICAgIHgyOiA3NSwgeTI6IDQwLFxuICAgICAgICAgICAgeDM6IDM1XG4gICAgICAgICAgfVxuLy8gICAgICAgICAgICBhcnJvd1NoYXBlOiAnODIuOTMxMjc5MyAyNC40NTAxNjI2IDg2Ljk2NTM5MTcgMjcuNTUwNDUyOCA0OS43NTc2MTQ2IDc1Ljk2NTM5MTcgMTIuNTQ5ODM3NCAyNy41NTA0NTI4IDE2LjU4Mzk0OTggMjQuNDUwMTYyNiA0OS43NTc2MTQ2IDY3LjYxNTg5NScsXG5cbiAgICAgICB9KTtcblxufSAvLyBmdW5jdGlvbiBnYWxsZXJ5KCRibG9jaylcblxuZXhwb3J0IGZ1bmN0aW9uIGNoYW5nZVNsaWRlQ2xhc3Nlcyggc2xpZGUsIG1ldGhvZCwgY2xhc3NOYW1lICkge1xuICAgXG4gIGlmICggIXNsaWRlICkge1xuICAgIHJldHVybjtcbiAgfVxuICBzbGlkZS5nZXRDZWxsRWxlbWVudHMoKS5mb3JFYWNoKCBmdW5jdGlvbiggY2VsbEVsZW0gKSB7XG4gICAgY2VsbEVsZW0uY2xhc3NMaXN0WyBtZXRob2QgXSggY2xhc3NOYW1lICk7XG4gIH0pO1xuXG59IC8vZnVuY3Rpb24gY2hhbmdlU2xpZGVDbGFzc2VzKCBzbGlkZSwgbWV0aG9kLCBjbGFzc05hbWUgKVxuIiwiaW1wb3J0IHtcbiAgZG9tUmVhZHksXG4gIGV2ZW50c3ZpZXdcbiAgLy8gb3BhY2l0eVxufSBmcm9tICcuLi8uLi91dGlsaXRpZXMvaGVscGVycyc7XG5cblxuY29uc29sZS5sb2coXCJyZWxlYXNlIGFyY2hpdmUgaW5kZXguanNcIik7XG5cbiBcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaW5pdCgpIHtcblxuLy8gIGNvbnNvbGUubG9nKCdib2R5LnBvc3QtdHlwZS1hcmNoaXZlLXJlbGVhc2VzJyk7XG4gXG5cbiAgZXZlbnRzdmlldygpO1xuXG4gIGZ1bmN0aW9uIGFjdGl2ZWNhcm91c2VsKCl7XG4gICAgICAgICAgXG5cbiAgICAgICAgICAvKlxuICAgICAgICAgIGRlY29uc3RydWN0IHRoaXMgY29kZSBcblxuICAgICAgICAgICtcblxuICAgICAgICAgIC0gYXBwbHkgcmVzaXppbmcgdG8gdGhlIHdpZGh0IGFuZCBoZWlnaHRzIG9uIHJlIHJlLXNpemVcbiAgICAgICAgICAtIHJlbmFtZSBpdGVtcyBzbyBpdHMgbG9vayBsaWtlIEkgaGF2ZW50IHJvYmJlZCBpdFxuICAgICAgICAgIC0gc2V0IHZhbHVlcyBiYXNlZCBvbiB0aGUgYW1vdW50IG9mIHBvc3QgYXZhaWxhYmxlXG4gICAgICAgICAgLSBsYXp5IGxvYWQgb24gaXRlbXM/XG5cblxuICAgICAgICAgIC0gaGF2ZSBhIGZsaXAgb3B0aW9ucyAtIHRvIHJldmVhbCB0aGUgYmFjaywgZWl0aGVyIG9uIGNsaWNrIG9yL2FuZCBob3ZlclxuXG4gICAgICAgICAgKi9cblxuICAgICAgICAgIHZhciBsYXN0SWQsXG5cbiAgICAgICAgICBjYXJvdXNlbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5jYXJvdXNlbCcpLFxuICAgICAgICAgIGNlbGxzID0gY2Fyb3VzZWwucXVlcnlTZWxlY3RvckFsbCgnLmNhcm91c2VsX19jZWxsJyksXG4gICAgICAgICAgLy9jb25zb2xlLmxvZyggXCJjZWxsc1wiICsgY2VsbHMrXCJcIiApO1xuICAgICAgICAgIGNlbGxJdGVtcyA9ICQoXCIuY2Fyb3VzZWxcIikuZmluZChcIi5jYXJvdXNlbF9fY2VsbFwiKSxcbiAgICAgICAgICBjZWxsQ291bnQsIC8vIGNlbGxDb3VudCBzZXQgZnJvbSBjZWxscy1yYW5nZSBpbnB1dCB2YWx1ZVxuICAgICAgICAgIHNlbGVjdGVkSW5kZXggPSAwLFxuICAgICAgICAgIGNlbGxXaWR0aCA9IGNhcm91c2VsLm9mZnNldFdpZHRoLCAvLyB0aGlzIHNob3VsZCBiZSBhIHJlc3BvbnNpdmUgdmFsdWVcbiAgICAgICAgICBjZWxsSGVpZ2h0ID0gY2Fyb3VzZWwub2Zmc2V0SGVpZ2h0OyAvLyB0aGlzIHNob3VsZCBiZSBhIHJlc3BvbnNpdmUgdmFsdWVcblxuICAgICAgICAvLyAgb3JpZW50YXRpb24oKTsgLy8gcnVuIG9yaWVudGF0aW9uIC0gd2hhdCBjbGFzcyAgKG5vdCBzdXJlIGlmIHRoaXMgaGFzIHRvIGJlIGNhbGxlZCBoZXJlPylcblxuICAgICAgICAgIGlmICgkKCdib2R5JykuaGFzQ2xhc3MoJ2hvcml6b250YWwnKSl7XG4gICAgICAgICAgdmFyIGlzSG9yaXpvbnRhbCA9IHRydWU7IFxuICAgICAgICAgIC8vY29uc29sZS5sb2coJ0lzSG9yaXpvbnRhbCcpXG4gICAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICB2YXIgaXNIb3Jpem9udGFsID0gZmFsc2U7XG4gICAgICAgICAgLy9jb25zb2xlLmxvZygnTk9UIElzSG9yaXpvbnRhbCcpXG4gICAgICAgICAgfTsgXG5cbiAgICAgICAgLy8gIGlzSG9yaXpvbnRhbCA9IHRydWUsIC8vIHNob3VsZCBiZSBiYXNlZCBvbiB0aGUgY2xhc3M7IHZlcnQgb2YgaG9yaXpvbnRhbCBvcmVpbmF0aW9uXG4gICAgICAgICAgdmFyIHJvdGF0ZUZuID0gaXNIb3Jpem9udGFsID8gJ3JvdGF0ZVknIDogJ3JvdGF0ZVgnLFxuICAgICAgICAgIHJhZGl1cywgXG4gICAgICAgICAgdGhldGEsXG4gICAgICAgICAgYW5nbGUsXG4gICAgICAgICAgJHNjZW5laGVpZ2h0ID0gJChcIi5zY2VuZS1oZWlnaHRcIiksXG4gICAgICAgICAgJGhlaWdodGl0ZW0gPSAkKFwiLmhlaWdodC1pdGVtXCIpLFxuICAgICAgICAgIHNjZW5laGVpZ2h0ID0gJHNjZW5laGVpZ2h0Lm91dGVySGVpZ2h0KCksIC8vIGlmIGhhdmUgMTAwdmggcGVyIGl0ZW0gLSBUaGlzIGluY2x1ZGVzIGEgbmVnYXRpdmUgb2Zmc2V0XG4gICAgICAgIC8vIHNjZW5laGVpZ3RJdGVtcyA9ICRzY2VuZWhlaWdodC5sZW5ndGg7XG4gICAgICAgICAgc2NlbmVoZWlndEl0ZW1zID0gJGhlaWdodGl0ZW0ubGVuZ3RoLCAvLyB0b3RhbCBpdGVtc3NcbiAgICAgICAgICBpdGVtaGVpZ2h0ID0gJGhlaWdodGl0ZW0ub3V0ZXJIZWlnaHQoKSxcbiAgICAgICAgICB0b3RhbGFuZ2xlID0gMzYwLFxuICAgICAgICAgIGFuZ2xlc2VnbWVudCA9IHRvdGFsYW5nbGUgLyBzY2VuZWhlaWd0SXRlbXMsXG4gICAgICAgICAgaGVpZ2h0SXRlbXMgPSAkc2NlbmVoZWlnaHQuZmluZChcIi5oZWlnaHQtaXRlbVwiKSxcbiAgICAgICAgICBoYWxmaGVpZ2h0ID0gKCQoJy5oZWlnaHQtaXRlbScpLmhlaWdodCgpLzIpLFxuICAgICAgICAgIHNjZW5laGVpZ2h0ID0gJCgnLnNjZW5lLWhlaWdodCcpLmhlaWdodCgpLFxuICAgICAgICAgIGNhbGNoZWlnaHQgPSBzY2VuZWhlaWdodCAtICgyKiBoYWxmaGVpZ2h0KTtcbiAgICAgICAgICAvL2NvbnNvbGUubG9nKFwic2VsZWN0ZWRJbmRleFwiICsgc2VsZWN0ZWRJbmRleCArIFwiXCIpLFxuXG4gICAgICAgICAgc2Nyb2xsSXRlbXMgPSBjZWxsSXRlbXMubWFwKGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICAgIHZhciBpZGVudGl0eSA9ICQodGhpcykuYXR0cihcImlkXCIpOyAvL3JlbGVhc2UtJCQkXG4gICAgICAgICAgICAgIHZhciBpdGVtID0gJCgnLmhlaWdodC1pdGVtJykuZmlsdGVyKFwiW2RhdGEtYWN0aXZlLWl0ZW09J1wiK2lkZW50aXR5K1wiJ11cIik7XG4gICAgICAgICAgICAgIC8vY29uc29sZS5sb2coaXRlbSk7XG5cbiAgICAgICAgICAgICAgaWYgKGl0ZW0ubGVuZ3RoKSB7IHJldHVybiBpdGVtOyBcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgfSk7IC8vc2Nyb2xsSXRlbXMgZnVuY3Rpb25cblxuICAgICAgICAvLyAgY29uc29sZS5sb2coXCJzY2VuZWhlaWd0SXRlbXNcIiArIHNjZW5laGVpZ3RJdGVtcyArIFwiXCIpO1xuICBcbiAgICAgICAgY2Fyb3VzZWwuc3R5bGUudHJhbnNmb3JtID0gJ3RyYW5zbGF0ZVooLTcyMHB4KScgKyByb3RhdGVGbiArICcoMGRlZyknOy8vIGluaXRpYWwgdmFsdXNlXG4gIFxuXG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgdmFyIHkgPSAkKHdpbmRvdykuc2Nyb2xsVG9wKCk7ICAvL3lvdXIgY3VycmVudCB5IHBvc2l0aW9uIG9uIHRoZSBwYWdlXG4gICAgICAgICQod2luZG93KS5zY3JvbGxUb3AoeSsxKTsgLy8gdGhpcyBlbnN1cmUgdGhlIGNhcm91c2VsbCBhbGlnbnMgdXAgd2l0aCB0aGUgY3VycmVudCBwYWdlIHBvc2l0aW9uXG5cbiAgICAgICAgJChcIi5zY2VuZVwiKS5hZGRDbGFzcyhcImxvYWRlZFwiKTtcbiAgICAgIC8vICBjb25zb2xlLmxvZyhcImNsYXNzIGFkZGVkXCIpXG4gICAgICAgIH0sIDc1MCk7XG4gICAgICAgIFxuXG4gICAgICAgIC8vcmVtb3ZlZCB2YXJzIGZyb20gc2Nyb2xsIGZ1bmN0aW9uOlxuICAgICAgXG4gICAgICAgICAgICBcbiAgICAgICAgLy8gc2V0IHJvdGF0ZUZuXG4gICAgICAgIC8vY2Fyb3VzZWwuc3R5bGUudHJhbnNmb3JtID0gJycrIHJvdGF0ZUZuICsgJyc7XG5cbiAgICAgICAgJCh3aW5kb3cpLnNjcm9sbChmdW5jdGlvbigpeyAvLyBhdHRhY2ggZG9jbWVudCBzY3JvbGwgdG8gcm90YXRpbmcgY2Fyb3VzZWwgXG5cbiAgICAgICAgICBpZiAoJCh3aW5kb3cpLnNjcm9sbFRvcCgpID4gY2FsY2hlaWdodCl7XG5cblxuXG4gICAgICAgICAgICAvLyBsYXN0IGFjdGl2ZVxuICAgICAgICAgICAgJCgnLmhlaWdodC1pdGVtOmxhc3QtY2hpbGQnKS5hZGRDbGFzcygnbGFzdC1lbmQnKVxuXG4gICAgICAgICAgICB9IGVsc2V7XG4gICAgICAgICAgICAvLyBub3QgbGFzdCBhY3RpdmVcbiAgICAgICAgICAgICAgJCgnLmhlaWdodC1pdGVtOmxhc3QtY2hpbGQnKS5yZW1vdmVDbGFzcygnbGFzdC1lbmQnKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIC8vIHNlbGVjdGVkSW5kZXgtLTtcblxuICAgICAgICAgICAgICAvL3ZhciBoVCA9ICQoJyNzY3JvbGwtdG8nKS5vZmZzZXQoKS50b3AsXG4gICAgICAgICAgICAgIC8vIGhIID0gJCgnI3Njcm9sbC10bycpLm91dGVySGVpZ2h0KCksXG4gICAgICAgICAgICAvLyAgd0ggPSAkKHdpbmRvdykuaGVpZ2h0KCksIFxuICAgICAgICAgICAgICBmcm9tVG9wID0gJCh0aGlzKS5zY3JvbGxUb3AoKVxuICAgICAgICAgICAgICBoYWxmZnJvbUJvdHRvbWl0ZW0gPSAkKFwiLmhlaWdodC1pdGVtOmxhc3QtY2hpbGRcIikuc2Nyb2xsVG9wKClcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKFwiZnJvbVRvcCBoZXJlXCIgKyBmcm9tVG9wICtcIlwiICk7XG4gICAgICAgICAgICAgIC8vICAkKCcuc2NlbmUtaGVpZ2h0JylcbiAgICAgICAgICAgICAgLy8gd1MgPSAkKHRoaXMpLnNjcm9sbFRvcCgpIC8gc2NlbmVoZWlnaHQgLyA7XG5cbiAgICAgICAgICAgICAgLy9hbmdsZSAvIGZyb21Ub3AgLyBzY2VuXG4gICAgICAgICAgICAgIHJhdGlvID0gc2NlbmVoZWlnaHQgLyB0b3RhbGFuZ2xlOyAvL3JhdGlvIHBlciBkZWdyZWVcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKFwicmF0aW9cIiArIHJhdGlvICsgXCJcIik7XG5cbiAgICAgICAgICAgICAgICB3UyA9IGZyb21Ub3AgLyByYXRpbztcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcIndTXCIgKyB3UyArIFwiXCIpO1xuICAgICAgICAgICAgICAgIC8vIHZhciByYWRpdXMgPSB3UztcbiAgICAgICAgICAgICAgICAgIC8vICggc2NlbmVoZWlnaHQgLyB0b3RhbGFuZ2xlIClcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgdmFyIGFuZ2xlID0gdGhldGEgKiBzZWxlY3RlZEluZGV4ICogLTE7XG4gICAgICAgICAgLy8gdmFyIGFuZ2xlID0gLWFuZ2xlc2VnbWVudCAqIHdTO1xuXG5cbiAgICAgICAgICAgICAgICB2YXIgYW5nbGUgPSAtIHdTOy8vLy8rIGFuZ2xlc2VnbWVudCk7XG4gICAgICAgICAgICAgICAgdmFyIHRoaXNhbmdsZSA9IGFuZ2xlOy8vTWF0aC5yb3VuZChhbmdsZSAqIDEwMCkgLyAxMDA7IC8vMiBkZWNpbWFsIHBsYWNlcyAtIHRyeWluZyB0byBtYWtlIHRoZSB0cmFuc2l0aW9uIHNtb290aGVyOyBidXQgbWFrZXMgbm8gZGlmZmVyZW5jZSBkb250IHRoaW5rXG5cblxuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coXCJ0aGlzYW5nbGVcIiArIHRoaXNhbmdsZSk7XG5cbiAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcImFuZ2xlXCIgKyBhbmdsZSArIFwiXCIpO1xuICAgICAgICAgICAgLy8gIGNvbnNvbGUubG9nKFwiKHRvdGFsYW5nbGUgLSBhbmdsZXNlZ21lbnQpXCIgKyAodG90YWxhbmdsZSAtIGFuZ2xlc2VnbWVudCkgKyBcIlwiKTtcblxuICAgICAgICAgICAgICAgIGlmICggYW5nbGUgPiAoKHRvdGFsYW5nbGUgLSBhbmdsZXNlZ21lbnQpKi0xKSApIHsgLy8gb25seSByb2F0ZSBhcyBmYXIgYXMgdGhlIHRvdGFsIGFuZ2xlIC0gb25lIHNlZ21lbnQgLS0gY3VycmVudGx5IGEgbmVnYXRpdmUgdmFsdWVcbiAgICAgICAgICAgICAgICBjYXJvdXNlbC5zdHlsZS50cmFuc2Zvcm0gPSAndHJhbnNsYXRlWignICsgLXJhZGl1cyArICdweCkgJyArIHJvdGF0ZUZuICsgJygnICsgdGhpc2FuZ2xlICsgJ2RlZyknO1xuXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgIC8vaWYoICQodGhpcykuc2Nyb2xsVG9wKCkgPj0gJCgnI3RhcmdldF9lbGVtZW50JykucG9zaXRpb24oKS50b3AgKXtcbiAgICAgICAgICAgIC8vICAgIGRvX3NvbWV0aGluZygpO1xuICAgICAgICAgIC8vIH1cblxuICAgICAgICAgICAgICAvLyBHZXQgaWQgb2YgY3VycmVudCBzY3JvbGwgaXRlbVxuICAgICAgICAgIHZhciBjdXIgPSBzY3JvbGxJdGVtcy5tYXAoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIGlmICgkKHRoaXMpLm9mZnNldCgpLnRvcCA8IChmcm9tVG9wICsgKGl0ZW1oZWlnaHQvMikpKVxuICAgICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coJ3RoaXMgb25lICcrdGhpcysnZnJvbVRvcCcgK2Zyb21Ub3ArJycpO1xuXG5cbiAgICAgICAgICB9KTtcblxuICAgICAgICAgIC8vIEdldCB0aGUgaWQgb2YgdGhlIGN1cnJlbnQgZWxlbWVudFxuICAgICAgICAgIGN1ciA9IGN1cltjdXIubGVuZ3RoLTFdO1xuICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdjdXInK2N1cisnJyk7XG4gICAgICAgICAgdmFyIGlkID0gY3VyICYmIGN1ci5sZW5ndGggPyBjdXJbMF0uaWQgOiBcIlwiO1xuICAgICAgICAgIC8vICAgY29uc29sZS5sb2coJ2N1cnJlbnQgaWQgPScraWQrJycpO1xuICAgICAgICAgIFxuICAgICAgICAgIGlmIChsYXN0SWQgIT09IGlkKSB7XG4gICAgICAgICAgICAgIGxhc3RJZCA9IGlkO1xuXG4gICAgICAgICAgICAgIC8vIHRoaXMgbG9ncyB0aGUgaWQgb2YgdGhlIGFjdGl2ZSBpdGVtXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnaWQgPScraWQrJycpO1xuICAgICAgICAgICAgLy8gUmVtb3ZlICsgU2V0IGFjdGl2ZSBjbGFzcyAtIG9uIGl0ZW1zXG5cbiAgICAgICAgICAgICAgJChcIi5oZWlnaHQtaXRlbVwiKS5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKS5maWx0ZXIoXCJbaWQ9J1wiK2lkK1wiJ11cIikuYWRkQ2xhc3MoXCJhY3RpdmVcIik7XG4gICAgICAgICAgICAgIHRoaXNhdHRyID0gJChcIi5oZWlnaHQtaXRlbVwiKS5maWx0ZXIoXCJbaWQ9J1wiK2lkK1wiJ11cIikuYXR0cihcImRhdGEtYWN0aXZlLWl0ZW1cIik7XG4gICAgICAgICAgICAgICQoXCIuY2Fyb3VzZWxfX2NlbGxcIikucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIikuZmlsdGVyKFwiW2lkPSdcIit0aGlzYXR0citcIiddXCIpLmFkZENsYXNzKFwiYWN0aXZlXCIpO1xuICAgICAgICAgICAgICAkKFwiLmhlaWdodC1pdGVtXCIpLnJlbW92ZUNsYXNzKFwicHJldi1hY3RpdmVcIik7XG4gICAgICAgICAgICAgICQoXCIuaGVpZ2h0LWl0ZW0uYWN0aXZlXCIpLnByZXZBbGwoKS5hZGRDbGFzcyhcInByZXYtYWN0aXZlXCIpO1xuXG4gICAgICAgIFxuICAgICAgICAgICAgfTsgLy8gaWYgXG5cblxuICAgICAgICB9KTsgLy8gc2Nyb2xsIGZ1bmN0aW9uXG5cbiAgICAgICAgZnVuY3Rpb24gY2hhbmdlQ2Fyb3VzZWwoKSB7IC8vIHRoaXMgZnVuY3Rpb24gIHJlc2l6ZXMgZXZlcnl0aGluZ2luZ1xuICAgICAgICBcbiAgICAgICAgLy8gY29uc29sZS5sb2coXCJjaGFuZ2VDYXJvdXNlbCBmdW5jdGlvblwiKTtcblxuICAgICAgICAgIC8qIG5ldyB2YXIgZm9yIHJlc2l6ZSovXG4gICAgICAgICAgY2Fyb3VzZWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2Fyb3VzZWwnKSxcblxuICAgICAgICAgIGNlbGxXaWR0aCA9IGNhcm91c2VsLm9mZnNldFdpZHRoLCAvLyB0aGlzIHNob3VsZCBiZSBhIHJlc3BvbnNpdmUgdmFsdWVcbiAgICAgICAgICBjZWxsSGVpZ2h0ID0gY2Fyb3VzZWwub2Zmc2V0SGVpZ2h0OyAvLyB0aGlzIHNob3VsZCBiZSBhIHJlc3BvbnNpdmUgdmFsdWVcbiAgICAgICAgICAvKiBuZXcgdmFyIGZvciByZXNpemUqL1xuXG4gICAgICAgICAgY2VsbENvdW50ID0gc2NlbmVoZWlndEl0ZW1zOyAvL3RvdGFsIGl0ZW1zIHZhcyBpbnB1dC8vY2VsbHNSYW5nZS52YWx1ZTsgLy8gdGhpcyB2YWx1ZSBzaG91bGQgYmUgZnJvbSBudW1iZXIgb2YgcG9zdHNcbiAgICAgICAgICB0aGV0YSA9IDM2MCAvIGNlbGxDb3VudDtcbiAgICAgICAgICB2YXIgY2VsbFNpemUgPSBpc0hvcml6b250YWwgPyBjZWxsV2lkdGggOiBjZWxsSGVpZ2h0O1xuICAgICAgICAgIHJhZGl1cyA9IE1hdGgucm91bmQoICggY2VsbFNpemUgLyAyKSAvIE1hdGgudGFuKCBNYXRoLlBJIC8gY2VsbENvdW50ICkgKTtcbiAgICAgICAgICBmb3IgKCB2YXIgaT0wOyBpIDwgY2VsbHMubGVuZ3RoOyBpKysgKSB7XG4gICAgICAgICAgICB2YXIgY2VsbCA9IGNlbGxzW2ldO1xuICAgICAgICAgICAgaWYgKCBpIDwgY2VsbENvdW50ICkge1xuICAgICAgICAgICAgICAvLyB2aXNpYmxlIGNlbGxcbiAgICAgICAgICAgICAgY2VsbC5zdHlsZS5vcGFjaXR5ID0gMTtcbiAgICAgICAgICAgICAgdmFyIGNlbGxBbmdsZSA9IHRoZXRhICogaTtcbiAgICAgICAgICAgICAgY2VsbC5zdHlsZS50cmFuc2Zvcm0gPSByb3RhdGVGbiArICcoJyArIGNlbGxBbmdsZSArICdkZWcpIHRyYW5zbGF0ZVooJyArIHJhZGl1cyArICdweCknO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgLy8gaGlkZGVuIGNlbGxcbiAgICAgICAgICAgICAgY2VsbC5zdHlsZS5vcGFjaXR5ID0gMDtcbiAgICAgICAgICAgICAgY2VsbC5zdHlsZS50cmFuc2Zvcm0gPSAnbm9uZSc7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgIC8vIHJvdGF0ZUNhcm91c2VsKCk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBvbk9yaWVudGF0aW9uQ2hhbmdlKCkge1xuICAgICAgICAvLyAgdmFyIGNoZWNrZWRSYWRpbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2lucHV0W25hbWU9XCJvcmllbnRhdGlvblwiXTpjaGVja2VkJyk7XG4gICAgICAgICAgXG4gICAgICAgICAgICBpZiAoJCgnYm9keScpLmhhc0NsYXNzKCdob3Jpem9udGFsJykpe1xuICAgICAgICAgICAgICB2YXIgaXNIb3Jpem9udGFsID0gdHJ1ZTsgXG4gICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdJc0hvcml6b250YWwnKVxuICAgICAgICAgICAgICAgIH1lbHNle1xuICAgICAgICAgICAgICB2YXIgaXNIb3Jpem9udGFsID0gZmFsc2U7XG4gICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdOT1QgSXNIb3Jpem9udGFsJylcblxuICAgICAgICAgICAgICB9OyBcblxuICAgICAgICAgIC8vICBpc0hvcml6b250YWwgPSBjaGVja2VkUmFkaW8udmFsdWUgPT0gJ2hvcml6b250YWwnO1xuXG4gICAgICAgICAgICAgIC8vY29uc29sZS5sb2coXCJpc0hvcml6b250YWwgPSBcIitpc0hvcml6b250YWwrXCJcIik7XG4gICAgICAgICAgICAgIHJvdGF0ZUZuID0gaXNIb3Jpem9udGFsID8gJ3JvdGF0ZVknIDogJ3JvdGF0ZVgnO1xuICAgICAgICAgICAgICBjaGFuZ2VDYXJvdXNlbCgpO1xuXG4gICAgICAgIH0gLy8gb25PcmllbnRhdGlvbkNoYW5nZVxuICAgICAgICBcbiAgXG4gICAgICAgICAgLy8gc2V0IGluaXRpYWxzXG4gICAgICAgICAgb25PcmllbnRhdGlvbkNoYW5nZSgpO1xuXG4gIC8vIGNoYW5nZSBvbiByZXNpemVcbiAgICAgICAgICAgIHZhciBydGltZTtcbiAgICAgICAgICAgIHZhciB0aW1lb3V0ID0gZmFsc2U7XG4gICAgICAgICAgICB2YXIgZGVsdGEgPSAyMDA7XG4gICAgICAgICAgICAkKHdpbmRvdykucmVzaXplKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgIHJ0aW1lID0gbmV3IERhdGUoKTtcbiAgICAgICAgICAgICAgICBpZiAodGltZW91dCA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgdGltZW91dCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQocmVzaXplZW5kLCBkZWx0YSk7XG4gICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcImhlcmxlb1wiKVxuXG4gICAgICAgICAgICAgICAgfVxuXG5cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIFxuICAgICAgICAgICAgZnVuY3Rpb24gcmVzaXplZW5kKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICBjb25zb2xlLmxvZyhcInJlc2l6ZSBpbmlpdFwiKTtcblxuICAgICAgICAgICAgICAgIGlmIChuZXcgRGF0ZSgpIC0gcnRpbWUgPCBkZWx0YSkge1xuICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KHJlc2l6ZWVuZCwgZGVsdGEpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRpbWVvdXQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgIHZhciB3aW5kb3doZWlnaHQgPSAkKHdpbmRvdykuaGVpZ2h0KCk7XG4gICAgICAgICAgICAgIC8vIGNoYW5nZUNhcm91c2VsKCk7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICBvbk9yaWVudGF0aW9uQ2hhbmdlKCk7XG5cbiAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwicmVzaXplIGluaWl0XCIpO1xuICAgICAgICAgICAgICAgICAgLy8gIG9yaWVudGF0aW9uKCk7IC8vdmVydGljYWwgb3IgaG9yaXpvbnRhbFxuXG4gICAgICAgICAgICAgICAgfSAgIC8vZWxzZSAgICBcblxuICAgICAgICAgICAgfTsvL3Jlc2l6ZWVuZCBmdWNudGlvblxuXG4gIC8vIC8vZW5kIHJlc2l6ZVxuXG5cblxuXG5cbiAgfTsgLy8gYWN0aXZlY2Fyb3VzZWxcblxuICBhY3RpdmVjYXJvdXNlbCgpO1xuICAvLyAkKHdpbmRvdykuc2Nyb2xsQnkoMSwwKTtcblxuXG5cblxufSAvL2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGluaXQoKVxuIiwiaW1wb3J0IHtcbiAgZG9tUmVhZHlcbiAgLy8gb3BhY2l0eVxufSBmcm9tICcuLi8uLi91dGlsaXRpZXMvaGVscGVycyc7XG5cbiBcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGluaXQoKSB7XG5cbiAgIGNvbnNvbGUubG9nKCdib2R5LnBvc3QtdHlwZS1hcnRpc3QnKTtcbiAgXG4gIFxuICB2YXIgJGNvbnRhaW5lciA9ICQoJy5jb250YWluZXInKTtcbiAgICAgICAgICAgICAgXG4gICQoJy5saXN0LWl0ZW0nKS5ob3ZlcihmdW5jdGlvbigpe1xuXG4gICAgdmFyIGxpc3RpdGVtaWQgPSAkKHRoaXMpLmF0dHIoJ2RhdGEtaW1naWQnKTtcblxuICAkKHRoaXMpLnRvZ2dsZUNsYXNzKCdhY3RpdmUnKSAgICAgIFxuICAkKCcuaW1hZ2UtaXRlbVtkYXRhLWltYWdlPVwiJytsaXN0aXRlbWlkKydcIl0nKS50b2dnbGVDbGFzcygnYWN0aXZlJyk7XG4gICAgICAgIFxuICAgICAgLy8gICQoXCIuaW1hZ2UtaXRlbVtkYXRhLWltZz1saXN0aXRlbWlkXVwiKS50b2dnbGVDbGFzcygnYWN0aXZlJyk7XG4gICAgICB9KTsgLy8gaG92ZXJcblxuXG4gICQoJy5saXN0LWl0ZW0nKS5jbGljayhmdW5jdGlvbigpe1xuICAgIFxuICAgIFxuICAgICAgdmFyIGxpc3RpdGVtaWQgPSAkKHRoaXMpLmF0dHIoJ2RhdGEtaW1naWQnKSxcbiAgICAgICAgICBsaXN0aXRlbWNvbnRlbnQgPSAkKHRoaXMpLnRleHQoKTtcbiAgICAgIGNvbnNvbGUubG9nKGxpc3RpdGVtY29udGVudClcbiAgICAgIFxuICAgICAgJGNvbnRhaW5lci5hZGRDbGFzcygnYWN0aXZhdGVkJyk7XG4gICAgICAkKHRoaXMpLmFkZENsYXNzKCdhY3RpdmF0ZWQnKVxuICAgICAgXG4gICAgICAkKCcuaW1hZ2UtaXRlbVtkYXRhLWltYWdlPVwiJytsaXN0aXRlbWlkKydcIl0nKS50b2dnbGVDbGFzcygnYWN0aXZhdGVkJyk7XG4gICAgICAkKCcucGFnZS10aXRsZScpLmFuaW1hdGUoe1xuICAgICAgb3BhY2l0eTogMFxuICAgIH0sIDgwMCwgZnVuY3Rpb24oKSB7XG4gICAgICAvLyBBbmltYXRpb24gY29tcGxldGUgLSBmYWRlIGJhY2sgaW5cbiAgICAgICQoJy5wYWdlLXRpdGxlJykudGV4dChsaXN0aXRlbWNvbnRlbnQpLmFuaW1hdGUoe1xuICAgICAgb3BhY2l0eTogMVxuICAgICAgfSwgNDAwLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAvLyBBbmltYXRpb24gY29tcGxldGUuXG4gICAgICB9KTsgICAgICBcblxuICAgIH0pOyAgICAgIFxuICAgIFxuICB9KTsgICAgICBcblxuXG5cbn0gLy9leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpbml0KClcbiIsImltcG9ydCB7XG4gIGhvbWVnYWxsZXJ5LFxuICBob21lcmVsZWFzZWdhbGxlcnlcbn0gZnJvbSAnLi4vLi4vdXRpbGl0aWVzL2hlbHBlcnMnO1xuXG5jb25zb2xlLmxvZyhcImZyb250IHBhZ2UgaW5kZXguanNcIik7XG4gXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpbml0KCkge1xuXG4gICAgLy8gY29uc29sZS5sb2coJ2JvZHkucG9zdC10eXBlLWFyY2hpdmUtcmVsZWFzZXMnKTtcbiBcbiAgaWYgKCQoJy5mZWF0dXJlZC1ob21lLWNhcm91c2VsJykubGVuZ3RoID4gMCl7XG4gICAgaG9tZWdhbGxlcnkoKTsvLyBydWxlIHRvcCBmZWF0dXJlZCBnYWxsZXJ5ICAgICAgICBcbiAgfSAvLyBpZi5mZWF0dXJlZC1ob21lLWNhcm91c2VsXG5cbiAgaWYgKCQoJy5yZWxlYXNlLWhvbWUtY2Fyb3VzZWwnKS5sZW5ndGggPiAwKXtcbiAgICBob21lcmVsZWFzZWdhbGxlcnkoKVxuICB9IC8vIGlmLmZlYXR1cmVkLWhvbWUtY2Fyb3VzZWxcblxufSAvL2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGluaXQoKVxuIiwiaW1wb3J0IHtcbiAgcmVjb3JkYW5pbWF0aW9uLFxuICBnYWxsZXJ5LFxuICBjaGFuZ2VTbGlkZUNsYXNzZXNcbn0gZnJvbSAnLi4vLi4vdXRpbGl0aWVzL2hlbHBlcnMnO1xuXG4gXG5jb25zb2xlLmxvZygnYmxvY2tzLmpzJyk7XG5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gYmxvY2tzKCl7XG5cblxuXG5cblxuICAvLyBpZiAoJCgnYm9keS5zaW5nbGUtYXJ0aXN0cywgYm9keS5zaW5nbGUtbmV3cywgYm9keS5ob21lJykubGVuZ3RoID4gMCkgICB7XG4gICAgY29uc29sZS5sb2coJ2V4cG9ydCBmdW5jdGlvbiBibG9ja3MuanMnKTtcblxuXG4gICAgaWYgKCQoJyNhcnRpc3QtcmVsZWFzZXMsIC5yZWxlYXNlLWJsb2NrLCAuZmVhdHVyZWQtaG9tZS1pdGVtLXJlbGVhc2VzJykubGVuZ3RoID4gMCkgXG4gICAge1xuXG4gICAgICAgIGNvbnNvbGUubG9nKCdyZWNvcmRhbmltYXRpb24nKTtcbiAgICAgIC8vc2V0VGltZW91dChmdW5jdGlvbigpe1xuXG4gICAgICAvLyB0YWtlcyB0byBsb25nIHRvIHJlYWNoIHRoZSBqcyAtIHNvIGRvIHdlIGp1c3QgZW5zdXJlIHRoZSBpdGVtcyBoYXZlIG5vIHBvaW50ZXIgZXZlbnRzIGluaXRpYWxseT9cblxuICAgICAgICByZWNvcmRhbmltYXRpb24oKTsvLyB0aGlzIG5lZWRzIHRvIHRyaWdnZXIgb3RoZXIgc3R1ZmYgbGlrZSByZXNpYWUgYXMgd2VsbCBJIGd1ZXNzP1xuICAgIC8vfSwgMjAwMCk7XG5cbiAgICB9OyAgLyogICNhcnRpc3QtcmVsZWFzZXMgICovXG4gICAgICBcbiAgICBpZiAoJCgnLmdhbGxlcnktYmxvY2snKS5sZW5ndGggPiAwKSAge1xuICAgICAgY29uc29sZS5sb2coXCJpZiBnYWxsZXJ5LWJsb2NrXCIpO1xuXG4gICAgICAkKFwiLmdhbGxlcnktYmxvY2tcIikuZWFjaChmdW5jdGlvbigpIHtcblxuICAgICAgdmFyICR0aGlzYmxvY2sgPSAkKHRoaXMpOyAgXG4gICAgXG4gICAgICBjb25zb2xlLmxvZygkdGhpc2Jsb2NrKTtcbiAgICAgIC8vICR0aGlzYmxvY2suY3NzKFwiYmFja2dyb3VuZFwiLFwieWVsbG93XCIpO1xuXG4gICAgICBnYWxsZXJ5KCR0aGlzYmxvY2spOy8vIHJ1biBqcyBpZiBnYWxsZXJ5IGl0ZW0gZXhpc3RcbiAgICAgIFxuICAgICAgfSk7XG5cbiAgICB9Oy8vIC5nYWxsZXJ5LWJsb2NrXG5cbiBcbiAgICBpZiAoJCgnLnNvdW5kLWJsb2NrJykubGVuZ3RoID4gMCkgIHtcblxuICAgICAgaGFzcmFkaW9ibG9jayA9IHRydWU7XG4gICAgICBjb25zb2xlLmxvZyhcIndlIGhhdmUgYSBzb3VuZC1ibG9jayBvbiB0aGUgcGFnZSAtIGFkZCBjbGFzcyB0byBib2R5IC0gZm9yIHRoZSByYWRpbyBsb2FkZXIgdG8gZGlzY292ZXJcIilcblxuICAgICAgJCgnYm9keScpLmFkZENsYXNzKCdoYXMtc291bmQtYmxvY2snKTtcblxuICAgIH07Ly8uc291bmQtYmxvY2tcblxuXG4gIC8vICBib2R5LnNpbmdsZS1hcnRpc3RzLCAgYm9keS5zaW5nbGUtbmV3c1xuXG4gIC8vIH07ICBcblxuXG4gIFxufTsvL2Jsb2Nrc1xuIiwiaW1wb3J0IHtcbiAgZG9tUmVhZHksXG4gIG1lbnVDbGFzc2VzLFxuICBvcGFjaXR5LFxuICBuYXZpZ2F0aW9uLFxuICBvcmllbnRhdGlvblxufSBmcm9tICcuLi8uLi91dGlsaXRpZXMvaGVscGVycyc7XG5cbi8qXG5pbXBvcnQge1xuICBibG9ja3Ncbn0gZnJvbSAnLi4vLi4vdXRpbGl0aWVzL2Jsb2Nrcyc7XG4qL1xuLy8gY29uc29sZS5sb2coXCJiYXJiYS5qcyBpbmRleFwiKTtcblxuLy8gTW9kdWxlcy5cbmltcG9ydCByZWxlYXNlYXJjaGl2ZSBmcm9tICcuLi9yZWxlYXNlLWFyY2hpdmUvaW5kZXgnXG5pbXBvcnQgYXJ0aXN0YXJjaGl2ZSBmcm9tICcuLi9hcnRpc3QtYXJjaGl2ZS9pbmRleCdcbmltcG9ydCBmcm9udHBhZ2UgZnJvbSAnLi4vZnJvbnQtcGFnZS9pbmRleCdcbmltcG9ydCBibG9ja3MgZnJvbSAnLi4vYmxvY2tzL2luZGV4J1xuXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGluaXQoKSB7XG5cbiAgdmFyIGFjdGl2ZXJhZGlvID0gZmFsc2UsXG4gICAgICBwYXVzZWRyYWRpbyA9IGZhbHNlLFxuICAgICAgc3RpY2t5cmFkaW8gPSBmYWxzZSxcbiAgICAgIG1pbmltaXNlZHJhZGlvID0gZmFsc2UsXG4gICAgICBoYXNyYWRpb2Jsb2NrID0gZmFsc2U7XG4gICBcblxuIGJhcmJhLmluaXQoe1xuICB2aWV3czogW1xuICAgIFxuICAgIC8qe1xuICAgIG5hbWVzcGFjZTogJ3BhZ2UnLFxuICAgIGJlZm9yZUxlYXZlKGRhdGEpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiYmVmb3JlIGxlYXZlOiBuYW1lc3BhY2UgPSBwYWdlXCIpO1xuICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2JhcmJhanMvYmFyYmEvaXNzdWVzLzUxI2lzc3VlY29tbWVudC01MzE0NjU4OTlcbiAgICAgIC8vIFNldCA8Ym9keT4gY2xhc3NlcyBmb3IgXCJuZXh0XCIgcGFnZSAtIG1ha2Ugc3VyZSB0aGlzIGFwcGxpZWQgdG8gYWxsIGxlYXZlczsgbm90IGp1c3QgcGFnZVxuICAgICAgLy8gIHZhciBuZXh0SHRtbCA9IGRhdGEubmV4dC5odG1sO1xuICAgICAgICAgICAgICAvLyB2YXIgcmVzcG9uc2UgPSBuZXh0SHRtbC5yZXBsYWNlKC8oPFxcLz8pYm9keSggLis/KT8+L2dpLCAnJDFub3Rib2R5JDI+JywgbmV4dEh0bWwpXG4gICAgICAgICAgICAgIC8vIHZhciBib2R5Q2xhc3NlcyA9ICQocmVzcG9uc2UpLmZpbHRlcignbm90Ym9keScpLmF0dHIoJ2NsYXNzJylcbiAgICAgICAgICAgICAgLy8gJChcImJvZHlcIikuYXR0cihcImNsYXNzXCIsIGJvZHlDbGFzc2VzKTtcblxuICAgICAgLy8gZG8gc29tZXRoaW5nIGJlZm9yZSBsZWF2aW5nIHRoZSBjdXJyZW50IGBwYWdlYCBuYW1lc3BhY2VcbiAgICB9XG4gIH0sICove1xuICAgIG5hbWVzcGFjZTogJ3NpbmdsZS1yZWxlYXNlcycsXG4gICAgYWZ0ZXJFbnRlcihkYXRhKSB7IC8vIHJldmlld3MgdGhpcyAtIEkgd2FudCB0byBzdGFydCBsb2FkaW5nIHNjcmlwdHMgYXNhcFxuICAgICAgY29uc29sZS5sb2coXCJhZnRlckVudGVyOiBuYW1lc3BhY2UgPSBzaW5nbGUtcmVsZWFzZXNcIik7XG5cbiAgICAgIC8vIGRvbVJlYWR5KHByb2plY3RnYWxsZXJ5KTtcbiAgICAgIG9wYWNpdHkoKTtcblxuICAgIH1cbiAgfSx7XG4gICAgbmFtZXNwYWNlOiAncGFnZScsXG4gICAgYWZ0ZXJFbnRlcihkYXRhKSB7IFxuICAgICAgY29uc29sZS5sb2coXCJhZnRlckVudGVyOiBuYW1lc3BhY2UgPSBwYWdlXCIpO1xuXG4gICAgICAvLyBkb21SZWFkeShwcm9qZWN0Z2FsbGVyeSk7XG4gICAgICBvcGFjaXR5KCk7XG5cbiAgICB9XG4gIH0se1xuICAgIG5hbWVzcGFjZTogJ3NpbmdsZS1wb3N0JyxcbiAgICBhZnRlckVudGVyKGRhdGEpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiYWZ0ZXJFbnRlcjogbmFtZXNwYWNlID0gc2luZ2xlLXBvc3RcIik7XG4gXG4gICAgICBvcGFjaXR5KCk7XG4gICAgICBkb21SZWFkeShibG9ja3MpO1xuICAgICBcbiAgICB9XG4gIH0sIHtcbiAgICBuYW1lc3BhY2U6ICdmcm9udC1wYWdlJyxcbiAgICBhZnRlckVudGVyKGRhdGEpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiYWZ0ZXJFbnRlcjogbmFtZXNwYWNlID0gZnJvbnQtcGFnZVwiKTtcblxuICAgICAgICBkb21SZWFkeShmcm9udHBhZ2UpO1xuICAgICAgICBkb21SZWFkeShibG9ja3MpO1xuICAgICAgICBvcGFjaXR5KCk7XG5cbiAgICAgICAvKiBpZiAjIGV4aXN0IC0gXG4gICAgICAgIHZhciBteWhyZWYgPSBkYXRhLm5leHQudXJsLmhhc2g7XG4gICAgICAgIGlmICghbXlocmVmIHx8IG15aHJlZiA9PT0gdW5kZWZpbmVkKSB7IC8vIyBGcmFnbWVudCBleGlzdHNcbiAgICAgICAgICBjb25zb2xlLmxvZyhcImhhc2hcIik7XG4gICAgICAgICAgdmFyIG15aHJlZiA9ICd0aGlzJzsgLy8gbm8gdmFsdWUgc28gbGV0IGFzc2lnbiBpbml0aWFsIHZhbHVlXG4gICAgICAgICAgLy8gIGNvbnNvbGUubG9nKFwiaGVsbG8gaGFzaFwiICtoYXNoK1wiXCIpO1xuICAgICAgICB9XG4gICAgICAgICovXG4gIFxuXG4gICAgfVxuICB9LCB7XG4gICAgbmFtZXNwYWNlOiAnYXJjaGl2ZS1yZWxlYXNlcycsXG4gICAgYWZ0ZXJFbnRlcihkYXRhKSB7XG4gICAgICAvLyBjb25zb2xlLmxvZyhcImFmdGVyRW50ZXI6IG5hbWVzcGFjZSA9IGFyY2hpdmUtcHJvamVjdHNcIik7XG5cbiAgICAgICAgZG9tUmVhZHkocmVsZWFzZWFyY2hpdmUpO1xuICAgICAgICBvcGFjaXR5KCk7XG4gICAgfVxuICB9LCB7XG4gICAgbmFtZXNwYWNlOiAnYXJjaGl2ZS1ldmVudHMnLFxuICAgIGFmdGVyRW50ZXIoZGF0YSkge1xuICAgICAgLy8gY29uc29sZS5sb2coXCJhZnRlckVudGVyOiBuYW1lc3BhY2UgPSBhcmNoaXZlLWV2ZW50c1wiKTtcbiAgICAgICAgIG9wYWNpdHkoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBuYW1lc3BhY2U6ICdhcmNoaXZlLXJhZGlvJyxcbiAgICBhZnRlckVudGVyKGRhdGEpIHtcbiBcbiAgICAgIG9wYWNpdHkoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBuYW1lc3BhY2U6ICdhcmNoaXZlLWFydGlzdHMnLFxuICAgIGFmdGVyRW50ZXIoZGF0YSkge1xuICAgICAgLy8gY29uc29sZS5sb2coXCJhZnRlckVudGVyOiBuYW1lc3BhY2UgPSBhcmNoaXZlLWFydGlzdHNcIik7XG5cbiAgICAgICAgZG9tUmVhZHkoYXJ0aXN0YXJjaGl2ZSk7XG4gICAgICAgIG9wYWNpdHkoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBuYW1lc3BhY2U6ICdhcmNoaXZlLW5ld3MnLFxuICAgIGFmdGVyRW50ZXIoZGF0YSkge1xuICAgICAgLy8gY29uc29sZS5sb2coXCJhZnRlckVudGVyOiBuYW1lc3BhY2UgPSBhcmNoaXZlLW5ld3NcIik7XG5cbiAgICAgICAgLy8gZG9tUmVhZHkoYXJ0aXN0YXJjaGl2ZSk7XG4gICAgICAgIG9wYWNpdHkoKTtcbiAgICB9XG4gIH1cbiAgXVxufSk7XG5cblxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2JhcmJhanMvYmFyYmEvaXNzdWVzLzUxI2lzc3VlY29tbWVudC01MzE0NjU4OTlcbi8vYXBwbGllcyB0byBhbGwgbmFtZXNwYWNlczpcblxuXG5iYXJiYS5ob29rcy5iZWZvcmVMZWF2ZSgoZGF0YSkgPT4ge1xuICBjb25zb2xlLmxvZyhcImJlZm9yZWxlYXZlXCIpO1xuXG5cbiAgICBpZigkKCdib2R5JykuaGFzQ2xhc3MoJ3NjLWxvYWRlZCcpKXtcblxuICAgICAgY29uc29sZS5sb2coXCJwbGF5ZXIgbG9hZGVkXCIpXG4gICAgICBsb2FkZWRyYWRpbyA9IHRydWU7XG5cbiAgICB9IGVsc2Uge1xuXG4gICAgICBsb2FkZWRyYWRpbyA9IGZhbHNlO1xuXG4gICAgfTsvLyBpZigkKCdib2R5JykuaGFzQ2xhc3MoJ3NjLWxvYWRlZCcpXG5cbiAgICBpZigkKCdib2R5JykuaGFzQ2xhc3MoJ3NjLXBsYXllci1wbGF5aW5nJykpe1xuXG4gICAgICBjb25zb2xlLmxvZyhcInBsYXllciBpcyBwbGF5aW5nIC0gYXBwbHkgY2xhc3Mgc2MtcGxheWVyLXBsYXlpbmdcIilcbiAgICAgIGFjdGl2ZXJhZGlvID0gdHJ1ZTtcblxuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmxvZyhcInBsYXllciBpcyBub3QgcGxheWluZ1wiKVxuICAgICAgYWN0aXZlcmFkaW8gPSBmYWxzZVxuXG4gICAgfTsvLyBpZigkKCdib2R5JykuaGFzQ2xhc3MoJ3NjLXBsYXllci1wbGF5aW5nJylcblxuICAgIGlmKCQoJ2JvZHknKS5oYXNDbGFzcygnc2MtcGxheWVyLXBhdXNlZCcpKXtcblxuICAgICAgY29uc29sZS5sb2coXCJwbGF5ZXIgaXMgcGF1c2VkIC0gYXBwbHkgY2xhc3Mgc2MtcGxheWVyLXBhdXNlZFwiKVxuICAgICAgcGF1c2VkcmFkaW8gPSB0cnVlO1xuXG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUubG9nKFwicGxheWVyIGlzIHBhdXNlZFwiKVxuICAgICAgcGF1c2VkcmFkaW8gPSBmYWxzZVxuICAgIH07Ly8gaWYoJCgnYm9keScpLmhhc0NsYXNzKCdzYy1wbGF5ZXItcGF1c2VkJykpe1xuXG4gICAgICBcbiAgICAgIGlmKCQoJ2JvZHknKS5oYXNDbGFzcygnc3RpY2t5LXJhZGlvLXBsYXllcicpKXtcblxuICAgICAgY29uc29sZS5sb2coXCJzdGlja3ktcmFkaW8tcGxheWVyID0gdHJ1ZVwiKVxuICAgICAgc3RpY2t5cmFkaW8gPSB0cnVlO1xuXG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUubG9nKFwic3RpY2t5LXJhZGlvLXBsYXllciA9IGZhbHNlXCIpXG4gICAgICBzdGlja3lyYWRpbyA9IGZhbHNlO1xuICAgIH07Ly8gaWYoJCgnYm9keScpLmhhc0NsYXNzKCdzYy1wbGF5ZXItcGF1c2VkJykpe1xuXG5cbiAgICAgIGlmKCQoJ2JvZHknKS5oYXNDbGFzcygnc2MtbWluaW1pc2VkJykpe1xuXG4gICAgICBjb25zb2xlLmxvZyhcInNjLW1pbmltaXNlZCA9IHRydWVcIilcbiAgICAgIG1pbmltaXNlZHJhZGlvID0gdHJ1ZTtcblxuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmxvZyhcInNjLW1pbmltaXNlZCAgPSBmYWxzZVwiKVxuICAgICAgbWluaW1pc2VkcmFkaW8gPSBmYWxzZTtcbiAgICB9Oy8vIGlmKCQoJ2JvZHknKS5oYXNDbGFzcygnc2MtbWluaW1pc2VkJykpe1xuXG5cbn0pOyAvL2JhcmJhLmhvb2tzLmJlZm9yZUxlYXZlKChkYXRhKSA9PlxuXG5cbmJhcmJhLmhvb2tzLmFmdGVyTGVhdmUoKGRhdGEpID0+IHtcbiAgY29uc29sZS5sb2coXCJhZnRlcmxlYXZlXCIpXG5cbiAgJCgnaHRtbCwgYm9keScpLmFuaW1hdGUoe1xuICAgIHNjcm9sbFRvcDogJChcImJvZHlcIikub2Zmc2V0KCkudG9wIFxuICB9LCAxMCk7XG5cblxuICAvLyBTZXQgPGJvZHk+IGNsYXNzZXMgZm9yIFwibmV4dFwiIHBhZ2VcbiAgdmFyIG5leHRIdG1sID0gZGF0YS5uZXh0Lmh0bWw7XG4gIHZhciByZXNwb25zZSA9IG5leHRIdG1sLnJlcGxhY2UoLyg8XFwvPylib2R5KCAuKz8pPz4vZ2ksICckMW5vdGJvZHkkMj4nLCBuZXh0SHRtbCk7XG4gIHZhciBib2R5Q2xhc3NlcyA9ICQocmVzcG9uc2UpLmZpbHRlcignbm90Ym9keScpLmF0dHIoJ2NsYXNzJyk7XG5cbiAgJChcImJvZHlcIikuYXR0cihcImNsYXNzXCIsIGJvZHlDbGFzc2VzKTtcblxuICAvLyBVcGRhdGUgdGhlIGFjdGl2ZSBtZW51IGl0ZW0gY2xhc3Nlc1xuICAvLyBodHRwczovL2dpdGh1Yi5jb20vYmFyYmFqcy9iYXJiYS9pc3N1ZXMvNDE5XG4gIC8vIFRPRE86IHJldmVpdyBvdGhlciBhY3RpdmUgY2xhc3NlczsgaXMgdGhpcyBhbGwgb2YgdGhlbSwgSSB0aGluayBzb1xuXG4gIGlmIChkYXRhLm5leHQudXJsLnBhdGgpIHtcbiAgICBjb25zdCBjdXJyZW50TWVudSA9ICdjdXJyZW50LW1lbnUtaXRlbScsXG4gICAgICBjdXJyZW50UGFnZSA9ICdjdXJyZW50X3BhZ2VfaXRlbScsXG4gICAgICBjdXJyZW50TWVudUFuY2VzdG9yID0gJ2N1cnJlbnQtbWVudS1hbmNlc3RvcicsXG4gICAgICBjdXJyZW50TWVudVBhcmVudCA9ICdjdXJyZW50LW1lbnUtcGFyZW50JyxcbiAgICAgIGN1cnJlbnRQYWdlQW5jZXN0b3IgPSAnY3VycmVudF9wYWdlX2FuY2VzdG9yJztcblxuICAgIG1lbnVDbGFzc2VzKGRhdGEsIGN1cnJlbnRNZW51KTtcbiAgICBtZW51Q2xhc3NlcyhkYXRhLCBjdXJyZW50UGFnZSk7XG4gICAgbWVudUNsYXNzZXMoZGF0YSwgY3VycmVudE1lbnVBbmNlc3Rvcik7XG4gICAgbWVudUNsYXNzZXMoZGF0YSwgY3VycmVudE1lbnVQYXJlbnQpO1xuICAgIG1lbnVDbGFzc2VzKGRhdGEsIGN1cnJlbnRQYWdlQW5jZXN0b3IpO1xuXG4gIH0gLy9pZiAoIGRhdGEubmV4dC51cmwucGF0aFxuXG4gIC8vIHNldCB1cCBhZGRpdGlvbmFsIGNsYXNlc3MgKyB2YXJpYWJsZXMgZm9yIHJhZGlvIFxuXG5cbiAgICBpZiAobG9hZGVkcmFkaW8gPT0gdHJ1ZSkge1xuICAgICAgJCgnYm9keScpLmFkZENsYXNzKCdzYy1sb2FkZWQnKVxuICAgIH0vLy8gaWYgcmFkaW8gd2FzIGxvYWRlZFxuXG4gICAgaWYgKGFjdGl2ZXJhZGlvID09IHRydWUpIHtcbiAgICBjb25zb2xlLmxvZyhcInBsYXllciBpcyBwbGF5aW5nIC0gYXBwbHkgY2xhc3Mgc2MtcGxheWVyLXBsYXlpbmdcIilcbiAgICAkKCdib2R5JykuYWRkQ2xhc3MoJ3NjLXBsYXllci1wbGF5aW5nJyk7XG4gICAgfS8vLyBpZiByYWRpbyB3YXMgYWN0aXZlXG5cbiAgICBpZiAocGF1c2VkcmFkaW8gPT0gdHJ1ZSkge1xuICAgICAgY29uc29sZS5sb2coXCJwbGF5ZXIgaXMgcGF1c2VkIC0gYXBwbHkgY2xhc3Mgc2MtcGxheWVyLXBhdXNlZFwiKVxuICAgICAgJCgnYm9keScpLmFkZENsYXNzKCdzYy1wbGF5ZXItcGF1c2VkJylcbiAgICB9Ly8vIGlmIHJhZGlvIHdhcyBwYXVzZWRcblxuICAgIGlmIChzdGlja3lyYWRpbyA9PSB0cnVlKSB7XG4gICAgICBjb25zb2xlLmxvZyhcImFwcGx5IHN0aWNreSByYWRpbyBjbGFzc2VzXCIpXG4gICAgICAkKCdib2R5JykuYWRkQ2xhc3MoJ3N0aWNreS1yYWRpby1wbGF5ZXInKVxuICAgIH0vLy8gaWYgc3RpY2t5LXJhZGlvLXBsYXllclxuXG4gICAgaWYgKG1pbmltaXNlZHJhZGlvID09IHRydWUpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiYXBwbHkgbWlubWlzZWQgcmFkaW8gY2xhc3Nlc1wiKVxuICAgICAgJCgnYm9keScpLmFkZENsYXNzKCdzYy1taW5pbWlzZWQnKVxuICAgIH0vLy8gaWYgbWluaW1pc2VkcmFkaW9cblxuICAgIG5hdmlnYXRpb24oKTtcbiAgICBvcmllbnRhdGlvbigpO1xuXG5cblxuLyogaW50ZWdyYXRlIEFuYWx5dGljcyAtIHRoaXMgd29uJ3Qgd29yayAtIHNvIHJlc2VhcmNoIHZpYSBiYXJiYXYyIHdlYnNpdGUgSSByZWNrb25cblxuICAgICAgLy8gSW5mb3JtIEdvb2dsZSBBbmFseXRpY3Mgb2YgdGhlIGNoYW5nZVxuICAgICAgICBpZiAoIHR5cGVvZiB3aW5kb3cuZ2EgIT09ICd1bmRlZmluZWQnICkge1xuICAgICAgICAgIC8vIFVuaXZlcnNhbCBBbmFseXRpY3NcbiAgICAgICAgICB3aW5kb3cuZ2EoJ3NlbmQnLCAncGFnZXZpZXcnLCByZWxhdGl2ZVVybCk7XG4gICAgICAgIH0gZWxzZSBpZiAoIHR5cGVvZiB3aW5kb3cuX2dhcSAhPT0gJ3VuZGVmaW5lZCcgKSB7XG4gICAgICAgICAgLy8gTGVnYWN5IGFuYWx5dGljc1xuICAgICAgICAgIHdpbmRvdy5fZ2FxLnB1c2goWydfdHJhY2tQYWdldmlldycsIHJlbGF0aXZlVXJsXSk7XG4gICAgICAgIH1cbiAgICAgICAgICAgIFxuXG4gICAgICAgIC8vIEluZm9ybSBHb29nbGUgQW5hbHl0aWNzIG9mIHRoZSBjaGFuZ2VcbiAgICAgICAgaWYgKCB0eXBlb2Ygd2luZG93Ll9nYXEgIT09ICd1bmRlZmluZWQnICkge1xuICAgICAgICAgIHdpbmRvdy5fZ2FxLnB1c2goWydfdHJhY2tQYWdldmlldycsIHJlbGF0aXZlVXJsXSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBJbmZvcm0gUmVJbnZpZ29yYXRlIG9mIGEgc3RhdGUgY2hhbmdlXG4gICAgICAgIGlmICggdHlwZW9mIHdpbmRvdy5yZWludmlnb3JhdGUgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiB3aW5kb3cucmVpbnZpZ29yYXRlLmFqYXhfdHJhY2sgIT09ICd1bmRlZmluZWQnICkge1xuICAgICAgICAgIHJlaW52aWdvcmF0ZS5hamF4X3RyYWNrKHVybCk7XG4gICAgICAgICAgLy8gXiB3ZSB1c2UgdGhlIGZ1bGwgdXJsIGhlcmUgYXMgdGhhdCBpcyB3aGF0IHJlaW52aWdvcmF0ZSBzdXBwb3J0c1xuICAgICAgICB9Ki9cblxuXG5cblxuXG59KTsgLy9iYXJiYS5ob29rcy5hZnRlckxlYXZlKChkYXRhKSA9PlxuXG4gIFxufSAvL2V4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGluaXQoKVxuIiwiXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpbml0KCkge1xuXG5cblxudmFyIHJhZGlvc2NyaXB0bG9hZGVkLCAvLyBzZXQgYXMgdW5kZWZpbmVkIGluaXRpYWxseTsvL1xuICAgIHNjc2pzb25vYmplY3QsIC8vIG5ldyB0cmFja1xuICAgIGFjdGl2ZXNjc2pzb25vYmplY3QsIC8vIGFjdGl2ZSB0cmFja1xuICAgIG5ld2l0ZW11cmwsXG4gICAgaXRlbXVybCxcbiAgICBkaXIgPSB0aGVtZV9kaXJlY3Rvcnk7XG5cbiAgLy8gIHNvdW5kO1xuXG5cblxuLy9jb25zb2xlLmxvZyhcImlucC1yYWRpby1sb2FkZXIuanMgcnVubmluZy4gVGhpcyBvbmx5IGxvYWRzIG9uY2VcIilcbi8vY29uc29sZS5sb2coXCJ0aGVtZV9kaXJlY3RvcnlcIiArIGRpcitcIlwiKTtcblxuLy8gIGpRdWVyeShkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oJCkge1xuXG4gICAgLy8gY29uc29sZS5sb2coXCJyYWRpb3NjcmlwdGxvYWRlZCBvdXQgc2lkZSBpZiBkZWZpbmVkOiBjdXJyZW50bHkgaXMgXCIrcmFkaW9zY3JpcHRsb2FkZWQrXCJcIiApXG4gICAgIGZ1bmN0aW9uIGNoZWNrU2NyaXB0KCl7XG5cbiAgICAgICAgaWYgKHR5cGVvZiByYWRpb3NjcmlwdGxvYWRlZCA9PT0gJ3VuZGVmaW5lZCcpIHsgLy8gaWYgdW5kZWZpbmVkIHdlIHdhbnQgdG8gc2V0IHVwIHRoZSByYWRpbyAgICAgIFxuICAgICBcbiAgICAgICAgICAgIC8vaWYgKCQoJ2JvZHkuc2luZ2xlLXJhZGlvLCBib2R5LnBvc3QtdHlwZS1hcmNoaXZlLXJhZGlvJykubGVuZ3RoID4gMCkgeyAvLy0gYnV0IG9ubHkgaWYgd2UgaGF2ZSBhIHJhZGlvIGl0ZW0gLSBvciBzZXQgdXAgcmVnYXJkbGVzcz9cbiAgICAgICAgICAgIGlmICgkKCcucmFkaW8tY29udGFpbmVyJykubGVuZ3RoID4gMCkgeyAvLyBpZiBjb250YWluZXIgZXhpc3RzIC0gXG5cbiAgICAgICAgICAgICAvL3dhczogIGNvbnNvbGUubG9nKFwiJCgnYm9keS5zaW5nbGUtcmFkaW8sIGJvZHkucG9zdC10eXBlLWFyY2hpdmUtcmFkaW8nKVwiICk7XG4gICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwiJCgnYm9keS5zaW5nbGUtcmFkaW9cIiApO1xuICAgICAgICAgICAgLy8gIG5ld2l0ZW11cmwgPSAkKCcjc2hvdy1kZXRhaWxzJykuZGF0YShcInJhZGlvLWxpbmtcIik7IC8vIHRoaXMgaXMgYSBzYyB1cmwgLSBidXQgb25seSBleGlzdCBvbiAuc2luZ2xlLXJhZGlvXG4gICAgICAgICAgICAvLyAgY29uc29sZS5sb2coXCJuZXcgdXJsIGl0ZW0gPVwiK25ld2l0ZW11cmwrXCJcIilcbiAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcImV4aXN0aW5nIHVybCBpdGVtID1cIitpdGVtdXJsK1wiXCIpXG5cblxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgaXRlbXVybCA9PT0gJ3VuZGVmaW5lZCcpIHsgLy8gaWYgb2JqZWN0IG5vdCBkZWZpbmVkIHlldC5cbiAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBpZiBub3QgZGVmaW5lZCB5ZXQsIHdlIG5lZWQgdG8gZmluZCB0aGUgc2Nzam9ub2JqZWN0XG4gICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGFuZCBoZWNhdXNlIHdlIGFyZSBvbiBhIHNpbmdsZSByYWRpbyBwYWdlLCB0aGVyZSBzaG91bGQgdGhlIGZpcnN0IGF2YWlsYWJsZSBkYXRhIGF0dHJpYnV0ZVxuICAgICAgICAgICAgICAgICAgICAgICAgIC8vICBpdGVtdXJsID0gJCgnI3JhZGlvLWNvZGUnKS5kYXRhKFwidXJsXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJCgnYm9keScpLmhhc0NsYXNzKCdzaW5nbGUtcmFkaW8nKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByYWRpb3NjcmlwdGxvYWRlZCA9IHRydWU7ICAvLyBub3cgZGVmaW5lZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW11cmwgPSAkKCcjc2hvdy1kZXRhaWxzJykuZGF0YShcInJhZGlvLWxpbmtcIik7IC8vIHRoaXMgaXMgYSBzYyB1cmwgYnV0IG9ubHkgZXhpc3Qgb24gdGhlIHNpbmdsZSBwYWdlIGF0bSBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gcGVybWFsaW5rIHRvIGEgdHJhY2tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgdHJhY2tfdXJsID0gaXRlbXVybDsvL2ZlZWRzY2xpbms7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coJ2JvZHkuc2luZ2xlcmFkaW8nKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coJ2l0ZW11cmwgb24gc2luZ2xlIHJhZGlvIHBhZ2UgPScraXRlbXVybCsnJylcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlbG9hZF9qcygnJytkaXIrJy9kaXN0L2pzL2lucC1yYWRpb192NC5qcycpOyBcblxuICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCQoJ2JvZHknKS5oYXNDbGFzcygncG9zdC10eXBlLWFyY2hpdmUtcmFkaW8nKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAvL0FyY2hpdmUgcGFnZXNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICBjb25zb2xlLmxvZygnYm9keS5wb3N0LXR5cGUtYXJjaGl2ZS1yYWRpby5wYWdlZCcpXG4gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFkaW9zY3JpcHRsb2FkZWQgPSB0cnVlOyAgLy8gbm93IGRlZmluZWRcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkKCdib2R5JykuaGFzQ2xhc3MoJ3BhZ2VkJykpIHsgLy8gbm90IG9uIHRoZSBmaXJzdCBwYWdlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcInBhZ2VkXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbXVybCA9ICQoJy5jb250YWluZXIucmFkaW8taXRlbXMgbGk6Zmlyc3QnKS5kYXRhKFwidHJhY2tsaW5rXCIpOyAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsgLy8gb24gdGhlIGZpcnN0IHBhZ2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtdXJsID0gJCgnLnRvcC1jb250YWluZXIgbGk6Zmlyc3QnKS5kYXRhKFwidHJhY2tsaW5rXCIpOyAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coXCJlbHNlIGl1bm5pdD8gXCIpXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIml0ZW11cmwgPSBcIiAraXRlbXVybCArXCJcIik7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gcGVybWFsaW5rIHRvIGEgdHJhY2tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHRyYWNrX3VybCA9IGl0ZW11cmw7Ly9mZWVkc2NsaW5rO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWxvYWRfanMoJycrZGlyKycvZGlzdC9qcy9pbnAtcmFkaW9fdjQuanMnKTsgXG5cbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSAgZWxzZSBpZiAoJCgnYm9keScpLmhhc0NsYXNzKCdob21lJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gSG9tZSBQYWdlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2JvZHkuaG9tZScpXG4gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFkaW9zY3JpcHRsb2FkZWQgPSB0cnVlOyAgLy8gbm93IGRlZmluZWRcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbXVybCA9ICQoJy5yYWRpby1pdGVtIGxpOmZpcnN0JykuZGF0YShcInRyYWNrbGlua1wiKTsgIFxuIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwiZWxzZSBpdW5uaXQ/IFwiKVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJpdGVtdXJsID0gXCIgK2l0ZW11cmwgK1wiXCIpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHBlcm1hbGluayB0byBhIHRyYWNrXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0cmFja191cmwgPSBpdGVtdXJsOy8vZmVlZHNjbGluaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVsb2FkX2pzKCcnK2RpcisnL2Rpc3QvanMvaW5wLXJhZGlvX3Y0LmpzJyk7IFxuXG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoJCgnLnNvdW5kLWJsb2NrJykubGVuZ3RoID4gMCl7IFxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwid2UgaGF2ZSBhIHNvdW5kYmxvY2tcIik7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGlmIHRoZXJlJ3MgbW9yZSB0aGFuIG9uZSBpdGVtIC0gaW0gbm90IHN1cmUgd2UgbmVlZCB0byBydW4gdGhpcyB0d2ljZT9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHRoZSBzY3JpcHQgSSBsb2FkIGluLCBzaG91bGQgYmUgYWJsZSB0byBjaGVjayAtIHNvIG1heWJlIGp1c3QgbG9hZCB0aGUgZmlyc3Qgb25lP1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gdGhpcyBjdXJyZW50bHkgbm90IGFibGUgdG8gcmV0cmVpdmUgdGhlIGFzc29jaWF0ZWQgZGF0YSAodHJha2NsaW5rKVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiJHRoaXNcIiArICQodGhpcykrXCJcIilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGl0ZW11cmwgPSAgJCgnYm9keSAucmFkaW8taXRlbTpmaXJzdCcpLmRhdGEoXCJ0cmFja2xpbmtcIik7IC8vIHB1bGwgaW4gdGhlIGZpcnN0IGl0ZW0gb25seT9cblxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgJCgnLnJhZGlvLWl0ZW0nKS5lYWNoKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcInJhZGlvIGl0ZW0gZWFjaFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgJHRoaXNpdGVtID0gJCh0aGlzKS5jbG9zZXN0KCcucmFkaW8taXRlbScpOyBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmFkaW9zY3JpcHRsb2FkZWQgPSB0cnVlOyAgLy8gbm93IGRlZmluZWRcblxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiJHRoaXNpdGVtIFwiICsgJHRoaXNpdGVtICtcIlwiKTtcblxuICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBpdGVtdXJsID0gJHRoaXNpdGVtLmRhdGEoJ3RyYWNrbGluaycpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcInJhZGlvIGJsb2NrIGl0ZW0gaXRlbXVybCA9IFwiICtpdGVtdXJsICtcIlwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgY29uc29sZS5sb2coXCJzb3VuZCBibG9jayB0cmFja2xpbmsgXCIgKyAkdGhpc2l0ZW0uZGF0YShcInRyYWNrbGlua1wiKSArXCJcIik7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBwZXJtYWxpbmsgdG8gYSB0cmFjayAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciB0cmFja191cmwgPSBpdGVtdXJsOy8vZmVlZHNjbGluaztcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwidHJhY2tfdXJsIFwiICt0cmFja191cmwgK1wiXCIpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWxvYWRfanMoJycrZGlyKycvZGlzdC9qcy9pbnAtcmFkaW9fdjQuanMnKTsgXG4gICAgICAgICAgICAgICAgICAgICAgXG5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICBcbi8vICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwic291bmQgYmxvY2sgdHJhY2tsaW5rIFwiICsgJHRoaXNpdGVtLmRhdGEoXCJ0cmFja2xpbmtcIikgK1wiXCIpO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9pdGVtdXJsID0gJCgnLnNvdW5kLWJsb2NrIC5yYWRpby1pdGVtJykuZGF0YShcInRyYWNrbGlua1wiKTsgLy8gdGhpcyBpcyBhIHNjIHVybCBidXQgb25seSBleGlzdCBvbiB0aGUgc2luZ2xlIHBhZ2UgYXRtIFxuXG5cbiAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBwZXJtYWxpbmsgdG8gYSB0cmFja1xuICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgdmFyIHRyYWNrX3VybCA9IGl0ZW11cmw7Ly9mZWVkc2NsaW5rO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9yZWxvYWRfanMoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODg4OC9pbnAtd3Avd3AtY29udGVudC90aGVtZXMvaW5wZXJzcGVjdGl2ZXJlY29yZHMvZGlzdC9qcy9pbnAtcmFkaW9fdjQuanMnKTsgXG5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwiZWxzZSBpdW5uaXQ/IFwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdib2R5IC0gYnV0IHdlIHdvbnQgaGF2ZSBhIHJhZGlvIGl0ZW0geWV0IC0gc28ga2VlcCBsb29rIGZvciBhdHRyY2hhbmdlIHRvIHRoZSBib2R5IGNsYXNzPycgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBoZXJlIEkgd2FudCB0byBsb29rIGZvciBkb20gY2hhbmdlcyBhbmQgdGhlbm4gd2hlbm4gdGhleSBoYXBwZW5kIHdlIHJ1biAtIGNoZWNrU2NyaXB0KCkgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9jaGVja1NjcmlwdCgpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gVGhpcyBtYWtlcyBhIGxvdCBjaGFuZ2VzIGFuZCB0aGVuIHJ1bnMgaXQgaW1tZWRpYXRlbHkgYWdhaW4gLSBub3Qgc3VyZSB0aGlzIGlzIHZlcnkgZ29vZCBhcHByYW9jaFxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJChcImJvZHlcIikuYXR0cmNoYW5nZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFja1ZhbHVlczogdHJ1ZSwgLy8gc2V0IHRvIHRydWUgc28gdGhhdCB0aGUgZXZlbnQgb2JqZWN0IGlzIHVwZGF0ZWQgd2l0aCBvbGQgJiBuZXcgdmFsdWVzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oZXZudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmKGV2bnQuYXR0cmlidXRlTmFtZSA9PSBcImNsYXNzXCIpIHsgLy8gd2hpY2ggYXR0cmlidXRlIHlvdSB3YW50IHRvIHdhdGNoIGZvciBjaGFuZ2VzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coXCJhIGNsYXNzIGNoYW5nZXMgZXhpc3RlZFwiKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB2YXIgYm9keWNsYXNzID0gJChcImJvZHlcIikuYXR0cihcImNsYXNzXCIpOyBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8vIGNvbnNvbGUubG9nKGJvZHljbGFzcyk7IFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKGV2bnQubmV3VmFsdWUpOyBcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9zdGFydCByZXZpZXcgdGhpcyAtIGVuc3VyZSBhbGwgaWYgc3RhdGVtbmVudHMgYXJlIGNvbnNvbGlkYXRlZCB0byBlbnN1cmUgSSdtIG5vdCBydW5uaW5nIGFueXRoaW5nIG1vcmUgdGhhbiBvbmNlXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGV2bnQubmV3VmFsdWUuc2VhcmNoKC9oYXMtc291bmQtYmxvY2svaSkgPT0gLTEpe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coXCJ3ZSBkb250IGhhdmUgYSBzb3VuZCBibG9jayBjbGFzcyAtIGRvIG5vdGhpbmdcIik7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKFwid2UgRE8gaGF2ZSBhIGJsb2NrIGNsYXNzIC0gcnVuIHNjcmlwdCBhZ2FpblwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGVja1NjcmlwdCgpOyAvLyBpbml0aWFsIHJ1biBcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHJldmlldyB0aGlzIFBhcnQgMiAtIGVzdGFibGlzaCB3aHkgYWdhaW4gd2UgbmVlZCB0byBydW4gdGhpcyBvbiBhcmNoaXZlIHBhZ2U/XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChldm50Lm5ld1ZhbHVlLnNlYXJjaCgvcG9zdC10eXBlLWFyY2hpdmUtcmFkaW8vaSkgPT0gLTEpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL2lmKChldm50Lm5ld1ZhbHVlLnNlYXJjaCgvcG9zdC10eXBlLWFyY2hpdmUtcmFkaW8vaSkgPT0gLTEpIHx8IChldm50Lm5ld1ZhbHVlLnNlYXJjaCgvc2luZ2xlLXJhZGlvL2kpID09IC0xKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgLy8gXCJvcGVuXCIgaXMgdGhlIGNsYXNzIG5hbWUgeW91IHNlYXJjaCBmb3IgaW5zaWRlIFwiY2xhc3NcIiBhdHRyaWJ1dGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwid2UgZG9udCBoYXZlIGFyY2hpdmUgcmFkaW8gY2xhc3MgT1Igc291bmQgYmxvY2sgY2xhc3NcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8geWVhaCBidXQgdGhpcyB3b3VsZCBhbHNvIGJlIHRydWUgbWVhbiB0aGF0IGlmIHRoZSByYWRpbyB3b25lIGRpZCBleGlzdCwgYnV0IHRoZSBhcmNoaXZlIGRpZG4ndCBcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICBjb25zb2xlLmxvZyhcImVsc2UgLSBzbyB3ZSBtaWdodCBoYXZlIHRoZSBhcmNoaXZlIG9yIHNvdW5kYmxvY2sgY2xhc3MgXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coXCJ3ZSBETyBoYXZlIHBvc3QtdHlwZS1hcmNoaXZlLXJhZGlvIC0gcnVuIHNjcmlwdCBhZ2FpblwiKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoZWNrU2NyaXB0KCk7IC8vIGluaXRpYWwgcnVuIFxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9Ly9pZihldm50Lm5ld1ZhbHVlLnNlYXJjaCgvcG9zdC10eXBlLWFyY2hpdmUtcmFkaW8vaSkgPT0gLTEpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGV2bnQubmV3VmFsdWUuc2VhcmNoKC9ob21lL2kpID09IC0xKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9pZigoZXZudC5uZXdWYWx1ZS5zZWFyY2goL3Bvc3QtdHlwZS1hcmNoaXZlLXJhZGlvL2kpID09IC0xKSB8fCAoZXZudC5uZXdWYWx1ZS5zZWFyY2goL3NpbmdsZS1yYWRpby9pKSA9PSAtMSkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IC8vIFwib3BlblwiIGlzIHRoZSBjbGFzcyBuYW1lIHlvdSBzZWFyY2ggZm9yIGluc2lkZSBcImNsYXNzXCIgYXR0cmlidXRlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcIndlIGRvbnQgaGF2ZSBhcmNoaXZlIHJhZGlvIGNsYXNzIE9SIHNvdW5kIGJsb2NrIGNsYXNzXCIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHllYWggYnV0IHRoaXMgd291bGQgYWxzbyBiZSB0cnVlIG1lYW4gdGhhdCBpZiB0aGUgcmFkaW8gd29uZSBkaWQgZXhpc3QsIGJ1dCB0aGUgYXJjaGl2ZSBkaWRuJ3QgXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAgY29uc29sZS5sb2coXCJlbHNlIC0gc28gd2UgbWlnaHQgaGF2ZSB0aGUgYXJjaGl2ZSBvciBzb3VuZGJsb2NrIGNsYXNzIFwiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwid2UgRE8gaGF2ZSBwb3N0LXR5cGUtYXJjaGl2ZS1yYWRpbyAtIHJ1biBzY3JpcHQgYWdhaW5cIik7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGVja1NjcmlwdCgpOyAvLyBpbml0aWFsIHJ1biBcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfS8vaWYoZXZudC5uZXdWYWx1ZS5zZWFyY2goL3Bvc3QtdHlwZS1hcmNoaXZlLXJhZGlvL2kpID09IC0xKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gZW5kIHJldmlldyB0aGlzIFBhcnQgMiBcblxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vZW5kIHJldmlldyB0aGlzIC0gUGFydCAxXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9Ly8gaWYoZXZudC5hdHRyaWJ1dGVOYW1lID09IFwiY2xhc3NcIikgeyBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSAvL2Vsc2VcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKFwiaXRlbXVybCA9XCIraXRlbXVybCtcIlwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vaHR0cHM6Ly9kZXZlbG9wZXJzLnNvdW5kY2xvdWQuY29tL2RvY3MvYXBpL3Nka3MjYXV0aGVudGljYXRpb25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgU0MuaW5pdGlhbGl6ZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpZW50X2lkOiAnODUzZmRiNzlhMTRhOWVkNzQ4ZWM5ZmU0ODJlODU5ZGQnIC8vIHdobydpcyB0aGlzIGNsaWVudCBJRD8gV29ya3MgbG9jYWxseSBhbmQgaW4gaW5jb2duaXRvXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL2NsaWVudF9pZDogJzk1ZjIyZWQ1NGE1YzI5N2IxYzQxZjcyZDcxMzYyM2VmJyAvLyBDbGllbnQgaWQgZm91ZG4gaGVyZSBodHRwczovL2dpdGh1Yi5jb20vbWVkaWFlbGVtZW50L21lZGlhZWxlbWVudC9pc3N1ZXMvMjUwMSAtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNsaWVudF9pZDogJ3NzVjFRZmgzaEdjQkhNY3VaM2J6M3hIYjNhb1A1S1VCJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vY2xpZW50X2lkOiAnOGQ3MjBhMGY0NjUzMWIyNzVjN2M5YTgyNjE5YzlkNDYnXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9jbGllbnRfaWQ6J1lVS1hvQXJGY3FybFFuOXRmTkh2dnlmbkRJU2owNHprJy8vaHR0cHM6Ly9naXRodWIuY29tL3l0ZGwtb3JnL3lvdXR1YmUtZGwvYmxvYi9tYXN0ZXIveW91dHViZV9kbC9leHRyYWN0b3Ivc291bmRjbG91ZC5weVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy9jbGllbnRfaWQ6ICdiZGE0YWRhODY5NGRiMDZlZmNhYzljZjk3Yjg3MmIzZSdcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gcmVkaXJlY3RfdXJpOiAnLy9sb2NhbGhvc3Q6ODg4OC9pbnAtd3Avd3AtY29udGVudC90aGVtZXMvaW5wZXJzcGVjdGl2ZXJlY29yZHMvY2FsbGJhY2suaHRtbCdcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIC8vVW5jYXVnaHQgKGluIHByb21pc2UpIERPTUV4Y2VwdGlvbjogVGhlIHBsYXkoKSByZXF1ZXN0IHdhcyBpbnRlcnJ1cHRlZCBieSBhIGNhbGwgdG8gcGF1c2UoKS5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgLy9odHRwczovL2RldmVsb3BlcnMuZ29vZ2xlLmNvbS93ZWIvdXBkYXRlcy8yMDE3LzA2L3BsYXktcmVxdWVzdC13YXMtaW50ZXJydXB0ZWQgPCByZXZpZXdcblxuICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIlNDXCIrIFNDICtcIlwiKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbXlDdXN0b21GdW5jdGlvbiA9IGZ1bmN0aW9uICh0cmFjaykge1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKFwibXkgY3VzdG9tIGZ1bmNpb24gbmV3IHRyYWNrXCIgKyB0cmFjay50aXRsZSArXCJcIiApO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKFwibXkgY3VzdG9tIGZ1bmNpb24gbmV3IHRyYWNrIGlkXCIgKyB0cmFjay5pZCArXCJcIiApOyAvLyB0cmFjay5pZCBnaXZlcyB5b3UgdGhlIElEIG9mIHRoZSBzb25nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcInRyYWNrIGlkXCIgKyB0cmFjay5pZCArXCJcIiApOyAvLyB0cmFjay5pZCBnaXZlcyB5b3UgdGhlIElEIG9mIHRoZSBzb25nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHNldHRyYWNraWQgPSB0cmFjay5pZDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgJGFjdGl2ZWl0ZW0gPSAkKCcuc2MtdHJhY2tzbGlzdCBsaSBhW2hyZWY9XCInK2l0ZW11cmwrJ1wiXScpLmNsb3Nlc3QoJ2xpJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJyRhY3RpdmVpdGVtIHVybCcgKyBpdGVtdXJsKyBcIlwiKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gJCgnYm9keScpLmRhdGEoXCJzY2pzb25cIiwgc2V0dHJhY2tpZCk7IC8vIHNldCBpZCB0byBib2R5IGRhdGFcbiAgICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnYm9keScpLmF0dHIoXCJkYXRhLXNjanNvblwiLCBzZXR0cmFja2lkKTsgLy8gc2V0IGlkIHRvIGJvZHkgZGF0YVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoJ2JvZHknKS5hdHRyKFwiZGF0YS1hY3RpdmVzY3VybFwiLGl0ZW11cmwpOyAvLyB0aGlzIHRoZSBhY3RpdmUgaXRlbSBpblxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJCgnLnNjLXRyYWNrc2xpc3QgbGknKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8kKCcuc2MtdHJhY2tzbGlzdCBsaScpLmFkZENsYXNzKCdub3QtYWN0aXZlJyk7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkYWN0aXZlaXRlbS5hZGRDbGFzcygnYWN0aXZlJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAvLyAkYWN0aXZlaXRlbS5hZGRDbGFzcygnaGVsbG8nKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gJGFjdGl2ZWl0ZW0uY3NzKFwiYmFja2dyb3VuZC1jb2xvclwiLFwib3JhbmdlXCIpXG5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCckYWN0aXZlaXRlbScgKyAkYWN0aXZlaXRlbSsgXCJcIik7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcblxuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24gcmVsb2FkX2pzKHNyYykgeyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAkKCc8c2NyaXB0PicpLmF0dHIoJ3NyYycsIHNyYykuYXBwZW5kVG8oJ2hlYWQnKTsgLy8gYXBwZW5kIHRoZSBzY3JpcHQgZm9yIHRoZSBmaXJzdCB0aW1lP1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJyZWxvYWRfanMoc3JjKVwiKTtcblxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbiB3YWl0KCl7IC8vIHdhaXQgZm9yIHRoZSBzY3JpcCB0byBoYXZlIGxvYWRlZCAtIHRoaXMgd29ya3MgLSBidXQgcHJvYmFibHkgbm90IGEgdmVyeSBnb29kIHdheSBvZiBhcHByb2FjaGluZyBpdFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU0MucmVzb2x2ZSh0cmFja191cmwpLnRoZW4obXlDdXN0b21GdW5jdGlvbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KHdhaXQsIDIwMDApO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0gLy8gZnVuY3Rpb24gcmVsb2FkX2pzKHNyYylcbiBcblxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAobmV3aXRlbXVybCA9PT0gaXRlbXVybCkge1xuICAgICAgXG4gICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnaXRlbXVybCcraXRlbXVybCtcIlwiKTsgICAgICAgICAgICBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIH0gZWxzZSB7IC8vIGlmIGFscmVhZHkgZGVmaW5lZFxuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIH0vLyBpZiBcblxuXG4gICAgICAgICAgICAvLyAuc2luZ2xlIHJhZGlvICAgICAgXG4gICAgICAgICAgICAvKn0gZWxzZSBpZiAoJCgnYm9keScpLmxlbmd0aCA+IDApIHtcblxuICAgICAgICAgICAgY29uc29sZS5sb2coJ2lmIGJvZHkgLSBpLmUgbm90IHNpbmdsZSBvciByYWRpbyBhcmNoaXZlIC0gYW5kIHNjcmlwdCBub3QgZGVmaW5lZCB5ZXQnKTtcbiAgICAgICAgICAgIGNoZWNrU2NyaXB0KCk7IC8vIGdvIGJhY2sgYW5kIGNoZWNrIGFnYWluP1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ2NoZWNrU2NyaXB0KCk7IC8vIGdvIGJhY2sgYW5kIGNoZWNrIGFnYWluPycpO1xuICAgICAgICAgICAgICAqL1xuXG4gICAgICAgICAgICB9OyAgLy8gaWYgLnJhZGlvLWNvbnRhaW5lclxuXG5cbiAgICAgICAgfSBlbHNlIHsgLy8gaWYgdGhlIHJhZGlvIHNjcmlwdCBhbHJlYWR5IGRlZmluZWQ6XG4gICAgICAgIFxuXG4gICAgICAgICAgY29uc29sZS5sb2coJ3JhZGlvIHNjcmlwdCBkZWZpbmVkJyk7XG4gICAgICAgIC8vICBjb25zb2xlLmxvZyhcInJhZGlvIHNjcmlwdCBhbHJlYWR5IGRlZmluZWQgLSBzbyBubyBuZWVkIHRvIHJlbG9hZCBpdFwiKTsgLy9cblxuICAgICAgICAgICAgIGlmICgkKCdib2R5JykuaGFzQ2xhc3MoJ3Bvc3QtdHlwZS1hcmNoaXZlLXJhZGlvJykpIHtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiUmFkaW8gc2NyaXB0IGRlZmluZWQgLSBwb3N0LXR5cGUtYXJjaGl2ZS1yYWRpb1wiKTtcbiAgICAgICAgICAgICAvL2lmIGFscmVhZHkgZGVmaW5lZCBvbiBhcnZoaWNlIHBvc3QgLSBtYXliZSB3ZSBuZWVkIHRvIGFkZC9jaGFuZ2UgdGhlIGNsYXNzZXMgdG8gcmVzb3ZsZSB0aGUgZm9sbG93aW5nIGlzc3VlOiBcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgLy8gSVNTVUVTIC0gd2hlbiBjb21pbmcgZnJvbSBzb213aGVyZSBlbHNlIHRoZSBhcmNoaXZlIHBhZ2UgbmVlZHMgdG8gaGF2ZSBhIGxpbmsgZm9yIHBlb3BsZSB0byBwbGF5IHRoZSB0b3Agb25lLlxuICAgICAgICAgICAgICAvLyBJIHRoaW5rIGl0IGN1cnJlbnRseSBqdXN0IHBhdXNlcyB0aGUgZXhpc3RpbmcgdHJhY2sgaWYgeW91IGNsaWNrIHRoZSBwbGF5P1xuXG4gICAgICAgICAgICAgIFxuICAgICAgICAgICAgICB9IC8vIGlmIGJvZHkgaGFzIGNsYXNzOiAucG9zdC10eXBlLWFyY2hpdmUtcmFkaW9cblxuXG4gICAgICAgIH0gLy8gIGlmICh0eXBlb2YgcmFkaW9zY3JpcHRsb2FkZWQgPT09ICd1bmRlZmluZWQnKVxuXG5cbiAgICAgfSAvLyBmdW5jdGlvbiBjaGVja1NjcmlwdCgpXG5cbiAgICAgV2FpdEZvclNvdW5kY2xvdWQoKTtcblxuICAgIGZ1bmN0aW9uIFdhaXRGb3JTb3VuZGNsb3VkKCkge1xuICAgICAgXG4gICAgICBpZih0eXBlb2YgU0MgPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgICAgc2V0VGltZW91dChXYWl0Rm9yU291bmRjbG91ZCwgNTAwKTtcbiAgICAgICAgfSBlbHNlIHtcblxuICAgICAgICAgIGNoZWNrU2NyaXB0KCk7IC8vIGluaXRpYWwgcnVuXG5cbiAgICAgICAgLyogICBTQy5pbml0aWFsaXplKHtcbiAgICAgICAgICAgICAgY2xpZW50X2lkOiAneHh4eHh4eHgnXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgU0Mub0VtYmVkKHRyYWNrX3VybCwge30pLnRoZW4oZnVuY3Rpb24ob0VtYmVkKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ29FbWJlZCByZXNwb25zZTogJywgb0VtYmVkKTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgKi8gXG4gICAgICAgIH1cblxuICAgICAgLy8gaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMzA5MDYxMzQvc2MtaXMtbm90LWRlZmluZWQtd2hlbi11c2luZy1zb3VuZGNsb3VkLXNka1xuICAgICAgLy8gdGFsayBhYm91dCB0aGkgaHR0cHM6Ly9qc2hpbnQuY29tL2RvY3MvXG5cbiAgICB9XG5cblxuLy8gIH0pOyAvLy8gIEVORFMgIHJlYWQuUVVFUllcblxuICAgICBcbn0gLy9leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpbml0KClcbiIsIi8qISBzdnMuZGVzaWduIC0gYXBwLmpzICovXG5cbi8vIFBvbHlmaWxscy5cbi8vIGltcG9ydCBlczZQcm9taXNlIGZyb20gJ2VzNi1wcm9taXNlJztcbi8vIGltcG9ydCAnY2xhc3NsaXN0LXBvbHlmaWxsJztcblxuLy8gTGlicmFyaWVzLlxuLy8gaW1wb3J0ICdicm93c2Vybml6ci90ZXN0L2Nzcy9vYmplY3RmaXQnO1xuLy8gaW1wb3J0ICdicm93c2Vybml6cic7XG4vLyBpbXBvcnQgcGljdHVyZWZpbGwgZnJvbSAncGljdHVyZWZpbGwnO1xuLy8gaW1wb3J0IHN2ZzRldmVyeWJvZHkgZnJvbSAnc3ZnNGV2ZXJ5Ym9keSc7XG4vLyBpbXBvcnQgcGFjZSBmcm9tICdwYWNlLXByb2dyZXNzJztcblxuLy8gVXRpbGl0aWVzLlxuIFxuaW1wb3J0IHsgZG9tUmVhZHkgfSBmcm9tICcuL3V0aWxpdGllcy9oZWxwZXJzJztcbmltcG9ydCB7IGRldkdyaWQgfSBmcm9tICcuL3V0aWxpdGllcy9oZWxwZXJzJztcbmltcG9ydCB7IFNldEFwcEhlaWdodCB9IGZyb20gJy4vdXRpbGl0aWVzL2hlbHBlcnMnO1xuXG5pbXBvcnQgeyBkZXRlY3RUb3VjaCB9IGZyb20gJy4vdXRpbGl0aWVzL2hlbHBlcnMnO1xuaW1wb3J0IHsgb3JpZW50YXRpb24gfSBmcm9tICcuL3V0aWxpdGllcy9oZWxwZXJzJztcbmltcG9ydCB7IG5hdmlnYXRpb24gfSBmcm9tICcuL3V0aWxpdGllcy9oZWxwZXJzJztcblxuLy8gTW9kdWxlcy5cbi8vaW1wb3J0IGV4YW1wbGUgZnJvbSAnLi9tb2R1bGVzL2V4YW1wbGUvaW5kZXgnO1xuaW1wb3J0IGJhcmJhIGZyb20gJy4vbW9kdWxlcy9iYXJiYS9pbmRleCc7XG5pbXBvcnQgcmFkaW9sb2FkZXIgZnJvbSAnLi9tb2R1bGVzL3JhZGlvL2xvYWRlci9pbmRleCc7XG5cbmNvbnN0IGlucGFwcCA9IHtcbiAgaW5pdCgpIHtcbiAgICBjb25zb2xlLmxvZyhcImluaXRcIik7XG5cbiAgICAvLyBQb2x5ZmlsbHMgZXRjLlxuICAgIC8vIGVzNlByb21pc2UucG9seWZpbGwoKTtcbiAgICAvLyBwb2x5ZmlsbEFycmF5RnJvbSgpO1xuICAgIC8vIHBvbHlmaWxsQXJyYXlGaW5kKCk7XG4gICAgLy8gcG9seWZpbGxBcnJheUZpbmRJbmRleCgpO1xuICAgIC8vIHBvbHlmaWxsQXJyYXlJbmNsdWRlcygpO1xuICAgIC8vIHBpY3R1cmVmaWxsKCk7XG4gICAgLy8gc3ZnNGV2ZXJ5Ym9keSgpO1xuXG4gICAgLy8gU2V0dXAuXG4gICAgLy8gcGFjZS5zdGFydCgpO1xuICAgIC8vIGxhenlMb2FkKCk7XG5cbiAgICAvLyBNb2R1bGVzLlxuICAgICBkZXZHcmlkKCk7XG4gICAgIFNldEFwcEhlaWdodCgpO1xuICAgICBvcmllbnRhdGlvbigpO1xuICAgICBkZXRlY3RUb3VjaCgpOy8vIGRldGVybWluZSBpZiB3ZSdyZSBvbiB0b3VjaCBkZXZpY2Ugb3Igbm90XG4gICAgIGJhcmJhKCk7XG4gICAgIG5hdmlnYXRpb24oKTtcblxuICAgICByYWRpb2xvYWRlcigpO1xuXG4gXG4gIH1cblxufTtcblxuZG9tUmVhZHkoaW5wYXBwLmluaXQpOyJdLCJuYW1lcyI6WyJkb21SZWFkeSIsImZuIiwiZG9jdW1lbnQiLCJyZWFkeVN0YXRlIiwiYWRkRXZlbnRMaXN0ZW5lciIsImRldGVjdFRvdWNoIiwid2luZG93IiwiJCIsInJlbW92ZUNsYXNzIiwiYWRkQ2xhc3MiLCJzaSIsInN0eWxlU2hlZXRzIiwic3R5bGVTaGVldCIsInJ1bGVzIiwicmkiLCJsZW5ndGgiLCJzZWxlY3RvclRleHQiLCJtYXRjaCIsImRlbGV0ZVJ1bGUiLCJleCIsIlNldEFwcEhlaWdodCIsImFwcEhlaWdodCIsImRvYyIsImRvY3VtZW50RWxlbWVudCIsInN0eWxlIiwic2V0UHJvcGVydHkiLCJpbm5lckhlaWdodCIsIm5hdmlnYXRpb24iLCJzdmciLCJnZXRFbGVtZW50QnlJZCIsInMiLCJTbmFwIiwiaWRvdCIsInNlbGVjdCIsImlkb3RwYXRoIiwibWludXMiLCJpZG90UG9pbnRzIiwibm9kZSIsImdldEF0dHJpYnV0ZSIsIm1pbnVzUG9pbnRzIiwiaWRvdHBhdGhQb2ludHMiLCJ0b01pbnVzIiwiYW5pbWF0ZSIsImQiLCJtaW5hIiwiZWFzaW4iLCJ0b0lkb3QiLCJib2R5IiwibmF2IiwiYnV0dG9uIiwibWVudSIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJiZ2Nsb3NlIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJjaGlsZE5vZGVzIiwiZGlzcGxheSIsIm9uY2xpY2siLCJ0b2dnbGVyIiwiY2xhc3NOYW1lIiwiaW5kZXhPZiIsInJlcGxhY2UiLCJlIiwicHJldmVudERlZmF1bHQiLCJoYXNDbGFzcyIsIm9yaWVudGF0aW9uIiwid2lud2lkdGgiLCJ3aWR0aCIsIndpbmhlaWdodCIsImhlaWdodCIsIm9wYWNpdHkiLCJpbWFnZXNMb2FkZWQiLCJ3YWl0bG9hZGluZyIsInNldFRpbWVvdXQiLCJkZXZHcmlkIiwiJHRvZ2dsZSIsIiRjbGFzc3RhcmdldCIsImNsaWNrIiwicnRpbWVkZXYiLCJ0aW1lb3V0ZGV2IiwiZGVsdGFkZXYiLCJyZXNpemUiLCJEYXRlIiwicmVzaXplZW5kZGV2Iiwid2luZG93aGVpZ2h0IiwibWVudUNsYXNzZXMiLCJkYXRhIiwidGFyZ2V0IiwiZWFjaCIsIm5leHQiLCJ1cmwiLCJwYXRoIiwiY2xvc2VzdCIsInJlY29yZGFuaW1hdGlvbiIsImNvbnNvbGUiLCJsb2ciLCIkdGhpc2NvbnRhaW5lciIsIiR0aGlzY2lyY2xlIiwiZmluZCIsImNzcyIsImhvdmVyIiwiJHRoaXNzcXVhcmUiLCJob21lZ2FsbGVyeSIsIiR0aGlzZ2FsbGVyeSIsImZsaWNraXR5Iiwic2V0R2FsbGVyeVNpemUiLCJwZXJjZW50UG9zaXRpb24iLCJmYWRlIiwiYXV0b1BsYXkiLCJwYXVzZUF1dG9QbGF5T25Ib3ZlciIsImRyYWdnYWJsZSIsImZyZWVTY3JvbGwiLCJ3cmFwQXJvdW5kIiwiYXJyb3dTaGFwZSIsIngwIiwieDEiLCJ5MSIsIngyIiwieTIiLCJ4MyIsImhvbWVyZWxlYXNlZ2FsbGVyeSIsImV2ZW50c3ZpZXciLCIkYWN0aXZlaXRlbSIsInNjcm9sbFRvcCIsIm9mZnNldCIsInRvcCIsImdhbGxlcnkiLCIkYmxvY2siLCJGbGlja2l0eSIsImNyZWF0ZU1ldGhvZHMiLCJwdXNoIiwicHJvdG90eXBlIiwiX2NyZWF0ZVByZXZOZXh0Q2VsbHMiLCJvbiIsInNldFByZXZOZXh0Q2VsbHMiLCJjaGFuZ2VTbGlkZUNsYXNzZXMiLCJwcmV2aW91c1NsaWRlIiwibmV4dFNsaWRlIiwic2xpZGVzIiwic2VsZWN0ZWRJbmRleCIsInNsaWRlIiwibWV0aG9kIiwiZ2V0Q2VsbEVsZW1lbnRzIiwiZm9yRWFjaCIsImNlbGxFbGVtIiwiY2xhc3NMaXN0IiwiaW5pdCIsImFjdGl2ZWNhcm91c2VsIiwibGFzdElkIiwiY2Fyb3VzZWwiLCJxdWVyeVNlbGVjdG9yIiwiY2VsbHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiY2VsbEl0ZW1zIiwiY2VsbENvdW50IiwiY2VsbFdpZHRoIiwib2Zmc2V0V2lkdGgiLCJjZWxsSGVpZ2h0Iiwib2Zmc2V0SGVpZ2h0IiwiaXNIb3Jpem9udGFsIiwicm90YXRlRm4iLCJyYWRpdXMiLCJ0aGV0YSIsImFuZ2xlIiwiJHNjZW5laGVpZ2h0IiwiJGhlaWdodGl0ZW0iLCJzY2VuZWhlaWdodCIsIm91dGVySGVpZ2h0Iiwic2NlbmVoZWlndEl0ZW1zIiwiaXRlbWhlaWdodCIsInRvdGFsYW5nbGUiLCJhbmdsZXNlZ21lbnQiLCJoZWlnaHRJdGVtcyIsImhhbGZoZWlnaHQiLCJjYWxjaGVpZ2h0Iiwic2Nyb2xsSXRlbXMiLCJtYXAiLCJpZGVudGl0eSIsImF0dHIiLCJpdGVtIiwiZmlsdGVyIiwidHJhbnNmb3JtIiwieSIsInNjcm9sbCIsImZyb21Ub3AiLCJoYWxmZnJvbUJvdHRvbWl0ZW0iLCJyYXRpbyIsIndTIiwidGhpc2FuZ2xlIiwiY3VyIiwiaWQiLCJ0aGlzYXR0ciIsInByZXZBbGwiLCJjaGFuZ2VDYXJvdXNlbCIsImNlbGxTaXplIiwiTWF0aCIsInJvdW5kIiwidGFuIiwiUEkiLCJpIiwiY2VsbCIsImNlbGxBbmdsZSIsIm9uT3JpZW50YXRpb25DaGFuZ2UiLCJydGltZSIsInRpbWVvdXQiLCJkZWx0YSIsInJlc2l6ZWVuZCIsIiRjb250YWluZXIiLCJsaXN0aXRlbWlkIiwidG9nZ2xlQ2xhc3MiLCJsaXN0aXRlbWNvbnRlbnQiLCJ0ZXh0IiwiYmxvY2tzIiwiJHRoaXNibG9jayIsImhhc3JhZGlvYmxvY2siLCJhY3RpdmVyYWRpbyIsInBhdXNlZHJhZGlvIiwic3RpY2t5cmFkaW8iLCJtaW5pbWlzZWRyYWRpbyIsImJhcmJhIiwidmlld3MiLCJuYW1lc3BhY2UiLCJhZnRlckVudGVyIiwiZnJvbnRwYWdlIiwicmVsZWFzZWFyY2hpdmUiLCJhcnRpc3RhcmNoaXZlIiwiaG9va3MiLCJiZWZvcmVMZWF2ZSIsImxvYWRlZHJhZGlvIiwiYWZ0ZXJMZWF2ZSIsIm5leHRIdG1sIiwiaHRtbCIsInJlc3BvbnNlIiwiYm9keUNsYXNzZXMiLCJjdXJyZW50TWVudSIsImN1cnJlbnRQYWdlIiwiY3VycmVudE1lbnVBbmNlc3RvciIsImN1cnJlbnRNZW51UGFyZW50IiwiY3VycmVudFBhZ2VBbmNlc3RvciIsInJhZGlvc2NyaXB0bG9hZGVkIiwic2NzanNvbm9iamVjdCIsImFjdGl2ZXNjc2pzb25vYmplY3QiLCJuZXdpdGVtdXJsIiwiaXRlbXVybCIsImRpciIsInRoZW1lX2RpcmVjdG9yeSIsImNoZWNrU2NyaXB0IiwicmVsb2FkX2pzIiwic3JjIiwiYXBwZW5kVG8iLCJ3YWl0IiwiU0MiLCJyZXNvbHZlIiwidHJhY2tfdXJsIiwidGhlbiIsIm15Q3VzdG9tRnVuY3Rpb24iLCJhdHRyY2hhbmdlIiwidHJhY2tWYWx1ZXMiLCJjYWxsYmFjayIsImV2bnQiLCJhdHRyaWJ1dGVOYW1lIiwibmV3VmFsdWUiLCJzZWFyY2giLCJpbml0aWFsaXplIiwiY2xpZW50X2lkIiwidHJhY2siLCJzZXR0cmFja2lkIiwiV2FpdEZvclNvdW5kY2xvdWQiLCJpbnBhcHAiLCJyYWRpb2xvYWRlciJdLCJtYXBwaW5ncyI6IlNBQ2dCQSxRQUFULENBQWtCQyxFQUFsQixDQUFzQixDQUMzQixHQUFJQyxRQUFRLENBQUNDLFVBQVQsR0FBd0IsU0FBNUIsQ0FBdUMsQ0FDckNGLEVBQUUsR0FDRixPQUNELENBQ0RDLFFBQVEsQ0FBQ0UsZ0JBQVQsQ0FBMEIsa0JBQTFCLENBQThDSCxFQUE5QyxFQUNELENBRUQsU0FBZ0JJLFdBQVQsRUFBc0IsQ0FvQjNCLEdBQUksaUJBQWtCQyxNQUF0QixDQUNBLENBR0VDLENBQUMsQ0FBQyxNQUFELENBQUQsQ0FBVUMsV0FBVixDQUFzQixjQUF0QixFQUNBRCxDQUFDLENBQUMsTUFBRCxDQUFELENBQVVFLFFBQVYsQ0FBbUIsVUFBbkIsRUFJQSxHQUFJLENBQ0UsSUFBSyxJQUFJQyxFQUFULElBQWVSLFFBQVEsQ0FBQ1MsV0FBeEIsQ0FBcUMsQ0FDakMsSUFBSUMsVUFBVSxDQUFHVixRQUFRLENBQUNTLFdBQVQsQ0FBcUJELEVBQXJCLENBQWpCLENBQ0EsR0FBSSxDQUFDRSxVQUFVLENBQUNDLEtBQWhCLENBQXVCLFNBRXZCLElBQUssSUFBSUMsRUFBRSxDQUFHRixVQUFVLENBQUNDLEtBQVgsQ0FBaUJFLE1BQWpCLENBQTBCLENBQXhDLENBQTJDRCxFQUFFLEVBQUksQ0FBakQsQ0FBb0RBLEVBQUUsRUFBdEQsQ0FBMEQsQ0FDdEQsR0FBSSxDQUFDRixVQUFVLENBQUNDLEtBQVgsQ0FBaUJDLEVBQWpCLEVBQXFCRSxZQUExQixDQUF3QyxTQUV4QyxHQUFJSixVQUFVLENBQUNDLEtBQVgsQ0FBaUJDLEVBQWpCLEVBQXFCRSxZQUFyQixDQUFrQ0MsS0FBbEMsQ0FBd0MsUUFBeEMsQ0FBSixDQUF1RCxDQUNuREwsVUFBVSxDQUFDTSxVQUFYLENB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"]}